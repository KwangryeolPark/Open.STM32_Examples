
printf_CM4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08100000  08100000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003f40  081002a0  081002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003ec  081041e0  081041e0  000141e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  081045cc  081045cc  000145cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  081045d0  081045d0  000145d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         000001e0  10000000  081045d4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000034  100001e0  081047b4  000201e0  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  10000214  081047b4  00020214  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  000201e0  2**0
                  CONTENTS, READONLY
  9 .debug_info   00006a1f  00000000  00000000  00020210  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 000013bb  00000000  00000000  00026c2f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000748  00000000  00000000  00027ff0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000690  00000000  00000000  00028738  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  0003dae3  00000000  00000000  00028dc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   00007b58  00000000  00000000  000668ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    0018ca24  00000000  00000000  0006e403  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000050  00000000  00000000  001fae27  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00002c00  00000000  00000000  001fae78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

081002a0 <__do_global_dtors_aux>:
 81002a0:	b510      	push	{r4, lr}
 81002a2:	4c05      	ldr	r4, [pc, #20]	; (81002b8 <__do_global_dtors_aux+0x18>)
 81002a4:	7823      	ldrb	r3, [r4, #0]
 81002a6:	b933      	cbnz	r3, 81002b6 <__do_global_dtors_aux+0x16>
 81002a8:	4b04      	ldr	r3, [pc, #16]	; (81002bc <__do_global_dtors_aux+0x1c>)
 81002aa:	b113      	cbz	r3, 81002b2 <__do_global_dtors_aux+0x12>
 81002ac:	4804      	ldr	r0, [pc, #16]	; (81002c0 <__do_global_dtors_aux+0x20>)
 81002ae:	f3af 8000 	nop.w
 81002b2:	2301      	movs	r3, #1
 81002b4:	7023      	strb	r3, [r4, #0]
 81002b6:	bd10      	pop	{r4, pc}
 81002b8:	100001e0 	.word	0x100001e0
 81002bc:	00000000 	.word	0x00000000
 81002c0:	081041c8 	.word	0x081041c8

081002c4 <frame_dummy>:
 81002c4:	b508      	push	{r3, lr}
 81002c6:	4b03      	ldr	r3, [pc, #12]	; (81002d4 <frame_dummy+0x10>)
 81002c8:	b11b      	cbz	r3, 81002d2 <frame_dummy+0xe>
 81002ca:	4903      	ldr	r1, [pc, #12]	; (81002d8 <frame_dummy+0x14>)
 81002cc:	4803      	ldr	r0, [pc, #12]	; (81002dc <frame_dummy+0x18>)
 81002ce:	f3af 8000 	nop.w
 81002d2:	bd08      	pop	{r3, pc}
 81002d4:	00000000 	.word	0x00000000
 81002d8:	100001e4 	.word	0x100001e4
 81002dc:	081041c8 	.word	0x081041c8

081002e0 <strlen>:
 81002e0:	4603      	mov	r3, r0
 81002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 81002e6:	2a00      	cmp	r2, #0
 81002e8:	d1fb      	bne.n	81002e2 <strlen+0x2>
 81002ea:	1a18      	subs	r0, r3, r0
 81002ec:	3801      	subs	r0, #1
 81002ee:	4770      	bx	lr

081002f0 <memchr>:
 81002f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 81002f4:	2a10      	cmp	r2, #16
 81002f6:	db2b      	blt.n	8100350 <memchr+0x60>
 81002f8:	f010 0f07 	tst.w	r0, #7
 81002fc:	d008      	beq.n	8100310 <memchr+0x20>
 81002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8100302:	3a01      	subs	r2, #1
 8100304:	428b      	cmp	r3, r1
 8100306:	d02d      	beq.n	8100364 <memchr+0x74>
 8100308:	f010 0f07 	tst.w	r0, #7
 810030c:	b342      	cbz	r2, 8100360 <memchr+0x70>
 810030e:	d1f6      	bne.n	81002fe <memchr+0xe>
 8100310:	b4f0      	push	{r4, r5, r6, r7}
 8100312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8100316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 810031a:	f022 0407 	bic.w	r4, r2, #7
 810031e:	f07f 0700 	mvns.w	r7, #0
 8100322:	2300      	movs	r3, #0
 8100324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8100328:	3c08      	subs	r4, #8
 810032a:	ea85 0501 	eor.w	r5, r5, r1
 810032e:	ea86 0601 	eor.w	r6, r6, r1
 8100332:	fa85 f547 	uadd8	r5, r5, r7
 8100336:	faa3 f587 	sel	r5, r3, r7
 810033a:	fa86 f647 	uadd8	r6, r6, r7
 810033e:	faa5 f687 	sel	r6, r5, r7
 8100342:	b98e      	cbnz	r6, 8100368 <memchr+0x78>
 8100344:	d1ee      	bne.n	8100324 <memchr+0x34>
 8100346:	bcf0      	pop	{r4, r5, r6, r7}
 8100348:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 810034c:	f002 0207 	and.w	r2, r2, #7
 8100350:	b132      	cbz	r2, 8100360 <memchr+0x70>
 8100352:	f810 3b01 	ldrb.w	r3, [r0], #1
 8100356:	3a01      	subs	r2, #1
 8100358:	ea83 0301 	eor.w	r3, r3, r1
 810035c:	b113      	cbz	r3, 8100364 <memchr+0x74>
 810035e:	d1f8      	bne.n	8100352 <memchr+0x62>
 8100360:	2000      	movs	r0, #0
 8100362:	4770      	bx	lr
 8100364:	3801      	subs	r0, #1
 8100366:	4770      	bx	lr
 8100368:	2d00      	cmp	r5, #0
 810036a:	bf06      	itte	eq
 810036c:	4635      	moveq	r5, r6
 810036e:	3803      	subeq	r0, #3
 8100370:	3807      	subne	r0, #7
 8100372:	f015 0f01 	tst.w	r5, #1
 8100376:	d107      	bne.n	8100388 <memchr+0x98>
 8100378:	3001      	adds	r0, #1
 810037a:	f415 7f80 	tst.w	r5, #256	; 0x100
 810037e:	bf02      	ittt	eq
 8100380:	3001      	addeq	r0, #1
 8100382:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8100386:	3001      	addeq	r0, #1
 8100388:	bcf0      	pop	{r4, r5, r6, r7}
 810038a:	3801      	subs	r0, #1
 810038c:	4770      	bx	lr
 810038e:	bf00      	nop

08100390 <__aeabi_drsub>:
 8100390:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8100394:	e002      	b.n	810039c <__adddf3>
 8100396:	bf00      	nop

08100398 <__aeabi_dsub>:
 8100398:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0810039c <__adddf3>:
 810039c:	b530      	push	{r4, r5, lr}
 810039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 81003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 81003a6:	ea94 0f05 	teq	r4, r5
 81003aa:	bf08      	it	eq
 81003ac:	ea90 0f02 	teqeq	r0, r2
 81003b0:	bf1f      	itttt	ne
 81003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 81003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 81003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 81003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 81003c2:	f000 80e2 	beq.w	810058a <__adddf3+0x1ee>
 81003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 81003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 81003ce:	bfb8      	it	lt
 81003d0:	426d      	neglt	r5, r5
 81003d2:	dd0c      	ble.n	81003ee <__adddf3+0x52>
 81003d4:	442c      	add	r4, r5
 81003d6:	ea80 0202 	eor.w	r2, r0, r2
 81003da:	ea81 0303 	eor.w	r3, r1, r3
 81003de:	ea82 0000 	eor.w	r0, r2, r0
 81003e2:	ea83 0101 	eor.w	r1, r3, r1
 81003e6:	ea80 0202 	eor.w	r2, r0, r2
 81003ea:	ea81 0303 	eor.w	r3, r1, r3
 81003ee:	2d36      	cmp	r5, #54	; 0x36
 81003f0:	bf88      	it	hi
 81003f2:	bd30      	pophi	{r4, r5, pc}
 81003f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 81003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 81003fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8100400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8100404:	d002      	beq.n	810040c <__adddf3+0x70>
 8100406:	4240      	negs	r0, r0
 8100408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 810040c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8100410:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8100418:	d002      	beq.n	8100420 <__adddf3+0x84>
 810041a:	4252      	negs	r2, r2
 810041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8100420:	ea94 0f05 	teq	r4, r5
 8100424:	f000 80a7 	beq.w	8100576 <__adddf3+0x1da>
 8100428:	f1a4 0401 	sub.w	r4, r4, #1
 810042c:	f1d5 0e20 	rsbs	lr, r5, #32
 8100430:	db0d      	blt.n	810044e <__adddf3+0xb2>
 8100432:	fa02 fc0e 	lsl.w	ip, r2, lr
 8100436:	fa22 f205 	lsr.w	r2, r2, r5
 810043a:	1880      	adds	r0, r0, r2
 810043c:	f141 0100 	adc.w	r1, r1, #0
 8100440:	fa03 f20e 	lsl.w	r2, r3, lr
 8100444:	1880      	adds	r0, r0, r2
 8100446:	fa43 f305 	asr.w	r3, r3, r5
 810044a:	4159      	adcs	r1, r3
 810044c:	e00e      	b.n	810046c <__adddf3+0xd0>
 810044e:	f1a5 0520 	sub.w	r5, r5, #32
 8100452:	f10e 0e20 	add.w	lr, lr, #32
 8100456:	2a01      	cmp	r2, #1
 8100458:	fa03 fc0e 	lsl.w	ip, r3, lr
 810045c:	bf28      	it	cs
 810045e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8100462:	fa43 f305 	asr.w	r3, r3, r5
 8100466:	18c0      	adds	r0, r0, r3
 8100468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 810046c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8100470:	d507      	bpl.n	8100482 <__adddf3+0xe6>
 8100472:	f04f 0e00 	mov.w	lr, #0
 8100476:	f1dc 0c00 	rsbs	ip, ip, #0
 810047a:	eb7e 0000 	sbcs.w	r0, lr, r0
 810047e:	eb6e 0101 	sbc.w	r1, lr, r1
 8100482:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8100486:	d31b      	bcc.n	81004c0 <__adddf3+0x124>
 8100488:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 810048c:	d30c      	bcc.n	81004a8 <__adddf3+0x10c>
 810048e:	0849      	lsrs	r1, r1, #1
 8100490:	ea5f 0030 	movs.w	r0, r0, rrx
 8100494:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8100498:	f104 0401 	add.w	r4, r4, #1
 810049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 81004a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 81004a4:	f080 809a 	bcs.w	81005dc <__adddf3+0x240>
 81004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 81004ac:	bf08      	it	eq
 81004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 81004b2:	f150 0000 	adcs.w	r0, r0, #0
 81004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81004ba:	ea41 0105 	orr.w	r1, r1, r5
 81004be:	bd30      	pop	{r4, r5, pc}
 81004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 81004c4:	4140      	adcs	r0, r0
 81004c6:	eb41 0101 	adc.w	r1, r1, r1
 81004ca:	3c01      	subs	r4, #1
 81004cc:	bf28      	it	cs
 81004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 81004d2:	d2e9      	bcs.n	81004a8 <__adddf3+0x10c>
 81004d4:	f091 0f00 	teq	r1, #0
 81004d8:	bf04      	itt	eq
 81004da:	4601      	moveq	r1, r0
 81004dc:	2000      	moveq	r0, #0
 81004de:	fab1 f381 	clz	r3, r1
 81004e2:	bf08      	it	eq
 81004e4:	3320      	addeq	r3, #32
 81004e6:	f1a3 030b 	sub.w	r3, r3, #11
 81004ea:	f1b3 0220 	subs.w	r2, r3, #32
 81004ee:	da0c      	bge.n	810050a <__adddf3+0x16e>
 81004f0:	320c      	adds	r2, #12
 81004f2:	dd08      	ble.n	8100506 <__adddf3+0x16a>
 81004f4:	f102 0c14 	add.w	ip, r2, #20
 81004f8:	f1c2 020c 	rsb	r2, r2, #12
 81004fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8100500:	fa21 f102 	lsr.w	r1, r1, r2
 8100504:	e00c      	b.n	8100520 <__adddf3+0x184>
 8100506:	f102 0214 	add.w	r2, r2, #20
 810050a:	bfd8      	it	le
 810050c:	f1c2 0c20 	rsble	ip, r2, #32
 8100510:	fa01 f102 	lsl.w	r1, r1, r2
 8100514:	fa20 fc0c 	lsr.w	ip, r0, ip
 8100518:	bfdc      	itt	le
 810051a:	ea41 010c 	orrle.w	r1, r1, ip
 810051e:	4090      	lslle	r0, r2
 8100520:	1ae4      	subs	r4, r4, r3
 8100522:	bfa2      	ittt	ge
 8100524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8100528:	4329      	orrge	r1, r5
 810052a:	bd30      	popge	{r4, r5, pc}
 810052c:	ea6f 0404 	mvn.w	r4, r4
 8100530:	3c1f      	subs	r4, #31
 8100532:	da1c      	bge.n	810056e <__adddf3+0x1d2>
 8100534:	340c      	adds	r4, #12
 8100536:	dc0e      	bgt.n	8100556 <__adddf3+0x1ba>
 8100538:	f104 0414 	add.w	r4, r4, #20
 810053c:	f1c4 0220 	rsb	r2, r4, #32
 8100540:	fa20 f004 	lsr.w	r0, r0, r4
 8100544:	fa01 f302 	lsl.w	r3, r1, r2
 8100548:	ea40 0003 	orr.w	r0, r0, r3
 810054c:	fa21 f304 	lsr.w	r3, r1, r4
 8100550:	ea45 0103 	orr.w	r1, r5, r3
 8100554:	bd30      	pop	{r4, r5, pc}
 8100556:	f1c4 040c 	rsb	r4, r4, #12
 810055a:	f1c4 0220 	rsb	r2, r4, #32
 810055e:	fa20 f002 	lsr.w	r0, r0, r2
 8100562:	fa01 f304 	lsl.w	r3, r1, r4
 8100566:	ea40 0003 	orr.w	r0, r0, r3
 810056a:	4629      	mov	r1, r5
 810056c:	bd30      	pop	{r4, r5, pc}
 810056e:	fa21 f004 	lsr.w	r0, r1, r4
 8100572:	4629      	mov	r1, r5
 8100574:	bd30      	pop	{r4, r5, pc}
 8100576:	f094 0f00 	teq	r4, #0
 810057a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 810057e:	bf06      	itte	eq
 8100580:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8100584:	3401      	addeq	r4, #1
 8100586:	3d01      	subne	r5, #1
 8100588:	e74e      	b.n	8100428 <__adddf3+0x8c>
 810058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 810058e:	bf18      	it	ne
 8100590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8100594:	d029      	beq.n	81005ea <__adddf3+0x24e>
 8100596:	ea94 0f05 	teq	r4, r5
 810059a:	bf08      	it	eq
 810059c:	ea90 0f02 	teqeq	r0, r2
 81005a0:	d005      	beq.n	81005ae <__adddf3+0x212>
 81005a2:	ea54 0c00 	orrs.w	ip, r4, r0
 81005a6:	bf04      	itt	eq
 81005a8:	4619      	moveq	r1, r3
 81005aa:	4610      	moveq	r0, r2
 81005ac:	bd30      	pop	{r4, r5, pc}
 81005ae:	ea91 0f03 	teq	r1, r3
 81005b2:	bf1e      	ittt	ne
 81005b4:	2100      	movne	r1, #0
 81005b6:	2000      	movne	r0, #0
 81005b8:	bd30      	popne	{r4, r5, pc}
 81005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 81005be:	d105      	bne.n	81005cc <__adddf3+0x230>
 81005c0:	0040      	lsls	r0, r0, #1
 81005c2:	4149      	adcs	r1, r1
 81005c4:	bf28      	it	cs
 81005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 81005ca:	bd30      	pop	{r4, r5, pc}
 81005cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 81005d0:	bf3c      	itt	cc
 81005d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 81005d6:	bd30      	popcc	{r4, r5, pc}
 81005d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 81005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 81005e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 81005e4:	f04f 0000 	mov.w	r0, #0
 81005e8:	bd30      	pop	{r4, r5, pc}
 81005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 81005ee:	bf1a      	itte	ne
 81005f0:	4619      	movne	r1, r3
 81005f2:	4610      	movne	r0, r2
 81005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 81005f8:	bf1c      	itt	ne
 81005fa:	460b      	movne	r3, r1
 81005fc:	4602      	movne	r2, r0
 81005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100602:	bf06      	itte	eq
 8100604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8100608:	ea91 0f03 	teqeq	r1, r3
 810060c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8100610:	bd30      	pop	{r4, r5, pc}
 8100612:	bf00      	nop

08100614 <__aeabi_ui2d>:
 8100614:	f090 0f00 	teq	r0, #0
 8100618:	bf04      	itt	eq
 810061a:	2100      	moveq	r1, #0
 810061c:	4770      	bxeq	lr
 810061e:	b530      	push	{r4, r5, lr}
 8100620:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8100624:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8100628:	f04f 0500 	mov.w	r5, #0
 810062c:	f04f 0100 	mov.w	r1, #0
 8100630:	e750      	b.n	81004d4 <__adddf3+0x138>
 8100632:	bf00      	nop

08100634 <__aeabi_i2d>:
 8100634:	f090 0f00 	teq	r0, #0
 8100638:	bf04      	itt	eq
 810063a:	2100      	moveq	r1, #0
 810063c:	4770      	bxeq	lr
 810063e:	b530      	push	{r4, r5, lr}
 8100640:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8100644:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8100648:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 810064c:	bf48      	it	mi
 810064e:	4240      	negmi	r0, r0
 8100650:	f04f 0100 	mov.w	r1, #0
 8100654:	e73e      	b.n	81004d4 <__adddf3+0x138>
 8100656:	bf00      	nop

08100658 <__aeabi_f2d>:
 8100658:	0042      	lsls	r2, r0, #1
 810065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 810065e:	ea4f 0131 	mov.w	r1, r1, rrx
 8100662:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8100666:	bf1f      	itttt	ne
 8100668:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 810066c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8100670:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8100674:	4770      	bxne	lr
 8100676:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 810067a:	bf08      	it	eq
 810067c:	4770      	bxeq	lr
 810067e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8100682:	bf04      	itt	eq
 8100684:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8100688:	4770      	bxeq	lr
 810068a:	b530      	push	{r4, r5, lr}
 810068c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8100690:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8100694:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8100698:	e71c      	b.n	81004d4 <__adddf3+0x138>
 810069a:	bf00      	nop

0810069c <__aeabi_ul2d>:
 810069c:	ea50 0201 	orrs.w	r2, r0, r1
 81006a0:	bf08      	it	eq
 81006a2:	4770      	bxeq	lr
 81006a4:	b530      	push	{r4, r5, lr}
 81006a6:	f04f 0500 	mov.w	r5, #0
 81006aa:	e00a      	b.n	81006c2 <__aeabi_l2d+0x16>

081006ac <__aeabi_l2d>:
 81006ac:	ea50 0201 	orrs.w	r2, r0, r1
 81006b0:	bf08      	it	eq
 81006b2:	4770      	bxeq	lr
 81006b4:	b530      	push	{r4, r5, lr}
 81006b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 81006ba:	d502      	bpl.n	81006c2 <__aeabi_l2d+0x16>
 81006bc:	4240      	negs	r0, r0
 81006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 81006c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 81006c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 81006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 81006ce:	f43f aed8 	beq.w	8100482 <__adddf3+0xe6>
 81006d2:	f04f 0203 	mov.w	r2, #3
 81006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 81006da:	bf18      	it	ne
 81006dc:	3203      	addne	r2, #3
 81006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 81006e2:	bf18      	it	ne
 81006e4:	3203      	addne	r2, #3
 81006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 81006ea:	f1c2 0320 	rsb	r3, r2, #32
 81006ee:	fa00 fc03 	lsl.w	ip, r0, r3
 81006f2:	fa20 f002 	lsr.w	r0, r0, r2
 81006f6:	fa01 fe03 	lsl.w	lr, r1, r3
 81006fa:	ea40 000e 	orr.w	r0, r0, lr
 81006fe:	fa21 f102 	lsr.w	r1, r1, r2
 8100702:	4414      	add	r4, r2
 8100704:	e6bd      	b.n	8100482 <__adddf3+0xe6>
 8100706:	bf00      	nop

08100708 <__aeabi_dmul>:
 8100708:	b570      	push	{r4, r5, r6, lr}
 810070a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 810070e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8100712:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8100716:	bf1d      	ittte	ne
 8100718:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 810071c:	ea94 0f0c 	teqne	r4, ip
 8100720:	ea95 0f0c 	teqne	r5, ip
 8100724:	f000 f8de 	bleq	81008e4 <__aeabi_dmul+0x1dc>
 8100728:	442c      	add	r4, r5
 810072a:	ea81 0603 	eor.w	r6, r1, r3
 810072e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8100732:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8100736:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 810073a:	bf18      	it	ne
 810073c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8100740:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8100744:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8100748:	d038      	beq.n	81007bc <__aeabi_dmul+0xb4>
 810074a:	fba0 ce02 	umull	ip, lr, r0, r2
 810074e:	f04f 0500 	mov.w	r5, #0
 8100752:	fbe1 e502 	umlal	lr, r5, r1, r2
 8100756:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 810075a:	fbe0 e503 	umlal	lr, r5, r0, r3
 810075e:	f04f 0600 	mov.w	r6, #0
 8100762:	fbe1 5603 	umlal	r5, r6, r1, r3
 8100766:	f09c 0f00 	teq	ip, #0
 810076a:	bf18      	it	ne
 810076c:	f04e 0e01 	orrne.w	lr, lr, #1
 8100770:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8100774:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8100778:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 810077c:	d204      	bcs.n	8100788 <__aeabi_dmul+0x80>
 810077e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8100782:	416d      	adcs	r5, r5
 8100784:	eb46 0606 	adc.w	r6, r6, r6
 8100788:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 810078c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8100790:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8100794:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8100798:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 810079c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 81007a0:	bf88      	it	hi
 81007a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 81007a6:	d81e      	bhi.n	81007e6 <__aeabi_dmul+0xde>
 81007a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 81007ac:	bf08      	it	eq
 81007ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 81007b2:	f150 0000 	adcs.w	r0, r0, #0
 81007b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81007ba:	bd70      	pop	{r4, r5, r6, pc}
 81007bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 81007c0:	ea46 0101 	orr.w	r1, r6, r1
 81007c4:	ea40 0002 	orr.w	r0, r0, r2
 81007c8:	ea81 0103 	eor.w	r1, r1, r3
 81007cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 81007d0:	bfc2      	ittt	gt
 81007d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 81007d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 81007da:	bd70      	popgt	{r4, r5, r6, pc}
 81007dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 81007e0:	f04f 0e00 	mov.w	lr, #0
 81007e4:	3c01      	subs	r4, #1
 81007e6:	f300 80ab 	bgt.w	8100940 <__aeabi_dmul+0x238>
 81007ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 81007ee:	bfde      	ittt	le
 81007f0:	2000      	movle	r0, #0
 81007f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 81007f6:	bd70      	pople	{r4, r5, r6, pc}
 81007f8:	f1c4 0400 	rsb	r4, r4, #0
 81007fc:	3c20      	subs	r4, #32
 81007fe:	da35      	bge.n	810086c <__aeabi_dmul+0x164>
 8100800:	340c      	adds	r4, #12
 8100802:	dc1b      	bgt.n	810083c <__aeabi_dmul+0x134>
 8100804:	f104 0414 	add.w	r4, r4, #20
 8100808:	f1c4 0520 	rsb	r5, r4, #32
 810080c:	fa00 f305 	lsl.w	r3, r0, r5
 8100810:	fa20 f004 	lsr.w	r0, r0, r4
 8100814:	fa01 f205 	lsl.w	r2, r1, r5
 8100818:	ea40 0002 	orr.w	r0, r0, r2
 810081c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8100820:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8100824:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8100828:	fa21 f604 	lsr.w	r6, r1, r4
 810082c:	eb42 0106 	adc.w	r1, r2, r6
 8100830:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100834:	bf08      	it	eq
 8100836:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810083a:	bd70      	pop	{r4, r5, r6, pc}
 810083c:	f1c4 040c 	rsb	r4, r4, #12
 8100840:	f1c4 0520 	rsb	r5, r4, #32
 8100844:	fa00 f304 	lsl.w	r3, r0, r4
 8100848:	fa20 f005 	lsr.w	r0, r0, r5
 810084c:	fa01 f204 	lsl.w	r2, r1, r4
 8100850:	ea40 0002 	orr.w	r0, r0, r2
 8100854:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8100858:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 810085c:	f141 0100 	adc.w	r1, r1, #0
 8100860:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100864:	bf08      	it	eq
 8100866:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810086a:	bd70      	pop	{r4, r5, r6, pc}
 810086c:	f1c4 0520 	rsb	r5, r4, #32
 8100870:	fa00 f205 	lsl.w	r2, r0, r5
 8100874:	ea4e 0e02 	orr.w	lr, lr, r2
 8100878:	fa20 f304 	lsr.w	r3, r0, r4
 810087c:	fa01 f205 	lsl.w	r2, r1, r5
 8100880:	ea43 0302 	orr.w	r3, r3, r2
 8100884:	fa21 f004 	lsr.w	r0, r1, r4
 8100888:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 810088c:	fa21 f204 	lsr.w	r2, r1, r4
 8100890:	ea20 0002 	bic.w	r0, r0, r2
 8100894:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8100898:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 810089c:	bf08      	it	eq
 810089e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 81008a2:	bd70      	pop	{r4, r5, r6, pc}
 81008a4:	f094 0f00 	teq	r4, #0
 81008a8:	d10f      	bne.n	81008ca <__aeabi_dmul+0x1c2>
 81008aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 81008ae:	0040      	lsls	r0, r0, #1
 81008b0:	eb41 0101 	adc.w	r1, r1, r1
 81008b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 81008b8:	bf08      	it	eq
 81008ba:	3c01      	subeq	r4, #1
 81008bc:	d0f7      	beq.n	81008ae <__aeabi_dmul+0x1a6>
 81008be:	ea41 0106 	orr.w	r1, r1, r6
 81008c2:	f095 0f00 	teq	r5, #0
 81008c6:	bf18      	it	ne
 81008c8:	4770      	bxne	lr
 81008ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 81008ce:	0052      	lsls	r2, r2, #1
 81008d0:	eb43 0303 	adc.w	r3, r3, r3
 81008d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 81008d8:	bf08      	it	eq
 81008da:	3d01      	subeq	r5, #1
 81008dc:	d0f7      	beq.n	81008ce <__aeabi_dmul+0x1c6>
 81008de:	ea43 0306 	orr.w	r3, r3, r6
 81008e2:	4770      	bx	lr
 81008e4:	ea94 0f0c 	teq	r4, ip
 81008e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 81008ec:	bf18      	it	ne
 81008ee:	ea95 0f0c 	teqne	r5, ip
 81008f2:	d00c      	beq.n	810090e <__aeabi_dmul+0x206>
 81008f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 81008f8:	bf18      	it	ne
 81008fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 81008fe:	d1d1      	bne.n	81008a4 <__aeabi_dmul+0x19c>
 8100900:	ea81 0103 	eor.w	r1, r1, r3
 8100904:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8100908:	f04f 0000 	mov.w	r0, #0
 810090c:	bd70      	pop	{r4, r5, r6, pc}
 810090e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100912:	bf06      	itte	eq
 8100914:	4610      	moveq	r0, r2
 8100916:	4619      	moveq	r1, r3
 8100918:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 810091c:	d019      	beq.n	8100952 <__aeabi_dmul+0x24a>
 810091e:	ea94 0f0c 	teq	r4, ip
 8100922:	d102      	bne.n	810092a <__aeabi_dmul+0x222>
 8100924:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8100928:	d113      	bne.n	8100952 <__aeabi_dmul+0x24a>
 810092a:	ea95 0f0c 	teq	r5, ip
 810092e:	d105      	bne.n	810093c <__aeabi_dmul+0x234>
 8100930:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8100934:	bf1c      	itt	ne
 8100936:	4610      	movne	r0, r2
 8100938:	4619      	movne	r1, r3
 810093a:	d10a      	bne.n	8100952 <__aeabi_dmul+0x24a>
 810093c:	ea81 0103 	eor.w	r1, r1, r3
 8100940:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8100944:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8100948:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 810094c:	f04f 0000 	mov.w	r0, #0
 8100950:	bd70      	pop	{r4, r5, r6, pc}
 8100952:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8100956:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 810095a:	bd70      	pop	{r4, r5, r6, pc}

0810095c <__aeabi_ddiv>:
 810095c:	b570      	push	{r4, r5, r6, lr}
 810095e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8100962:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8100966:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 810096a:	bf1d      	ittte	ne
 810096c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8100970:	ea94 0f0c 	teqne	r4, ip
 8100974:	ea95 0f0c 	teqne	r5, ip
 8100978:	f000 f8a7 	bleq	8100aca <__aeabi_ddiv+0x16e>
 810097c:	eba4 0405 	sub.w	r4, r4, r5
 8100980:	ea81 0e03 	eor.w	lr, r1, r3
 8100984:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100988:	ea4f 3101 	mov.w	r1, r1, lsl #12
 810098c:	f000 8088 	beq.w	8100aa0 <__aeabi_ddiv+0x144>
 8100990:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100994:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8100998:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 810099c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 81009a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 81009a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 81009a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 81009ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 81009b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 81009b4:	429d      	cmp	r5, r3
 81009b6:	bf08      	it	eq
 81009b8:	4296      	cmpeq	r6, r2
 81009ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 81009be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 81009c2:	d202      	bcs.n	81009ca <__aeabi_ddiv+0x6e>
 81009c4:	085b      	lsrs	r3, r3, #1
 81009c6:	ea4f 0232 	mov.w	r2, r2, rrx
 81009ca:	1ab6      	subs	r6, r6, r2
 81009cc:	eb65 0503 	sbc.w	r5, r5, r3
 81009d0:	085b      	lsrs	r3, r3, #1
 81009d2:	ea4f 0232 	mov.w	r2, r2, rrx
 81009d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 81009da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 81009de:	ebb6 0e02 	subs.w	lr, r6, r2
 81009e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 81009e6:	bf22      	ittt	cs
 81009e8:	1ab6      	subcs	r6, r6, r2
 81009ea:	4675      	movcs	r5, lr
 81009ec:	ea40 000c 	orrcs.w	r0, r0, ip
 81009f0:	085b      	lsrs	r3, r3, #1
 81009f2:	ea4f 0232 	mov.w	r2, r2, rrx
 81009f6:	ebb6 0e02 	subs.w	lr, r6, r2
 81009fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 81009fe:	bf22      	ittt	cs
 8100a00:	1ab6      	subcs	r6, r6, r2
 8100a02:	4675      	movcs	r5, lr
 8100a04:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8100a08:	085b      	lsrs	r3, r3, #1
 8100a0a:	ea4f 0232 	mov.w	r2, r2, rrx
 8100a0e:	ebb6 0e02 	subs.w	lr, r6, r2
 8100a12:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100a16:	bf22      	ittt	cs
 8100a18:	1ab6      	subcs	r6, r6, r2
 8100a1a:	4675      	movcs	r5, lr
 8100a1c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8100a20:	085b      	lsrs	r3, r3, #1
 8100a22:	ea4f 0232 	mov.w	r2, r2, rrx
 8100a26:	ebb6 0e02 	subs.w	lr, r6, r2
 8100a2a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100a2e:	bf22      	ittt	cs
 8100a30:	1ab6      	subcs	r6, r6, r2
 8100a32:	4675      	movcs	r5, lr
 8100a34:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8100a38:	ea55 0e06 	orrs.w	lr, r5, r6
 8100a3c:	d018      	beq.n	8100a70 <__aeabi_ddiv+0x114>
 8100a3e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8100a42:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8100a46:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8100a4a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8100a4e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8100a52:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8100a56:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8100a5a:	d1c0      	bne.n	81009de <__aeabi_ddiv+0x82>
 8100a5c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8100a60:	d10b      	bne.n	8100a7a <__aeabi_ddiv+0x11e>
 8100a62:	ea41 0100 	orr.w	r1, r1, r0
 8100a66:	f04f 0000 	mov.w	r0, #0
 8100a6a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8100a6e:	e7b6      	b.n	81009de <__aeabi_ddiv+0x82>
 8100a70:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8100a74:	bf04      	itt	eq
 8100a76:	4301      	orreq	r1, r0
 8100a78:	2000      	moveq	r0, #0
 8100a7a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8100a7e:	bf88      	it	hi
 8100a80:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8100a84:	f63f aeaf 	bhi.w	81007e6 <__aeabi_dmul+0xde>
 8100a88:	ebb5 0c03 	subs.w	ip, r5, r3
 8100a8c:	bf04      	itt	eq
 8100a8e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8100a92:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8100a96:	f150 0000 	adcs.w	r0, r0, #0
 8100a9a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8100a9e:	bd70      	pop	{r4, r5, r6, pc}
 8100aa0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8100aa4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8100aa8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8100aac:	bfc2      	ittt	gt
 8100aae:	ebd4 050c 	rsbsgt	r5, r4, ip
 8100ab2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8100ab6:	bd70      	popgt	{r4, r5, r6, pc}
 8100ab8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8100abc:	f04f 0e00 	mov.w	lr, #0
 8100ac0:	3c01      	subs	r4, #1
 8100ac2:	e690      	b.n	81007e6 <__aeabi_dmul+0xde>
 8100ac4:	ea45 0e06 	orr.w	lr, r5, r6
 8100ac8:	e68d      	b.n	81007e6 <__aeabi_dmul+0xde>
 8100aca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8100ace:	ea94 0f0c 	teq	r4, ip
 8100ad2:	bf08      	it	eq
 8100ad4:	ea95 0f0c 	teqeq	r5, ip
 8100ad8:	f43f af3b 	beq.w	8100952 <__aeabi_dmul+0x24a>
 8100adc:	ea94 0f0c 	teq	r4, ip
 8100ae0:	d10a      	bne.n	8100af8 <__aeabi_ddiv+0x19c>
 8100ae2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100ae6:	f47f af34 	bne.w	8100952 <__aeabi_dmul+0x24a>
 8100aea:	ea95 0f0c 	teq	r5, ip
 8100aee:	f47f af25 	bne.w	810093c <__aeabi_dmul+0x234>
 8100af2:	4610      	mov	r0, r2
 8100af4:	4619      	mov	r1, r3
 8100af6:	e72c      	b.n	8100952 <__aeabi_dmul+0x24a>
 8100af8:	ea95 0f0c 	teq	r5, ip
 8100afc:	d106      	bne.n	8100b0c <__aeabi_ddiv+0x1b0>
 8100afe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100b02:	f43f aefd 	beq.w	8100900 <__aeabi_dmul+0x1f8>
 8100b06:	4610      	mov	r0, r2
 8100b08:	4619      	mov	r1, r3
 8100b0a:	e722      	b.n	8100952 <__aeabi_dmul+0x24a>
 8100b0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100b10:	bf18      	it	ne
 8100b12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8100b16:	f47f aec5 	bne.w	81008a4 <__aeabi_dmul+0x19c>
 8100b1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8100b1e:	f47f af0d 	bne.w	810093c <__aeabi_dmul+0x234>
 8100b22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8100b26:	f47f aeeb 	bne.w	8100900 <__aeabi_dmul+0x1f8>
 8100b2a:	e712      	b.n	8100952 <__aeabi_dmul+0x24a>

08100b2c <__gedf2>:
 8100b2c:	f04f 3cff 	mov.w	ip, #4294967295
 8100b30:	e006      	b.n	8100b40 <__cmpdf2+0x4>
 8100b32:	bf00      	nop

08100b34 <__ledf2>:
 8100b34:	f04f 0c01 	mov.w	ip, #1
 8100b38:	e002      	b.n	8100b40 <__cmpdf2+0x4>
 8100b3a:	bf00      	nop

08100b3c <__cmpdf2>:
 8100b3c:	f04f 0c01 	mov.w	ip, #1
 8100b40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8100b44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100b50:	bf18      	it	ne
 8100b52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8100b56:	d01b      	beq.n	8100b90 <__cmpdf2+0x54>
 8100b58:	b001      	add	sp, #4
 8100b5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8100b5e:	bf0c      	ite	eq
 8100b60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8100b64:	ea91 0f03 	teqne	r1, r3
 8100b68:	bf02      	ittt	eq
 8100b6a:	ea90 0f02 	teqeq	r0, r2
 8100b6e:	2000      	moveq	r0, #0
 8100b70:	4770      	bxeq	lr
 8100b72:	f110 0f00 	cmn.w	r0, #0
 8100b76:	ea91 0f03 	teq	r1, r3
 8100b7a:	bf58      	it	pl
 8100b7c:	4299      	cmppl	r1, r3
 8100b7e:	bf08      	it	eq
 8100b80:	4290      	cmpeq	r0, r2
 8100b82:	bf2c      	ite	cs
 8100b84:	17d8      	asrcs	r0, r3, #31
 8100b86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8100b8a:	f040 0001 	orr.w	r0, r0, #1
 8100b8e:	4770      	bx	lr
 8100b90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100b98:	d102      	bne.n	8100ba0 <__cmpdf2+0x64>
 8100b9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8100b9e:	d107      	bne.n	8100bb0 <__cmpdf2+0x74>
 8100ba0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100ba4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100ba8:	d1d6      	bne.n	8100b58 <__cmpdf2+0x1c>
 8100baa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8100bae:	d0d3      	beq.n	8100b58 <__cmpdf2+0x1c>
 8100bb0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8100bb4:	4770      	bx	lr
 8100bb6:	bf00      	nop

08100bb8 <__aeabi_cdrcmple>:
 8100bb8:	4684      	mov	ip, r0
 8100bba:	4610      	mov	r0, r2
 8100bbc:	4662      	mov	r2, ip
 8100bbe:	468c      	mov	ip, r1
 8100bc0:	4619      	mov	r1, r3
 8100bc2:	4663      	mov	r3, ip
 8100bc4:	e000      	b.n	8100bc8 <__aeabi_cdcmpeq>
 8100bc6:	bf00      	nop

08100bc8 <__aeabi_cdcmpeq>:
 8100bc8:	b501      	push	{r0, lr}
 8100bca:	f7ff ffb7 	bl	8100b3c <__cmpdf2>
 8100bce:	2800      	cmp	r0, #0
 8100bd0:	bf48      	it	mi
 8100bd2:	f110 0f00 	cmnmi.w	r0, #0
 8100bd6:	bd01      	pop	{r0, pc}

08100bd8 <__aeabi_dcmpeq>:
 8100bd8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100bdc:	f7ff fff4 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100be0:	bf0c      	ite	eq
 8100be2:	2001      	moveq	r0, #1
 8100be4:	2000      	movne	r0, #0
 8100be6:	f85d fb08 	ldr.w	pc, [sp], #8
 8100bea:	bf00      	nop

08100bec <__aeabi_dcmplt>:
 8100bec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100bf0:	f7ff ffea 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100bf4:	bf34      	ite	cc
 8100bf6:	2001      	movcc	r0, #1
 8100bf8:	2000      	movcs	r0, #0
 8100bfa:	f85d fb08 	ldr.w	pc, [sp], #8
 8100bfe:	bf00      	nop

08100c00 <__aeabi_dcmple>:
 8100c00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c04:	f7ff ffe0 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100c08:	bf94      	ite	ls
 8100c0a:	2001      	movls	r0, #1
 8100c0c:	2000      	movhi	r0, #0
 8100c0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c12:	bf00      	nop

08100c14 <__aeabi_dcmpge>:
 8100c14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c18:	f7ff ffce 	bl	8100bb8 <__aeabi_cdrcmple>
 8100c1c:	bf94      	ite	ls
 8100c1e:	2001      	movls	r0, #1
 8100c20:	2000      	movhi	r0, #0
 8100c22:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c26:	bf00      	nop

08100c28 <__aeabi_dcmpgt>:
 8100c28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c2c:	f7ff ffc4 	bl	8100bb8 <__aeabi_cdrcmple>
 8100c30:	bf34      	ite	cc
 8100c32:	2001      	movcc	r0, #1
 8100c34:	2000      	movcs	r0, #0
 8100c36:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c3a:	bf00      	nop

08100c3c <__aeabi_dcmpun>:
 8100c3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100c40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100c44:	d102      	bne.n	8100c4c <__aeabi_dcmpun+0x10>
 8100c46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8100c4a:	d10a      	bne.n	8100c62 <__aeabi_dcmpun+0x26>
 8100c4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100c50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100c54:	d102      	bne.n	8100c5c <__aeabi_dcmpun+0x20>
 8100c56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8100c5a:	d102      	bne.n	8100c62 <__aeabi_dcmpun+0x26>
 8100c5c:	f04f 0000 	mov.w	r0, #0
 8100c60:	4770      	bx	lr
 8100c62:	f04f 0001 	mov.w	r0, #1
 8100c66:	4770      	bx	lr

08100c68 <__aeabi_d2iz>:
 8100c68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8100c6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8100c70:	d215      	bcs.n	8100c9e <__aeabi_d2iz+0x36>
 8100c72:	d511      	bpl.n	8100c98 <__aeabi_d2iz+0x30>
 8100c74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8100c78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8100c7c:	d912      	bls.n	8100ca4 <__aeabi_d2iz+0x3c>
 8100c7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8100c82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8100c86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8100c8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8100c8e:	fa23 f002 	lsr.w	r0, r3, r2
 8100c92:	bf18      	it	ne
 8100c94:	4240      	negne	r0, r0
 8100c96:	4770      	bx	lr
 8100c98:	f04f 0000 	mov.w	r0, #0
 8100c9c:	4770      	bx	lr
 8100c9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8100ca2:	d105      	bne.n	8100cb0 <__aeabi_d2iz+0x48>
 8100ca4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8100ca8:	bf08      	it	eq
 8100caa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8100cae:	4770      	bx	lr
 8100cb0:	f04f 0000 	mov.w	r0, #0
 8100cb4:	4770      	bx	lr
 8100cb6:	bf00      	nop

08100cb8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8100cb8:	b480      	push	{r7}
 8100cba:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8100cbc:	4b09      	ldr	r3, [pc, #36]	; (8100ce4 <SystemInit+0x2c>)
 8100cbe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8100cc2:	4a08      	ldr	r2, [pc, #32]	; (8100ce4 <SystemInit+0x2c>)
 8100cc4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8100cc8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif

    /*SEVONPEND enabled so that an interrupt coming from the CPU(n) interrupt signal is
     detectable by the CPU after a WFI/WFE instruction.*/
 SCB->SCR |= SCB_SCR_SEVONPEND_Msk;
 8100ccc:	4b05      	ldr	r3, [pc, #20]	; (8100ce4 <SystemInit+0x2c>)
 8100cce:	691b      	ldr	r3, [r3, #16]
 8100cd0:	4a04      	ldr	r2, [pc, #16]	; (8100ce4 <SystemInit+0x2c>)
 8100cd2:	f043 0310 	orr.w	r3, r3, #16
 8100cd6:	6113      	str	r3, [r2, #16]
#endif /* USER_VECT_TAB_ADDRESS */

#else
#error Please #define CORE_CM4 or CORE_CM7
#endif /* CORE_CM4 */
}
 8100cd8:	bf00      	nop
 8100cda:	46bd      	mov	sp, r7
 8100cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100ce0:	4770      	bx	lr
 8100ce2:	bf00      	nop
 8100ce4:	e000ed00 	.word	0xe000ed00

08100ce8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8100ce8:	b580      	push	{r7, lr}
 8100cea:	b082      	sub	sp, #8
 8100cec:	af00      	add	r7, sp, #0

  /* USER CODE END 1 */

/* USER CODE BEGIN Boot_Mode_Sequence_1 */
  /*HW semaphore Clock enable*/
  __HAL_RCC_HSEM_CLK_ENABLE();
 8100cee:	4b1a      	ldr	r3, [pc, #104]	; (8100d58 <main+0x70>)
 8100cf0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8100cf4:	4a18      	ldr	r2, [pc, #96]	; (8100d58 <main+0x70>)
 8100cf6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8100cfa:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8100cfe:	4b16      	ldr	r3, [pc, #88]	; (8100d58 <main+0x70>)
 8100d00:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8100d04:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8100d08:	607b      	str	r3, [r7, #4]
 8100d0a:	687b      	ldr	r3, [r7, #4]
  /* Activate HSEM notification for Cortex-M4*/
  HAL_HSEM_ActivateNotification(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100d0c:	2001      	movs	r0, #1
 8100d0e:	f000 fafd 	bl	810130c <HAL_HSEM_ActivateNotification>
  /*
  Domain D2 goes to STOP mode (Cortex-M4 in deep-sleep) waiting for Cortex-M7 to
  perform system initialization (system clock config, external memory configuration.. )
  */
  HAL_PWREx_ClearPendingEvent();
 8100d12:	f000 fb87 	bl	8101424 <HAL_PWREx_ClearPendingEvent>
  HAL_PWREx_EnterSTOPMode(PWR_MAINREGULATOR_ON, PWR_STOPENTRY_WFE, PWR_D2_DOMAIN);
 8100d16:	2201      	movs	r2, #1
 8100d18:	2102      	movs	r1, #2
 8100d1a:	2000      	movs	r0, #0
 8100d1c:	f000 fb08 	bl	8101330 <HAL_PWREx_EnterSTOPMode>
  /* Clear HSEM flag */
  __HAL_HSEM_CLEAR_FLAG(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100d20:	4b0e      	ldr	r3, [pc, #56]	; (8100d5c <main+0x74>)
 8100d22:	681b      	ldr	r3, [r3, #0]
 8100d24:	091b      	lsrs	r3, r3, #4
 8100d26:	f003 030f 	and.w	r3, r3, #15
 8100d2a:	2b07      	cmp	r3, #7
 8100d2c:	d108      	bne.n	8100d40 <main+0x58>
 8100d2e:	4b0c      	ldr	r3, [pc, #48]	; (8100d60 <main+0x78>)
 8100d30:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 8100d34:	4a0a      	ldr	r2, [pc, #40]	; (8100d60 <main+0x78>)
 8100d36:	f043 0301 	orr.w	r3, r3, #1
 8100d3a:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
 8100d3e:	e007      	b.n	8100d50 <main+0x68>
 8100d40:	4b07      	ldr	r3, [pc, #28]	; (8100d60 <main+0x78>)
 8100d42:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8100d46:	4a06      	ldr	r2, [pc, #24]	; (8100d60 <main+0x78>)
 8100d48:	f043 0301 	orr.w	r3, r3, #1
 8100d4c:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114

/* USER CODE END Boot_Mode_Sequence_1 */
  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8100d50:	f000 f93c 	bl	8100fcc <HAL_Init>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8100d54:	e7fe      	b.n	8100d54 <main+0x6c>
 8100d56:	bf00      	nop
 8100d58:	58024400 	.word	0x58024400
 8100d5c:	e000ed00 	.word	0xe000ed00
 8100d60:	58026400 	.word	0x58026400

08100d64 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8100d64:	b480      	push	{r7}
 8100d66:	b083      	sub	sp, #12
 8100d68:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8100d6a:	4b0a      	ldr	r3, [pc, #40]	; (8100d94 <HAL_MspInit+0x30>)
 8100d6c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8100d70:	4a08      	ldr	r2, [pc, #32]	; (8100d94 <HAL_MspInit+0x30>)
 8100d72:	f043 0302 	orr.w	r3, r3, #2
 8100d76:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8100d7a:	4b06      	ldr	r3, [pc, #24]	; (8100d94 <HAL_MspInit+0x30>)
 8100d7c:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8100d80:	f003 0302 	and.w	r3, r3, #2
 8100d84:	607b      	str	r3, [r7, #4]
 8100d86:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8100d88:	bf00      	nop
 8100d8a:	370c      	adds	r7, #12
 8100d8c:	46bd      	mov	sp, r7
 8100d8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100d92:	4770      	bx	lr
 8100d94:	58024400 	.word	0x58024400

08100d98 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8100d98:	b480      	push	{r7}
 8100d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8100d9c:	e7fe      	b.n	8100d9c <NMI_Handler+0x4>

08100d9e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8100d9e:	b480      	push	{r7}
 8100da0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8100da2:	e7fe      	b.n	8100da2 <HardFault_Handler+0x4>

08100da4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8100da4:	b480      	push	{r7}
 8100da6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8100da8:	e7fe      	b.n	8100da8 <MemManage_Handler+0x4>

08100daa <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8100daa:	b480      	push	{r7}
 8100dac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8100dae:	e7fe      	b.n	8100dae <BusFault_Handler+0x4>

08100db0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8100db0:	b480      	push	{r7}
 8100db2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8100db4:	e7fe      	b.n	8100db4 <UsageFault_Handler+0x4>

08100db6 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8100db6:	b480      	push	{r7}
 8100db8:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8100dba:	bf00      	nop
 8100dbc:	46bd      	mov	sp, r7
 8100dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100dc2:	4770      	bx	lr

08100dc4 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8100dc4:	b480      	push	{r7}
 8100dc6:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8100dc8:	bf00      	nop
 8100dca:	46bd      	mov	sp, r7
 8100dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100dd0:	4770      	bx	lr

08100dd2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8100dd2:	b480      	push	{r7}
 8100dd4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8100dd6:	bf00      	nop
 8100dd8:	46bd      	mov	sp, r7
 8100dda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100dde:	4770      	bx	lr

08100de0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8100de0:	b580      	push	{r7, lr}
 8100de2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8100de4:	f000 f986 	bl	81010f4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8100de8:	bf00      	nop
 8100dea:	bd80      	pop	{r7, pc}

08100dec <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8100dec:	b480      	push	{r7}
 8100dee:	af00      	add	r7, sp, #0
  return 1;
 8100df0:	2301      	movs	r3, #1
}
 8100df2:	4618      	mov	r0, r3
 8100df4:	46bd      	mov	sp, r7
 8100df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100dfa:	4770      	bx	lr

08100dfc <_kill>:

int _kill(int pid, int sig)
{
 8100dfc:	b580      	push	{r7, lr}
 8100dfe:	b082      	sub	sp, #8
 8100e00:	af00      	add	r7, sp, #0
 8100e02:	6078      	str	r0, [r7, #4]
 8100e04:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8100e06:	f000 fc95 	bl	8101734 <__errno>
 8100e0a:	4603      	mov	r3, r0
 8100e0c:	2216      	movs	r2, #22
 8100e0e:	601a      	str	r2, [r3, #0]
  return -1;
 8100e10:	f04f 33ff 	mov.w	r3, #4294967295
}
 8100e14:	4618      	mov	r0, r3
 8100e16:	3708      	adds	r7, #8
 8100e18:	46bd      	mov	sp, r7
 8100e1a:	bd80      	pop	{r7, pc}

08100e1c <_exit>:

void _exit (int status)
{
 8100e1c:	b580      	push	{r7, lr}
 8100e1e:	b082      	sub	sp, #8
 8100e20:	af00      	add	r7, sp, #0
 8100e22:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8100e24:	f04f 31ff 	mov.w	r1, #4294967295
 8100e28:	6878      	ldr	r0, [r7, #4]
 8100e2a:	f7ff ffe7 	bl	8100dfc <_kill>
  while (1) {}    /* Make sure we hang here */
 8100e2e:	e7fe      	b.n	8100e2e <_exit+0x12>

08100e30 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8100e30:	b580      	push	{r7, lr}
 8100e32:	b086      	sub	sp, #24
 8100e34:	af00      	add	r7, sp, #0
 8100e36:	60f8      	str	r0, [r7, #12]
 8100e38:	60b9      	str	r1, [r7, #8]
 8100e3a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100e3c:	2300      	movs	r3, #0
 8100e3e:	617b      	str	r3, [r7, #20]
 8100e40:	e00a      	b.n	8100e58 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8100e42:	f3af 8000 	nop.w
 8100e46:	4601      	mov	r1, r0
 8100e48:	68bb      	ldr	r3, [r7, #8]
 8100e4a:	1c5a      	adds	r2, r3, #1
 8100e4c:	60ba      	str	r2, [r7, #8]
 8100e4e:	b2ca      	uxtb	r2, r1
 8100e50:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100e52:	697b      	ldr	r3, [r7, #20]
 8100e54:	3301      	adds	r3, #1
 8100e56:	617b      	str	r3, [r7, #20]
 8100e58:	697a      	ldr	r2, [r7, #20]
 8100e5a:	687b      	ldr	r3, [r7, #4]
 8100e5c:	429a      	cmp	r2, r3
 8100e5e:	dbf0      	blt.n	8100e42 <_read+0x12>
  }

  return len;
 8100e60:	687b      	ldr	r3, [r7, #4]
}
 8100e62:	4618      	mov	r0, r3
 8100e64:	3718      	adds	r7, #24
 8100e66:	46bd      	mov	sp, r7
 8100e68:	bd80      	pop	{r7, pc}

08100e6a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8100e6a:	b580      	push	{r7, lr}
 8100e6c:	b086      	sub	sp, #24
 8100e6e:	af00      	add	r7, sp, #0
 8100e70:	60f8      	str	r0, [r7, #12]
 8100e72:	60b9      	str	r1, [r7, #8]
 8100e74:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100e76:	2300      	movs	r3, #0
 8100e78:	617b      	str	r3, [r7, #20]
 8100e7a:	e009      	b.n	8100e90 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8100e7c:	68bb      	ldr	r3, [r7, #8]
 8100e7e:	1c5a      	adds	r2, r3, #1
 8100e80:	60ba      	str	r2, [r7, #8]
 8100e82:	781b      	ldrb	r3, [r3, #0]
 8100e84:	4618      	mov	r0, r3
 8100e86:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100e8a:	697b      	ldr	r3, [r7, #20]
 8100e8c:	3301      	adds	r3, #1
 8100e8e:	617b      	str	r3, [r7, #20]
 8100e90:	697a      	ldr	r2, [r7, #20]
 8100e92:	687b      	ldr	r3, [r7, #4]
 8100e94:	429a      	cmp	r2, r3
 8100e96:	dbf1      	blt.n	8100e7c <_write+0x12>
  }
  return len;
 8100e98:	687b      	ldr	r3, [r7, #4]
}
 8100e9a:	4618      	mov	r0, r3
 8100e9c:	3718      	adds	r7, #24
 8100e9e:	46bd      	mov	sp, r7
 8100ea0:	bd80      	pop	{r7, pc}

08100ea2 <_close>:

int _close(int file)
{
 8100ea2:	b480      	push	{r7}
 8100ea4:	b083      	sub	sp, #12
 8100ea6:	af00      	add	r7, sp, #0
 8100ea8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8100eaa:	f04f 33ff 	mov.w	r3, #4294967295
}
 8100eae:	4618      	mov	r0, r3
 8100eb0:	370c      	adds	r7, #12
 8100eb2:	46bd      	mov	sp, r7
 8100eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100eb8:	4770      	bx	lr

08100eba <_fstat>:


int _fstat(int file, struct stat *st)
{
 8100eba:	b480      	push	{r7}
 8100ebc:	b083      	sub	sp, #12
 8100ebe:	af00      	add	r7, sp, #0
 8100ec0:	6078      	str	r0, [r7, #4]
 8100ec2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8100ec4:	683b      	ldr	r3, [r7, #0]
 8100ec6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8100eca:	605a      	str	r2, [r3, #4]
  return 0;
 8100ecc:	2300      	movs	r3, #0
}
 8100ece:	4618      	mov	r0, r3
 8100ed0:	370c      	adds	r7, #12
 8100ed2:	46bd      	mov	sp, r7
 8100ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100ed8:	4770      	bx	lr

08100eda <_isatty>:

int _isatty(int file)
{
 8100eda:	b480      	push	{r7}
 8100edc:	b083      	sub	sp, #12
 8100ede:	af00      	add	r7, sp, #0
 8100ee0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8100ee2:	2301      	movs	r3, #1
}
 8100ee4:	4618      	mov	r0, r3
 8100ee6:	370c      	adds	r7, #12
 8100ee8:	46bd      	mov	sp, r7
 8100eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100eee:	4770      	bx	lr

08100ef0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8100ef0:	b480      	push	{r7}
 8100ef2:	b085      	sub	sp, #20
 8100ef4:	af00      	add	r7, sp, #0
 8100ef6:	60f8      	str	r0, [r7, #12]
 8100ef8:	60b9      	str	r1, [r7, #8]
 8100efa:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8100efc:	2300      	movs	r3, #0
}
 8100efe:	4618      	mov	r0, r3
 8100f00:	3714      	adds	r7, #20
 8100f02:	46bd      	mov	sp, r7
 8100f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100f08:	4770      	bx	lr
	...

08100f0c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8100f0c:	b580      	push	{r7, lr}
 8100f0e:	b086      	sub	sp, #24
 8100f10:	af00      	add	r7, sp, #0
 8100f12:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8100f14:	4a14      	ldr	r2, [pc, #80]	; (8100f68 <_sbrk+0x5c>)
 8100f16:	4b15      	ldr	r3, [pc, #84]	; (8100f6c <_sbrk+0x60>)
 8100f18:	1ad3      	subs	r3, r2, r3
 8100f1a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8100f1c:	697b      	ldr	r3, [r7, #20]
 8100f1e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8100f20:	4b13      	ldr	r3, [pc, #76]	; (8100f70 <_sbrk+0x64>)
 8100f22:	681b      	ldr	r3, [r3, #0]
 8100f24:	2b00      	cmp	r3, #0
 8100f26:	d102      	bne.n	8100f2e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8100f28:	4b11      	ldr	r3, [pc, #68]	; (8100f70 <_sbrk+0x64>)
 8100f2a:	4a12      	ldr	r2, [pc, #72]	; (8100f74 <_sbrk+0x68>)
 8100f2c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8100f2e:	4b10      	ldr	r3, [pc, #64]	; (8100f70 <_sbrk+0x64>)
 8100f30:	681a      	ldr	r2, [r3, #0]
 8100f32:	687b      	ldr	r3, [r7, #4]
 8100f34:	4413      	add	r3, r2
 8100f36:	693a      	ldr	r2, [r7, #16]
 8100f38:	429a      	cmp	r2, r3
 8100f3a:	d207      	bcs.n	8100f4c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8100f3c:	f000 fbfa 	bl	8101734 <__errno>
 8100f40:	4603      	mov	r3, r0
 8100f42:	220c      	movs	r2, #12
 8100f44:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8100f46:	f04f 33ff 	mov.w	r3, #4294967295
 8100f4a:	e009      	b.n	8100f60 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8100f4c:	4b08      	ldr	r3, [pc, #32]	; (8100f70 <_sbrk+0x64>)
 8100f4e:	681b      	ldr	r3, [r3, #0]
 8100f50:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8100f52:	4b07      	ldr	r3, [pc, #28]	; (8100f70 <_sbrk+0x64>)
 8100f54:	681a      	ldr	r2, [r3, #0]
 8100f56:	687b      	ldr	r3, [r7, #4]
 8100f58:	4413      	add	r3, r2
 8100f5a:	4a05      	ldr	r2, [pc, #20]	; (8100f70 <_sbrk+0x64>)
 8100f5c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8100f5e:	68fb      	ldr	r3, [r7, #12]
}
 8100f60:	4618      	mov	r0, r3
 8100f62:	3718      	adds	r7, #24
 8100f64:	46bd      	mov	sp, r7
 8100f66:	bd80      	pop	{r7, pc}
 8100f68:	10048000 	.word	0x10048000
 8100f6c:	00000400 	.word	0x00000400
 8100f70:	100001fc 	.word	0x100001fc
 8100f74:	10000218 	.word	0x10000218

08100f78 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8100f78:	f8df d034 	ldr.w	sp, [pc, #52]	; 8100fb0 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8100f7c:	f7ff fe9c 	bl	8100cb8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8100f80:	480c      	ldr	r0, [pc, #48]	; (8100fb4 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8100f82:	490d      	ldr	r1, [pc, #52]	; (8100fb8 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8100f84:	4a0d      	ldr	r2, [pc, #52]	; (8100fbc <LoopFillZerobss+0x1a>)
  movs r3, #0
 8100f86:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8100f88:	e002      	b.n	8100f90 <LoopCopyDataInit>

08100f8a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8100f8a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8100f8c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8100f8e:	3304      	adds	r3, #4

08100f90 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8100f90:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8100f92:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8100f94:	d3f9      	bcc.n	8100f8a <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8100f96:	4a0a      	ldr	r2, [pc, #40]	; (8100fc0 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8100f98:	4c0a      	ldr	r4, [pc, #40]	; (8100fc4 <LoopFillZerobss+0x22>)
  movs r3, #0
 8100f9a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8100f9c:	e001      	b.n	8100fa2 <LoopFillZerobss>

08100f9e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8100f9e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8100fa0:	3204      	adds	r2, #4

08100fa2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8100fa2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8100fa4:	d3fb      	bcc.n	8100f9e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8100fa6:	f000 fbcb 	bl	8101740 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8100faa:	f7ff fe9d 	bl	8100ce8 <main>
  bx  lr
 8100fae:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8100fb0:	10048000 	.word	0x10048000
  ldr r0, =_sdata
 8100fb4:	10000000 	.word	0x10000000
  ldr r1, =_edata
 8100fb8:	100001e0 	.word	0x100001e0
  ldr r2, =_sidata
 8100fbc:	081045d4 	.word	0x081045d4
  ldr r2, =_sbss
 8100fc0:	100001e0 	.word	0x100001e0
  ldr r4, =_ebss
 8100fc4:	10000214 	.word	0x10000214

08100fc8 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8100fc8:	e7fe      	b.n	8100fc8 <ADC3_IRQHandler>
	...

08100fcc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8100fcc:	b580      	push	{r7, lr}
 8100fce:	b082      	sub	sp, #8
 8100fd0:	af00      	add	r7, sp, #0

uint32_t common_system_clock;

#if defined(DUAL_CORE) && defined(CORE_CM4)
   /* Configure Cortex-M4 Instruction cache through ART accelerator */
   __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 8100fd2:	4b28      	ldr	r3, [pc, #160]	; (8101074 <HAL_Init+0xa8>)
 8100fd4:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8100fd8:	4a26      	ldr	r2, [pc, #152]	; (8101074 <HAL_Init+0xa8>)
 8100fda:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8100fde:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8100fe2:	4b24      	ldr	r3, [pc, #144]	; (8101074 <HAL_Init+0xa8>)
 8100fe4:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8100fe8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8100fec:	603b      	str	r3, [r7, #0]
 8100fee:	683b      	ldr	r3, [r7, #0]
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
 8100ff0:	4b21      	ldr	r3, [pc, #132]	; (8101078 <HAL_Init+0xac>)
 8100ff2:	681b      	ldr	r3, [r3, #0]
 8100ff4:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
 8100ff8:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8100ffc:	4a1e      	ldr	r2, [pc, #120]	; (8101078 <HAL_Init+0xac>)
 8100ffe:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8101002:	6013      	str	r3, [r2, #0]
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 8101004:	4b1c      	ldr	r3, [pc, #112]	; (8101078 <HAL_Init+0xac>)
 8101006:	681b      	ldr	r3, [r3, #0]
 8101008:	4a1b      	ldr	r2, [pc, #108]	; (8101078 <HAL_Init+0xac>)
 810100a:	f043 0301 	orr.w	r3, r3, #1
 810100e:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8101010:	2003      	movs	r0, #3
 8101012:	f000 f935 	bl	8101280 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8101016:	f000 fa13 	bl	8101440 <HAL_RCC_GetSysClockFreq>
 810101a:	4602      	mov	r2, r0
 810101c:	4b15      	ldr	r3, [pc, #84]	; (8101074 <HAL_Init+0xa8>)
 810101e:	699b      	ldr	r3, [r3, #24]
 8101020:	0a1b      	lsrs	r3, r3, #8
 8101022:	f003 030f 	and.w	r3, r3, #15
 8101026:	4915      	ldr	r1, [pc, #84]	; (810107c <HAL_Init+0xb0>)
 8101028:	5ccb      	ldrb	r3, [r1, r3]
 810102a:	f003 031f 	and.w	r3, r3, #31
 810102e:	fa22 f303 	lsr.w	r3, r2, r3
 8101032:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 8101034:	4b0f      	ldr	r3, [pc, #60]	; (8101074 <HAL_Init+0xa8>)
 8101036:	699b      	ldr	r3, [r3, #24]
 8101038:	f003 030f 	and.w	r3, r3, #15
 810103c:	4a0f      	ldr	r2, [pc, #60]	; (810107c <HAL_Init+0xb0>)
 810103e:	5cd3      	ldrb	r3, [r2, r3]
 8101040:	f003 031f 	and.w	r3, r3, #31
 8101044:	687a      	ldr	r2, [r7, #4]
 8101046:	fa22 f303 	lsr.w	r3, r2, r3
 810104a:	4a0d      	ldr	r2, [pc, #52]	; (8101080 <HAL_Init+0xb4>)
 810104c:	6013      	str	r3, [r2, #0]
#else
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RCC_CDCFGR1_HPRE_Pos]) & 0x1FU));
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
 810104e:	4b0c      	ldr	r3, [pc, #48]	; (8101080 <HAL_Init+0xb4>)
 8101050:	681b      	ldr	r3, [r3, #0]
 8101052:	4a0c      	ldr	r2, [pc, #48]	; (8101084 <HAL_Init+0xb8>)
 8101054:	6013      	str	r3, [r2, #0]
#else
  SystemCoreClock = common_system_clock;
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8101056:	2000      	movs	r0, #0
 8101058:	f000 f816 	bl	8101088 <HAL_InitTick>
 810105c:	4603      	mov	r3, r0
 810105e:	2b00      	cmp	r3, #0
 8101060:	d001      	beq.n	8101066 <HAL_Init+0x9a>
  {
    return HAL_ERROR;
 8101062:	2301      	movs	r3, #1
 8101064:	e002      	b.n	810106c <HAL_Init+0xa0>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8101066:	f7ff fe7d 	bl	8100d64 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 810106a:	2300      	movs	r3, #0
}
 810106c:	4618      	mov	r0, r3
 810106e:	3708      	adds	r7, #8
 8101070:	46bd      	mov	sp, r7
 8101072:	bd80      	pop	{r7, pc}
 8101074:	58024400 	.word	0x58024400
 8101078:	40024400 	.word	0x40024400
 810107c:	081041e0 	.word	0x081041e0
 8101080:	10000004 	.word	0x10000004
 8101084:	10000000 	.word	0x10000000

08101088 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8101088:	b580      	push	{r7, lr}
 810108a:	b082      	sub	sp, #8
 810108c:	af00      	add	r7, sp, #0
 810108e:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 8101090:	4b15      	ldr	r3, [pc, #84]	; (81010e8 <HAL_InitTick+0x60>)
 8101092:	781b      	ldrb	r3, [r3, #0]
 8101094:	2b00      	cmp	r3, #0
 8101096:	d101      	bne.n	810109c <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 8101098:	2301      	movs	r3, #1
 810109a:	e021      	b.n	81010e0 <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 810109c:	4b13      	ldr	r3, [pc, #76]	; (81010ec <HAL_InitTick+0x64>)
 810109e:	681a      	ldr	r2, [r3, #0]
 81010a0:	4b11      	ldr	r3, [pc, #68]	; (81010e8 <HAL_InitTick+0x60>)
 81010a2:	781b      	ldrb	r3, [r3, #0]
 81010a4:	4619      	mov	r1, r3
 81010a6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 81010aa:	fbb3 f3f1 	udiv	r3, r3, r1
 81010ae:	fbb2 f3f3 	udiv	r3, r2, r3
 81010b2:	4618      	mov	r0, r3
 81010b4:	f000 f909 	bl	81012ca <HAL_SYSTICK_Config>
 81010b8:	4603      	mov	r3, r0
 81010ba:	2b00      	cmp	r3, #0
 81010bc:	d001      	beq.n	81010c2 <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 81010be:	2301      	movs	r3, #1
 81010c0:	e00e      	b.n	81010e0 <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 81010c2:	687b      	ldr	r3, [r7, #4]
 81010c4:	2b0f      	cmp	r3, #15
 81010c6:	d80a      	bhi.n	81010de <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 81010c8:	2200      	movs	r2, #0
 81010ca:	6879      	ldr	r1, [r7, #4]
 81010cc:	f04f 30ff 	mov.w	r0, #4294967295
 81010d0:	f000 f8e1 	bl	8101296 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 81010d4:	4a06      	ldr	r2, [pc, #24]	; (81010f0 <HAL_InitTick+0x68>)
 81010d6:	687b      	ldr	r3, [r7, #4]
 81010d8:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 81010da:	2300      	movs	r3, #0
 81010dc:	e000      	b.n	81010e0 <HAL_InitTick+0x58>
    return HAL_ERROR;
 81010de:	2301      	movs	r3, #1
}
 81010e0:	4618      	mov	r0, r3
 81010e2:	3708      	adds	r7, #8
 81010e4:	46bd      	mov	sp, r7
 81010e6:	bd80      	pop	{r7, pc}
 81010e8:	1000000c 	.word	0x1000000c
 81010ec:	10000000 	.word	0x10000000
 81010f0:	10000008 	.word	0x10000008

081010f4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 81010f4:	b480      	push	{r7}
 81010f6:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 81010f8:	4b06      	ldr	r3, [pc, #24]	; (8101114 <HAL_IncTick+0x20>)
 81010fa:	781b      	ldrb	r3, [r3, #0]
 81010fc:	461a      	mov	r2, r3
 81010fe:	4b06      	ldr	r3, [pc, #24]	; (8101118 <HAL_IncTick+0x24>)
 8101100:	681b      	ldr	r3, [r3, #0]
 8101102:	4413      	add	r3, r2
 8101104:	4a04      	ldr	r2, [pc, #16]	; (8101118 <HAL_IncTick+0x24>)
 8101106:	6013      	str	r3, [r2, #0]
}
 8101108:	bf00      	nop
 810110a:	46bd      	mov	sp, r7
 810110c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101110:	4770      	bx	lr
 8101112:	bf00      	nop
 8101114:	1000000c 	.word	0x1000000c
 8101118:	10000200 	.word	0x10000200

0810111c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 810111c:	b480      	push	{r7}
 810111e:	b085      	sub	sp, #20
 8101120:	af00      	add	r7, sp, #0
 8101122:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8101124:	687b      	ldr	r3, [r7, #4]
 8101126:	f003 0307 	and.w	r3, r3, #7
 810112a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 810112c:	4b0c      	ldr	r3, [pc, #48]	; (8101160 <__NVIC_SetPriorityGrouping+0x44>)
 810112e:	68db      	ldr	r3, [r3, #12]
 8101130:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8101132:	68ba      	ldr	r2, [r7, #8]
 8101134:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8101138:	4013      	ands	r3, r2
 810113a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 810113c:	68fb      	ldr	r3, [r7, #12]
 810113e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8101140:	68bb      	ldr	r3, [r7, #8]
 8101142:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8101144:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8101148:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 810114c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 810114e:	4a04      	ldr	r2, [pc, #16]	; (8101160 <__NVIC_SetPriorityGrouping+0x44>)
 8101150:	68bb      	ldr	r3, [r7, #8]
 8101152:	60d3      	str	r3, [r2, #12]
}
 8101154:	bf00      	nop
 8101156:	3714      	adds	r7, #20
 8101158:	46bd      	mov	sp, r7
 810115a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810115e:	4770      	bx	lr
 8101160:	e000ed00 	.word	0xe000ed00

08101164 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8101164:	b480      	push	{r7}
 8101166:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8101168:	4b04      	ldr	r3, [pc, #16]	; (810117c <__NVIC_GetPriorityGrouping+0x18>)
 810116a:	68db      	ldr	r3, [r3, #12]
 810116c:	0a1b      	lsrs	r3, r3, #8
 810116e:	f003 0307 	and.w	r3, r3, #7
}
 8101172:	4618      	mov	r0, r3
 8101174:	46bd      	mov	sp, r7
 8101176:	f85d 7b04 	ldr.w	r7, [sp], #4
 810117a:	4770      	bx	lr
 810117c:	e000ed00 	.word	0xe000ed00

08101180 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8101180:	b480      	push	{r7}
 8101182:	b083      	sub	sp, #12
 8101184:	af00      	add	r7, sp, #0
 8101186:	4603      	mov	r3, r0
 8101188:	6039      	str	r1, [r7, #0]
 810118a:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 810118c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8101190:	2b00      	cmp	r3, #0
 8101192:	db0a      	blt.n	81011aa <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8101194:	683b      	ldr	r3, [r7, #0]
 8101196:	b2da      	uxtb	r2, r3
 8101198:	490c      	ldr	r1, [pc, #48]	; (81011cc <__NVIC_SetPriority+0x4c>)
 810119a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 810119e:	0112      	lsls	r2, r2, #4
 81011a0:	b2d2      	uxtb	r2, r2
 81011a2:	440b      	add	r3, r1
 81011a4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 81011a8:	e00a      	b.n	81011c0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 81011aa:	683b      	ldr	r3, [r7, #0]
 81011ac:	b2da      	uxtb	r2, r3
 81011ae:	4908      	ldr	r1, [pc, #32]	; (81011d0 <__NVIC_SetPriority+0x50>)
 81011b0:	88fb      	ldrh	r3, [r7, #6]
 81011b2:	f003 030f 	and.w	r3, r3, #15
 81011b6:	3b04      	subs	r3, #4
 81011b8:	0112      	lsls	r2, r2, #4
 81011ba:	b2d2      	uxtb	r2, r2
 81011bc:	440b      	add	r3, r1
 81011be:	761a      	strb	r2, [r3, #24]
}
 81011c0:	bf00      	nop
 81011c2:	370c      	adds	r7, #12
 81011c4:	46bd      	mov	sp, r7
 81011c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 81011ca:	4770      	bx	lr
 81011cc:	e000e100 	.word	0xe000e100
 81011d0:	e000ed00 	.word	0xe000ed00

081011d4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 81011d4:	b480      	push	{r7}
 81011d6:	b089      	sub	sp, #36	; 0x24
 81011d8:	af00      	add	r7, sp, #0
 81011da:	60f8      	str	r0, [r7, #12]
 81011dc:	60b9      	str	r1, [r7, #8]
 81011de:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 81011e0:	68fb      	ldr	r3, [r7, #12]
 81011e2:	f003 0307 	and.w	r3, r3, #7
 81011e6:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 81011e8:	69fb      	ldr	r3, [r7, #28]
 81011ea:	f1c3 0307 	rsb	r3, r3, #7
 81011ee:	2b04      	cmp	r3, #4
 81011f0:	bf28      	it	cs
 81011f2:	2304      	movcs	r3, #4
 81011f4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 81011f6:	69fb      	ldr	r3, [r7, #28]
 81011f8:	3304      	adds	r3, #4
 81011fa:	2b06      	cmp	r3, #6
 81011fc:	d902      	bls.n	8101204 <NVIC_EncodePriority+0x30>
 81011fe:	69fb      	ldr	r3, [r7, #28]
 8101200:	3b03      	subs	r3, #3
 8101202:	e000      	b.n	8101206 <NVIC_EncodePriority+0x32>
 8101204:	2300      	movs	r3, #0
 8101206:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8101208:	f04f 32ff 	mov.w	r2, #4294967295
 810120c:	69bb      	ldr	r3, [r7, #24]
 810120e:	fa02 f303 	lsl.w	r3, r2, r3
 8101212:	43da      	mvns	r2, r3
 8101214:	68bb      	ldr	r3, [r7, #8]
 8101216:	401a      	ands	r2, r3
 8101218:	697b      	ldr	r3, [r7, #20]
 810121a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 810121c:	f04f 31ff 	mov.w	r1, #4294967295
 8101220:	697b      	ldr	r3, [r7, #20]
 8101222:	fa01 f303 	lsl.w	r3, r1, r3
 8101226:	43d9      	mvns	r1, r3
 8101228:	687b      	ldr	r3, [r7, #4]
 810122a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 810122c:	4313      	orrs	r3, r2
         );
}
 810122e:	4618      	mov	r0, r3
 8101230:	3724      	adds	r7, #36	; 0x24
 8101232:	46bd      	mov	sp, r7
 8101234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101238:	4770      	bx	lr
	...

0810123c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 810123c:	b580      	push	{r7, lr}
 810123e:	b082      	sub	sp, #8
 8101240:	af00      	add	r7, sp, #0
 8101242:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8101244:	687b      	ldr	r3, [r7, #4]
 8101246:	3b01      	subs	r3, #1
 8101248:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 810124c:	d301      	bcc.n	8101252 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 810124e:	2301      	movs	r3, #1
 8101250:	e00f      	b.n	8101272 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8101252:	4a0a      	ldr	r2, [pc, #40]	; (810127c <SysTick_Config+0x40>)
 8101254:	687b      	ldr	r3, [r7, #4]
 8101256:	3b01      	subs	r3, #1
 8101258:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 810125a:	210f      	movs	r1, #15
 810125c:	f04f 30ff 	mov.w	r0, #4294967295
 8101260:	f7ff ff8e 	bl	8101180 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8101264:	4b05      	ldr	r3, [pc, #20]	; (810127c <SysTick_Config+0x40>)
 8101266:	2200      	movs	r2, #0
 8101268:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 810126a:	4b04      	ldr	r3, [pc, #16]	; (810127c <SysTick_Config+0x40>)
 810126c:	2207      	movs	r2, #7
 810126e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8101270:	2300      	movs	r3, #0
}
 8101272:	4618      	mov	r0, r3
 8101274:	3708      	adds	r7, #8
 8101276:	46bd      	mov	sp, r7
 8101278:	bd80      	pop	{r7, pc}
 810127a:	bf00      	nop
 810127c:	e000e010 	.word	0xe000e010

08101280 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8101280:	b580      	push	{r7, lr}
 8101282:	b082      	sub	sp, #8
 8101284:	af00      	add	r7, sp, #0
 8101286:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8101288:	6878      	ldr	r0, [r7, #4]
 810128a:	f7ff ff47 	bl	810111c <__NVIC_SetPriorityGrouping>
}
 810128e:	bf00      	nop
 8101290:	3708      	adds	r7, #8
 8101292:	46bd      	mov	sp, r7
 8101294:	bd80      	pop	{r7, pc}

08101296 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8101296:	b580      	push	{r7, lr}
 8101298:	b086      	sub	sp, #24
 810129a:	af00      	add	r7, sp, #0
 810129c:	4603      	mov	r3, r0
 810129e:	60b9      	str	r1, [r7, #8]
 81012a0:	607a      	str	r2, [r7, #4]
 81012a2:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 81012a4:	f7ff ff5e 	bl	8101164 <__NVIC_GetPriorityGrouping>
 81012a8:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 81012aa:	687a      	ldr	r2, [r7, #4]
 81012ac:	68b9      	ldr	r1, [r7, #8]
 81012ae:	6978      	ldr	r0, [r7, #20]
 81012b0:	f7ff ff90 	bl	81011d4 <NVIC_EncodePriority>
 81012b4:	4602      	mov	r2, r0
 81012b6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 81012ba:	4611      	mov	r1, r2
 81012bc:	4618      	mov	r0, r3
 81012be:	f7ff ff5f 	bl	8101180 <__NVIC_SetPriority>
}
 81012c2:	bf00      	nop
 81012c4:	3718      	adds	r7, #24
 81012c6:	46bd      	mov	sp, r7
 81012c8:	bd80      	pop	{r7, pc}

081012ca <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 81012ca:	b580      	push	{r7, lr}
 81012cc:	b082      	sub	sp, #8
 81012ce:	af00      	add	r7, sp, #0
 81012d0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 81012d2:	6878      	ldr	r0, [r7, #4]
 81012d4:	f7ff ffb2 	bl	810123c <SysTick_Config>
 81012d8:	4603      	mov	r3, r0
}
 81012da:	4618      	mov	r0, r3
 81012dc:	3708      	adds	r7, #8
 81012de:	46bd      	mov	sp, r7
 81012e0:	bd80      	pop	{r7, pc}
	...

081012e4 <HAL_GetCurrentCPUID>:
/**
  * @brief  Returns the current CPU ID.
  * @retval CPU identifier
  */
uint32_t HAL_GetCurrentCPUID(void)
{
 81012e4:	b480      	push	{r7}
 81012e6:	af00      	add	r7, sp, #0
  if (((SCB->CPUID & 0x000000F0U) >> 4 )== 0x7U)
 81012e8:	4b07      	ldr	r3, [pc, #28]	; (8101308 <HAL_GetCurrentCPUID+0x24>)
 81012ea:	681b      	ldr	r3, [r3, #0]
 81012ec:	091b      	lsrs	r3, r3, #4
 81012ee:	f003 030f 	and.w	r3, r3, #15
 81012f2:	2b07      	cmp	r3, #7
 81012f4:	d101      	bne.n	81012fa <HAL_GetCurrentCPUID+0x16>
  {
    return  CM7_CPUID;
 81012f6:	2303      	movs	r3, #3
 81012f8:	e000      	b.n	81012fc <HAL_GetCurrentCPUID+0x18>
  }
  else
  {
    return CM4_CPUID;
 81012fa:	2301      	movs	r3, #1
  }
}
 81012fc:	4618      	mov	r0, r3
 81012fe:	46bd      	mov	sp, r7
 8101300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101304:	4770      	bx	lr
 8101306:	bf00      	nop
 8101308:	e000ed00 	.word	0xe000ed00

0810130c <HAL_HSEM_ActivateNotification>:
  * @brief  Activate Semaphore release Notification for a given Semaphores Mask .
  * @param  SemMask: Mask of Released semaphores
  * @retval Semaphore Key
  */
void HAL_HSEM_ActivateNotification(uint32_t SemMask)
{
 810130c:	b480      	push	{r7}
 810130e:	b083      	sub	sp, #12
 8101310:	af00      	add	r7, sp, #0
 8101312:	6078      	str	r0, [r7, #4]
  {
    /*Use interrupt line 1 for CPU2 Master*/
    HSEM->C2IER |= SemMask;
  }
#else
  HSEM_COMMON->IER |= SemMask;
 8101314:	4b05      	ldr	r3, [pc, #20]	; (810132c <HAL_HSEM_ActivateNotification+0x20>)
 8101316:	681a      	ldr	r2, [r3, #0]
 8101318:	4904      	ldr	r1, [pc, #16]	; (810132c <HAL_HSEM_ActivateNotification+0x20>)
 810131a:	687b      	ldr	r3, [r7, #4]
 810131c:	4313      	orrs	r3, r2
 810131e:	600b      	str	r3, [r1, #0]
#endif
}
 8101320:	bf00      	nop
 8101322:	370c      	adds	r7, #12
 8101324:	46bd      	mov	sp, r7
 8101326:	f85d 7b04 	ldr.w	r7, [sp], #4
 810132a:	4770      	bx	lr
 810132c:	58026510 	.word	0x58026510

08101330 <HAL_PWREx_EnterSTOPMode>:
  *            @arg PWR_D2_DOMAIN : Enter D2 Domain to DSTOP mode.
  *            @arg PWR_D3_DOMAIN : Enter D3/SRD Domain to DSTOP mode.
  * @retval None.
  */
void HAL_PWREx_EnterSTOPMode (uint32_t Regulator, uint8_t STOPEntry, uint32_t Domain)
{
 8101330:	b580      	push	{r7, lr}
 8101332:	b084      	sub	sp, #16
 8101334:	af00      	add	r7, sp, #0
 8101336:	60f8      	str	r0, [r7, #12]
 8101338:	460b      	mov	r3, r1
 810133a:	607a      	str	r2, [r7, #4]
 810133c:	72fb      	strb	r3, [r7, #11]
  assert_param (IS_PWR_REGULATOR (Regulator));
  assert_param (IS_PWR_STOP_ENTRY (STOPEntry));
  assert_param (IS_PWR_DOMAIN (Domain));

  /* Select the regulator state in Stop mode */
  MODIFY_REG (PWR->CR1, PWR_CR1_LPDS, Regulator);
 810133e:	4b37      	ldr	r3, [pc, #220]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 8101340:	681b      	ldr	r3, [r3, #0]
 8101342:	f023 0201 	bic.w	r2, r3, #1
 8101346:	4935      	ldr	r1, [pc, #212]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 8101348:	68fb      	ldr	r3, [r7, #12]
 810134a:	4313      	orrs	r3, r2
 810134c:	600b      	str	r3, [r1, #0]

  /* Select the domain Power Down DeepSleep */
  if (Domain == PWR_D1_DOMAIN)
 810134e:	687b      	ldr	r3, [r7, #4]
 8101350:	2b00      	cmp	r3, #0
 8101352:	d123      	bne.n	810139c <HAL_PWREx_EnterSTOPMode+0x6c>
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () != CM7_CPUID)
 8101354:	f7ff ffc6 	bl	81012e4 <HAL_GetCurrentCPUID>
 8101358:	4603      	mov	r3, r0
 810135a:	2b03      	cmp	r3, #3
 810135c:	d158      	bne.n	8101410 <HAL_PWREx_EnterSTOPMode+0xe0>
      return;
    }
#endif /* defined (DUAL_CORE) */

    /* Keep DSTOP mode when D1/CD domain enters Deepsleep */
    CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D1);
 810135e:	4b2f      	ldr	r3, [pc, #188]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 8101360:	691b      	ldr	r3, [r3, #16]
 8101362:	4a2e      	ldr	r2, [pc, #184]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 8101364:	f023 0301 	bic.w	r3, r3, #1
 8101368:	6113      	str	r3, [r2, #16]

    /* Set SLEEPDEEP bit of Cortex System Control Register */
    SET_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 810136a:	4b2d      	ldr	r3, [pc, #180]	; (8101420 <HAL_PWREx_EnterSTOPMode+0xf0>)
 810136c:	691b      	ldr	r3, [r3, #16]
 810136e:	4a2c      	ldr	r2, [pc, #176]	; (8101420 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101370:	f043 0304 	orr.w	r3, r3, #4
 8101374:	6113      	str	r3, [r2, #16]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8101376:	f3bf 8f4f 	dsb	sy
}
 810137a:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 810137c:	f3bf 8f6f 	isb	sy
}
 8101380:	bf00      	nop
    /* Ensure that all instructions are done before entering STOP mode */
    __DSB ();
    __ISB ();

    /* Select Stop mode entry */
    if (STOPEntry == PWR_STOPENTRY_WFI)
 8101382:	7afb      	ldrb	r3, [r7, #11]
 8101384:	2b01      	cmp	r3, #1
 8101386:	d101      	bne.n	810138c <HAL_PWREx_EnterSTOPMode+0x5c>
    {
      /* Request Wait For Interrupt */
      __WFI ();
 8101388:	bf30      	wfi
 810138a:	e000      	b.n	810138e <HAL_PWREx_EnterSTOPMode+0x5e>
    }
    else
    {
      /* Request Wait For Event */
      __WFE ();
 810138c:	bf20      	wfe
    }

    /* Clear SLEEPDEEP bit of Cortex-Mx in the System Control Register */
    CLEAR_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 810138e:	4b24      	ldr	r3, [pc, #144]	; (8101420 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101390:	691b      	ldr	r3, [r3, #16]
 8101392:	4a23      	ldr	r2, [pc, #140]	; (8101420 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101394:	f023 0304 	bic.w	r3, r3, #4
 8101398:	6113      	str	r3, [r2, #16]
 810139a:	e03c      	b.n	8101416 <HAL_PWREx_EnterSTOPMode+0xe6>
  }
#if defined (PWR_CPUCR_PDDS_D2)
  else if (Domain == PWR_D2_DOMAIN)
 810139c:	687b      	ldr	r3, [r7, #4]
 810139e:	2b01      	cmp	r3, #1
 81013a0:	d123      	bne.n	81013ea <HAL_PWREx_EnterSTOPMode+0xba>
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () != CM4_CPUID)
 81013a2:	f7ff ff9f 	bl	81012e4 <HAL_GetCurrentCPUID>
 81013a6:	4603      	mov	r3, r0
 81013a8:	2b01      	cmp	r3, #1
 81013aa:	d133      	bne.n	8101414 <HAL_PWREx_EnterSTOPMode+0xe4>
      */
      return;
    }

    /* Keep DSTOP mode when D2 domain enters Deepsleep */
    CLEAR_BIT (PWR->CPU2CR, PWR_CPU2CR_PDDS_D2);
 81013ac:	4b1b      	ldr	r3, [pc, #108]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 81013ae:	695b      	ldr	r3, [r3, #20]
 81013b0:	4a1a      	ldr	r2, [pc, #104]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 81013b2:	f023 0302 	bic.w	r3, r3, #2
 81013b6:	6153      	str	r3, [r2, #20]

    /* Set SLEEPDEEP bit of Cortex System Control Register */
    SET_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 81013b8:	4b19      	ldr	r3, [pc, #100]	; (8101420 <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013ba:	691b      	ldr	r3, [r3, #16]
 81013bc:	4a18      	ldr	r2, [pc, #96]	; (8101420 <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013be:	f043 0304 	orr.w	r3, r3, #4
 81013c2:	6113      	str	r3, [r2, #16]
  __ASM volatile ("dsb 0xF":::"memory");
 81013c4:	f3bf 8f4f 	dsb	sy
}
 81013c8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 81013ca:	f3bf 8f6f 	isb	sy
}
 81013ce:	bf00      	nop
    /* Ensure that all instructions are done before entering STOP mode */
    __DSB ();
    __ISB ();

    /* Select Stop mode entry */
    if (STOPEntry == PWR_STOPENTRY_WFI)
 81013d0:	7afb      	ldrb	r3, [r7, #11]
 81013d2:	2b01      	cmp	r3, #1
 81013d4:	d101      	bne.n	81013da <HAL_PWREx_EnterSTOPMode+0xaa>
    {
      /* Request Wait For Interrupt */
      __WFI ();
 81013d6:	bf30      	wfi
 81013d8:	e000      	b.n	81013dc <HAL_PWREx_EnterSTOPMode+0xac>
    }
    else
    {
      /* Request Wait For Event */
      __WFE ();
 81013da:	bf20      	wfe
    }

    /* Clear SLEEPDEEP bit of Cortex-Mx in the System Control Register */
    CLEAR_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 81013dc:	4b10      	ldr	r3, [pc, #64]	; (8101420 <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013de:	691b      	ldr	r3, [r3, #16]
 81013e0:	4a0f      	ldr	r2, [pc, #60]	; (8101420 <HAL_PWREx_EnterSTOPMode+0xf0>)
 81013e2:	f023 0304 	bic.w	r3, r3, #4
 81013e6:	6113      	str	r3, [r2, #16]
 81013e8:	e015      	b.n	8101416 <HAL_PWREx_EnterSTOPMode+0xe6>
#endif /* defined (PWR_CPUCR_PDDS_D2) */
  else
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () == CM7_CPUID)
 81013ea:	f7ff ff7b 	bl	81012e4 <HAL_GetCurrentCPUID>
 81013ee:	4603      	mov	r3, r0
 81013f0:	2b03      	cmp	r3, #3
 81013f2:	d106      	bne.n	8101402 <HAL_PWREx_EnterSTOPMode+0xd2>
    {
      /* Keep DSTOP mode when D3 domain enters Deepsleep */
      CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D3);
 81013f4:	4b09      	ldr	r3, [pc, #36]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 81013f6:	691b      	ldr	r3, [r3, #16]
 81013f8:	4a08      	ldr	r2, [pc, #32]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 81013fa:	f023 0304 	bic.w	r3, r3, #4
 81013fe:	6113      	str	r3, [r2, #16]
 8101400:	e009      	b.n	8101416 <HAL_PWREx_EnterSTOPMode+0xe6>
    }
    else
    {
      /* Keep DSTOP mode when D3 domain enters Deepsleep */
      CLEAR_BIT (PWR->CPU2CR, PWR_CPU2CR_PDDS_D3);
 8101402:	4b06      	ldr	r3, [pc, #24]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 8101404:	695b      	ldr	r3, [r3, #20]
 8101406:	4a05      	ldr	r2, [pc, #20]	; (810141c <HAL_PWREx_EnterSTOPMode+0xec>)
 8101408:	f023 0304 	bic.w	r3, r3, #4
 810140c:	6153      	str	r3, [r2, #20]
 810140e:	e002      	b.n	8101416 <HAL_PWREx_EnterSTOPMode+0xe6>
      return;
 8101410:	bf00      	nop
 8101412:	e000      	b.n	8101416 <HAL_PWREx_EnterSTOPMode+0xe6>
      return;
 8101414:	bf00      	nop
#else
    /* Keep DSTOP mode when D3/SRD domain enters Deepsleep */
    CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D3);
#endif  /* defined (DUAL_CORE) */
  }
}
 8101416:	3710      	adds	r7, #16
 8101418:	46bd      	mov	sp, r7
 810141a:	bd80      	pop	{r7, pc}
 810141c:	58024800 	.word	0x58024800
 8101420:	e000ed00 	.word	0xe000ed00

08101424 <HAL_PWREx_ClearPendingEvent>:
  *         enter low power mode using Wait For Event request.
  * @note   Cortex-M7 must be in CRUN mode when calling this API by Cortex-M4.
  * @retval None.
  */
void HAL_PWREx_ClearPendingEvent (void)
{
 8101424:	b580      	push	{r7, lr}
 8101426:	af00      	add	r7, sp, #0
#if defined (DUAL_CORE)
  /* Check the current Core */
  if (HAL_GetCurrentCPUID () == CM7_CPUID)
 8101428:	f7ff ff5c 	bl	81012e4 <HAL_GetCurrentCPUID>
 810142c:	4603      	mov	r3, r0
 810142e:	2b03      	cmp	r3, #3
 8101430:	d101      	bne.n	8101436 <HAL_PWREx_ClearPendingEvent+0x12>
  {
    __WFE ();
 8101432:	bf20      	wfe
    __WFE ();
  }
#else
  __WFE ();
#endif /* defined (DUAL_CORE) */
}
 8101434:	e001      	b.n	810143a <HAL_PWREx_ClearPendingEvent+0x16>
    __SEV ();
 8101436:	bf40      	sev
    __WFE ();
 8101438:	bf20      	wfe
}
 810143a:	bf00      	nop
 810143c:	bd80      	pop	{r7, pc}
	...

08101440 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8101440:	b480      	push	{r7}
 8101442:	b089      	sub	sp, #36	; 0x24
 8101444:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 8101446:	4bb3      	ldr	r3, [pc, #716]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101448:	691b      	ldr	r3, [r3, #16]
 810144a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 810144e:	2b18      	cmp	r3, #24
 8101450:	f200 8155 	bhi.w	81016fe <HAL_RCC_GetSysClockFreq+0x2be>
 8101454:	a201      	add	r2, pc, #4	; (adr r2, 810145c <HAL_RCC_GetSysClockFreq+0x1c>)
 8101456:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810145a:	bf00      	nop
 810145c:	081014c1 	.word	0x081014c1
 8101460:	081016ff 	.word	0x081016ff
 8101464:	081016ff 	.word	0x081016ff
 8101468:	081016ff 	.word	0x081016ff
 810146c:	081016ff 	.word	0x081016ff
 8101470:	081016ff 	.word	0x081016ff
 8101474:	081016ff 	.word	0x081016ff
 8101478:	081016ff 	.word	0x081016ff
 810147c:	081014e7 	.word	0x081014e7
 8101480:	081016ff 	.word	0x081016ff
 8101484:	081016ff 	.word	0x081016ff
 8101488:	081016ff 	.word	0x081016ff
 810148c:	081016ff 	.word	0x081016ff
 8101490:	081016ff 	.word	0x081016ff
 8101494:	081016ff 	.word	0x081016ff
 8101498:	081016ff 	.word	0x081016ff
 810149c:	081014ed 	.word	0x081014ed
 81014a0:	081016ff 	.word	0x081016ff
 81014a4:	081016ff 	.word	0x081016ff
 81014a8:	081016ff 	.word	0x081016ff
 81014ac:	081016ff 	.word	0x081016ff
 81014b0:	081016ff 	.word	0x081016ff
 81014b4:	081016ff 	.word	0x081016ff
 81014b8:	081016ff 	.word	0x081016ff
 81014bc:	081014f3 	.word	0x081014f3
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 81014c0:	4b94      	ldr	r3, [pc, #592]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81014c2:	681b      	ldr	r3, [r3, #0]
 81014c4:	f003 0320 	and.w	r3, r3, #32
 81014c8:	2b00      	cmp	r3, #0
 81014ca:	d009      	beq.n	81014e0 <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 81014cc:	4b91      	ldr	r3, [pc, #580]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81014ce:	681b      	ldr	r3, [r3, #0]
 81014d0:	08db      	lsrs	r3, r3, #3
 81014d2:	f003 0303 	and.w	r3, r3, #3
 81014d6:	4a90      	ldr	r2, [pc, #576]	; (8101718 <HAL_RCC_GetSysClockFreq+0x2d8>)
 81014d8:	fa22 f303 	lsr.w	r3, r2, r3
 81014dc:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 81014de:	e111      	b.n	8101704 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 81014e0:	4b8d      	ldr	r3, [pc, #564]	; (8101718 <HAL_RCC_GetSysClockFreq+0x2d8>)
 81014e2:	61bb      	str	r3, [r7, #24]
      break;
 81014e4:	e10e      	b.n	8101704 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 81014e6:	4b8d      	ldr	r3, [pc, #564]	; (810171c <HAL_RCC_GetSysClockFreq+0x2dc>)
 81014e8:	61bb      	str	r3, [r7, #24]
      break;
 81014ea:	e10b      	b.n	8101704 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 81014ec:	4b8c      	ldr	r3, [pc, #560]	; (8101720 <HAL_RCC_GetSysClockFreq+0x2e0>)
 81014ee:	61bb      	str	r3, [r7, #24]
      break;
 81014f0:	e108      	b.n	8101704 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 81014f2:	4b88      	ldr	r3, [pc, #544]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81014f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 81014f6:	f003 0303 	and.w	r3, r3, #3
 81014fa:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 81014fc:	4b85      	ldr	r3, [pc, #532]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81014fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8101500:	091b      	lsrs	r3, r3, #4
 8101502:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8101506:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 8101508:	4b82      	ldr	r3, [pc, #520]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 810150a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 810150c:	f003 0301 	and.w	r3, r3, #1
 8101510:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 8101512:	4b80      	ldr	r3, [pc, #512]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101514:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8101516:	08db      	lsrs	r3, r3, #3
 8101518:	f3c3 030c 	ubfx	r3, r3, #0, #13
 810151c:	68fa      	ldr	r2, [r7, #12]
 810151e:	fb02 f303 	mul.w	r3, r2, r3
 8101522:	ee07 3a90 	vmov	s15, r3
 8101526:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810152a:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 810152e:	693b      	ldr	r3, [r7, #16]
 8101530:	2b00      	cmp	r3, #0
 8101532:	f000 80e1 	beq.w	81016f8 <HAL_RCC_GetSysClockFreq+0x2b8>
 8101536:	697b      	ldr	r3, [r7, #20]
 8101538:	2b02      	cmp	r3, #2
 810153a:	f000 8083 	beq.w	8101644 <HAL_RCC_GetSysClockFreq+0x204>
 810153e:	697b      	ldr	r3, [r7, #20]
 8101540:	2b02      	cmp	r3, #2
 8101542:	f200 80a1 	bhi.w	8101688 <HAL_RCC_GetSysClockFreq+0x248>
 8101546:	697b      	ldr	r3, [r7, #20]
 8101548:	2b00      	cmp	r3, #0
 810154a:	d003      	beq.n	8101554 <HAL_RCC_GetSysClockFreq+0x114>
 810154c:	697b      	ldr	r3, [r7, #20]
 810154e:	2b01      	cmp	r3, #1
 8101550:	d056      	beq.n	8101600 <HAL_RCC_GetSysClockFreq+0x1c0>
 8101552:	e099      	b.n	8101688 <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8101554:	4b6f      	ldr	r3, [pc, #444]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101556:	681b      	ldr	r3, [r3, #0]
 8101558:	f003 0320 	and.w	r3, r3, #32
 810155c:	2b00      	cmp	r3, #0
 810155e:	d02d      	beq.n	81015bc <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8101560:	4b6c      	ldr	r3, [pc, #432]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101562:	681b      	ldr	r3, [r3, #0]
 8101564:	08db      	lsrs	r3, r3, #3
 8101566:	f003 0303 	and.w	r3, r3, #3
 810156a:	4a6b      	ldr	r2, [pc, #428]	; (8101718 <HAL_RCC_GetSysClockFreq+0x2d8>)
 810156c:	fa22 f303 	lsr.w	r3, r2, r3
 8101570:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101572:	687b      	ldr	r3, [r7, #4]
 8101574:	ee07 3a90 	vmov	s15, r3
 8101578:	eef8 6a67 	vcvt.f32.u32	s13, s15
 810157c:	693b      	ldr	r3, [r7, #16]
 810157e:	ee07 3a90 	vmov	s15, r3
 8101582:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101586:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 810158a:	4b62      	ldr	r3, [pc, #392]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 810158c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 810158e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8101592:	ee07 3a90 	vmov	s15, r3
 8101596:	eef8 6a67 	vcvt.f32.u32	s13, s15
 810159a:	ed97 6a02 	vldr	s12, [r7, #8]
 810159e:	eddf 5a61 	vldr	s11, [pc, #388]	; 8101724 <HAL_RCC_GetSysClockFreq+0x2e4>
 81015a2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81015a6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81015aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 81015ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81015b2:	ee67 7a27 	vmul.f32	s15, s14, s15
 81015b6:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 81015ba:	e087      	b.n	81016cc <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 81015bc:	693b      	ldr	r3, [r7, #16]
 81015be:	ee07 3a90 	vmov	s15, r3
 81015c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81015c6:	eddf 6a58 	vldr	s13, [pc, #352]	; 8101728 <HAL_RCC_GetSysClockFreq+0x2e8>
 81015ca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81015ce:	4b51      	ldr	r3, [pc, #324]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81015d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 81015d2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81015d6:	ee07 3a90 	vmov	s15, r3
 81015da:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81015de:	ed97 6a02 	vldr	s12, [r7, #8]
 81015e2:	eddf 5a50 	vldr	s11, [pc, #320]	; 8101724 <HAL_RCC_GetSysClockFreq+0x2e4>
 81015e6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81015ea:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81015ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 81015f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81015f6:	ee67 7a27 	vmul.f32	s15, s14, s15
 81015fa:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 81015fe:	e065      	b.n	81016cc <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101600:	693b      	ldr	r3, [r7, #16]
 8101602:	ee07 3a90 	vmov	s15, r3
 8101606:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810160a:	eddf 6a48 	vldr	s13, [pc, #288]	; 810172c <HAL_RCC_GetSysClockFreq+0x2ec>
 810160e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101612:	4b40      	ldr	r3, [pc, #256]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8101616:	f3c3 0308 	ubfx	r3, r3, #0, #9
 810161a:	ee07 3a90 	vmov	s15, r3
 810161e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101622:	ed97 6a02 	vldr	s12, [r7, #8]
 8101626:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8101724 <HAL_RCC_GetSysClockFreq+0x2e4>
 810162a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810162e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8101632:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8101636:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810163a:	ee67 7a27 	vmul.f32	s15, s14, s15
 810163e:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8101642:	e043      	b.n	81016cc <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101644:	693b      	ldr	r3, [r7, #16]
 8101646:	ee07 3a90 	vmov	s15, r3
 810164a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810164e:	eddf 6a38 	vldr	s13, [pc, #224]	; 8101730 <HAL_RCC_GetSysClockFreq+0x2f0>
 8101652:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101656:	4b2f      	ldr	r3, [pc, #188]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101658:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 810165a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 810165e:	ee07 3a90 	vmov	s15, r3
 8101662:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101666:	ed97 6a02 	vldr	s12, [r7, #8]
 810166a:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8101724 <HAL_RCC_GetSysClockFreq+0x2e4>
 810166e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8101672:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8101676:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 810167a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810167e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8101682:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8101686:	e021      	b.n	81016cc <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101688:	693b      	ldr	r3, [r7, #16]
 810168a:	ee07 3a90 	vmov	s15, r3
 810168e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101692:	eddf 6a26 	vldr	s13, [pc, #152]	; 810172c <HAL_RCC_GetSysClockFreq+0x2ec>
 8101696:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 810169a:	4b1e      	ldr	r3, [pc, #120]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 810169c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 810169e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81016a2:	ee07 3a90 	vmov	s15, r3
 81016a6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81016aa:	ed97 6a02 	vldr	s12, [r7, #8]
 81016ae:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8101724 <HAL_RCC_GetSysClockFreq+0x2e4>
 81016b2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81016b6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81016ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 81016be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81016c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 81016c6:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 81016ca:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 81016cc:	4b11      	ldr	r3, [pc, #68]	; (8101714 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81016ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 81016d0:	0a5b      	lsrs	r3, r3, #9
 81016d2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 81016d6:	3301      	adds	r3, #1
 81016d8:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 81016da:	683b      	ldr	r3, [r7, #0]
 81016dc:	ee07 3a90 	vmov	s15, r3
 81016e0:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 81016e4:	edd7 6a07 	vldr	s13, [r7, #28]
 81016e8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 81016ec:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 81016f0:	ee17 3a90 	vmov	r3, s15
 81016f4:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 81016f6:	e005      	b.n	8101704 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 81016f8:	2300      	movs	r3, #0
 81016fa:	61bb      	str	r3, [r7, #24]
      break;
 81016fc:	e002      	b.n	8101704 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 81016fe:	4b07      	ldr	r3, [pc, #28]	; (810171c <HAL_RCC_GetSysClockFreq+0x2dc>)
 8101700:	61bb      	str	r3, [r7, #24]
      break;
 8101702:	bf00      	nop
  }

  return sysclockfreq;
 8101704:	69bb      	ldr	r3, [r7, #24]
}
 8101706:	4618      	mov	r0, r3
 8101708:	3724      	adds	r7, #36	; 0x24
 810170a:	46bd      	mov	sp, r7
 810170c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101710:	4770      	bx	lr
 8101712:	bf00      	nop
 8101714:	58024400 	.word	0x58024400
 8101718:	03d09000 	.word	0x03d09000
 810171c:	003d0900 	.word	0x003d0900
 8101720:	017d7840 	.word	0x017d7840
 8101724:	46000000 	.word	0x46000000
 8101728:	4c742400 	.word	0x4c742400
 810172c:	4a742400 	.word	0x4a742400
 8101730:	4bbebc20 	.word	0x4bbebc20

08101734 <__errno>:
 8101734:	4b01      	ldr	r3, [pc, #4]	; (810173c <__errno+0x8>)
 8101736:	6818      	ldr	r0, [r3, #0]
 8101738:	4770      	bx	lr
 810173a:	bf00      	nop
 810173c:	10000010 	.word	0x10000010

08101740 <__libc_init_array>:
 8101740:	b570      	push	{r4, r5, r6, lr}
 8101742:	4d0d      	ldr	r5, [pc, #52]	; (8101778 <__libc_init_array+0x38>)
 8101744:	4c0d      	ldr	r4, [pc, #52]	; (810177c <__libc_init_array+0x3c>)
 8101746:	1b64      	subs	r4, r4, r5
 8101748:	10a4      	asrs	r4, r4, #2
 810174a:	2600      	movs	r6, #0
 810174c:	42a6      	cmp	r6, r4
 810174e:	d109      	bne.n	8101764 <__libc_init_array+0x24>
 8101750:	4d0b      	ldr	r5, [pc, #44]	; (8101780 <__libc_init_array+0x40>)
 8101752:	4c0c      	ldr	r4, [pc, #48]	; (8101784 <__libc_init_array+0x44>)
 8101754:	f002 fd38 	bl	81041c8 <_init>
 8101758:	1b64      	subs	r4, r4, r5
 810175a:	10a4      	asrs	r4, r4, #2
 810175c:	2600      	movs	r6, #0
 810175e:	42a6      	cmp	r6, r4
 8101760:	d105      	bne.n	810176e <__libc_init_array+0x2e>
 8101762:	bd70      	pop	{r4, r5, r6, pc}
 8101764:	f855 3b04 	ldr.w	r3, [r5], #4
 8101768:	4798      	blx	r3
 810176a:	3601      	adds	r6, #1
 810176c:	e7ee      	b.n	810174c <__libc_init_array+0xc>
 810176e:	f855 3b04 	ldr.w	r3, [r5], #4
 8101772:	4798      	blx	r3
 8101774:	3601      	adds	r6, #1
 8101776:	e7f2      	b.n	810175e <__libc_init_array+0x1e>
 8101778:	081045cc 	.word	0x081045cc
 810177c:	081045cc 	.word	0x081045cc
 8101780:	081045cc 	.word	0x081045cc
 8101784:	081045d0 	.word	0x081045d0

08101788 <memset>:
 8101788:	4402      	add	r2, r0
 810178a:	4603      	mov	r3, r0
 810178c:	4293      	cmp	r3, r2
 810178e:	d100      	bne.n	8101792 <memset+0xa>
 8101790:	4770      	bx	lr
 8101792:	f803 1b01 	strb.w	r1, [r3], #1
 8101796:	e7f9      	b.n	810178c <memset+0x4>

08101798 <__cvt>:
 8101798:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 810179c:	ec55 4b10 	vmov	r4, r5, d0
 81017a0:	2d00      	cmp	r5, #0
 81017a2:	460e      	mov	r6, r1
 81017a4:	4619      	mov	r1, r3
 81017a6:	462b      	mov	r3, r5
 81017a8:	bfbb      	ittet	lt
 81017aa:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 81017ae:	461d      	movlt	r5, r3
 81017b0:	2300      	movge	r3, #0
 81017b2:	232d      	movlt	r3, #45	; 0x2d
 81017b4:	700b      	strb	r3, [r1, #0]
 81017b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 81017b8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 81017bc:	4691      	mov	r9, r2
 81017be:	f023 0820 	bic.w	r8, r3, #32
 81017c2:	bfbc      	itt	lt
 81017c4:	4622      	movlt	r2, r4
 81017c6:	4614      	movlt	r4, r2
 81017c8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 81017cc:	d005      	beq.n	81017da <__cvt+0x42>
 81017ce:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 81017d2:	d100      	bne.n	81017d6 <__cvt+0x3e>
 81017d4:	3601      	adds	r6, #1
 81017d6:	2102      	movs	r1, #2
 81017d8:	e000      	b.n	81017dc <__cvt+0x44>
 81017da:	2103      	movs	r1, #3
 81017dc:	ab03      	add	r3, sp, #12
 81017de:	9301      	str	r3, [sp, #4]
 81017e0:	ab02      	add	r3, sp, #8
 81017e2:	9300      	str	r3, [sp, #0]
 81017e4:	ec45 4b10 	vmov	d0, r4, r5
 81017e8:	4653      	mov	r3, sl
 81017ea:	4632      	mov	r2, r6
 81017ec:	f000 fccc 	bl	8102188 <_dtoa_r>
 81017f0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 81017f4:	4607      	mov	r7, r0
 81017f6:	d102      	bne.n	81017fe <__cvt+0x66>
 81017f8:	f019 0f01 	tst.w	r9, #1
 81017fc:	d022      	beq.n	8101844 <__cvt+0xac>
 81017fe:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8101802:	eb07 0906 	add.w	r9, r7, r6
 8101806:	d110      	bne.n	810182a <__cvt+0x92>
 8101808:	783b      	ldrb	r3, [r7, #0]
 810180a:	2b30      	cmp	r3, #48	; 0x30
 810180c:	d10a      	bne.n	8101824 <__cvt+0x8c>
 810180e:	2200      	movs	r2, #0
 8101810:	2300      	movs	r3, #0
 8101812:	4620      	mov	r0, r4
 8101814:	4629      	mov	r1, r5
 8101816:	f7ff f9df 	bl	8100bd8 <__aeabi_dcmpeq>
 810181a:	b918      	cbnz	r0, 8101824 <__cvt+0x8c>
 810181c:	f1c6 0601 	rsb	r6, r6, #1
 8101820:	f8ca 6000 	str.w	r6, [sl]
 8101824:	f8da 3000 	ldr.w	r3, [sl]
 8101828:	4499      	add	r9, r3
 810182a:	2200      	movs	r2, #0
 810182c:	2300      	movs	r3, #0
 810182e:	4620      	mov	r0, r4
 8101830:	4629      	mov	r1, r5
 8101832:	f7ff f9d1 	bl	8100bd8 <__aeabi_dcmpeq>
 8101836:	b108      	cbz	r0, 810183c <__cvt+0xa4>
 8101838:	f8cd 900c 	str.w	r9, [sp, #12]
 810183c:	2230      	movs	r2, #48	; 0x30
 810183e:	9b03      	ldr	r3, [sp, #12]
 8101840:	454b      	cmp	r3, r9
 8101842:	d307      	bcc.n	8101854 <__cvt+0xbc>
 8101844:	9b03      	ldr	r3, [sp, #12]
 8101846:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8101848:	1bdb      	subs	r3, r3, r7
 810184a:	4638      	mov	r0, r7
 810184c:	6013      	str	r3, [r2, #0]
 810184e:	b004      	add	sp, #16
 8101850:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8101854:	1c59      	adds	r1, r3, #1
 8101856:	9103      	str	r1, [sp, #12]
 8101858:	701a      	strb	r2, [r3, #0]
 810185a:	e7f0      	b.n	810183e <__cvt+0xa6>

0810185c <__exponent>:
 810185c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 810185e:	4603      	mov	r3, r0
 8101860:	2900      	cmp	r1, #0
 8101862:	bfb8      	it	lt
 8101864:	4249      	neglt	r1, r1
 8101866:	f803 2b02 	strb.w	r2, [r3], #2
 810186a:	bfb4      	ite	lt
 810186c:	222d      	movlt	r2, #45	; 0x2d
 810186e:	222b      	movge	r2, #43	; 0x2b
 8101870:	2909      	cmp	r1, #9
 8101872:	7042      	strb	r2, [r0, #1]
 8101874:	dd2a      	ble.n	81018cc <__exponent+0x70>
 8101876:	f10d 0407 	add.w	r4, sp, #7
 810187a:	46a4      	mov	ip, r4
 810187c:	270a      	movs	r7, #10
 810187e:	46a6      	mov	lr, r4
 8101880:	460a      	mov	r2, r1
 8101882:	fb91 f6f7 	sdiv	r6, r1, r7
 8101886:	fb07 1516 	mls	r5, r7, r6, r1
 810188a:	3530      	adds	r5, #48	; 0x30
 810188c:	2a63      	cmp	r2, #99	; 0x63
 810188e:	f104 34ff 	add.w	r4, r4, #4294967295
 8101892:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8101896:	4631      	mov	r1, r6
 8101898:	dcf1      	bgt.n	810187e <__exponent+0x22>
 810189a:	3130      	adds	r1, #48	; 0x30
 810189c:	f1ae 0502 	sub.w	r5, lr, #2
 81018a0:	f804 1c01 	strb.w	r1, [r4, #-1]
 81018a4:	1c44      	adds	r4, r0, #1
 81018a6:	4629      	mov	r1, r5
 81018a8:	4561      	cmp	r1, ip
 81018aa:	d30a      	bcc.n	81018c2 <__exponent+0x66>
 81018ac:	f10d 0209 	add.w	r2, sp, #9
 81018b0:	eba2 020e 	sub.w	r2, r2, lr
 81018b4:	4565      	cmp	r5, ip
 81018b6:	bf88      	it	hi
 81018b8:	2200      	movhi	r2, #0
 81018ba:	4413      	add	r3, r2
 81018bc:	1a18      	subs	r0, r3, r0
 81018be:	b003      	add	sp, #12
 81018c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 81018c2:	f811 2b01 	ldrb.w	r2, [r1], #1
 81018c6:	f804 2f01 	strb.w	r2, [r4, #1]!
 81018ca:	e7ed      	b.n	81018a8 <__exponent+0x4c>
 81018cc:	2330      	movs	r3, #48	; 0x30
 81018ce:	3130      	adds	r1, #48	; 0x30
 81018d0:	7083      	strb	r3, [r0, #2]
 81018d2:	70c1      	strb	r1, [r0, #3]
 81018d4:	1d03      	adds	r3, r0, #4
 81018d6:	e7f1      	b.n	81018bc <__exponent+0x60>

081018d8 <_printf_float>:
 81018d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81018dc:	ed2d 8b02 	vpush	{d8}
 81018e0:	b08d      	sub	sp, #52	; 0x34
 81018e2:	460c      	mov	r4, r1
 81018e4:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 81018e8:	4616      	mov	r6, r2
 81018ea:	461f      	mov	r7, r3
 81018ec:	4605      	mov	r5, r0
 81018ee:	f001 fa39 	bl	8102d64 <_localeconv_r>
 81018f2:	f8d0 a000 	ldr.w	sl, [r0]
 81018f6:	4650      	mov	r0, sl
 81018f8:	f7fe fcf2 	bl	81002e0 <strlen>
 81018fc:	2300      	movs	r3, #0
 81018fe:	930a      	str	r3, [sp, #40]	; 0x28
 8101900:	6823      	ldr	r3, [r4, #0]
 8101902:	9305      	str	r3, [sp, #20]
 8101904:	f8d8 3000 	ldr.w	r3, [r8]
 8101908:	f894 b018 	ldrb.w	fp, [r4, #24]
 810190c:	3307      	adds	r3, #7
 810190e:	f023 0307 	bic.w	r3, r3, #7
 8101912:	f103 0208 	add.w	r2, r3, #8
 8101916:	f8c8 2000 	str.w	r2, [r8]
 810191a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810191e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8101922:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8101926:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 810192a:	9307      	str	r3, [sp, #28]
 810192c:	f8cd 8018 	str.w	r8, [sp, #24]
 8101930:	ee08 0a10 	vmov	s16, r0
 8101934:	4b9f      	ldr	r3, [pc, #636]	; (8101bb4 <_printf_float+0x2dc>)
 8101936:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 810193a:	f04f 32ff 	mov.w	r2, #4294967295
 810193e:	f7ff f97d 	bl	8100c3c <__aeabi_dcmpun>
 8101942:	bb88      	cbnz	r0, 81019a8 <_printf_float+0xd0>
 8101944:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8101948:	4b9a      	ldr	r3, [pc, #616]	; (8101bb4 <_printf_float+0x2dc>)
 810194a:	f04f 32ff 	mov.w	r2, #4294967295
 810194e:	f7ff f957 	bl	8100c00 <__aeabi_dcmple>
 8101952:	bb48      	cbnz	r0, 81019a8 <_printf_float+0xd0>
 8101954:	2200      	movs	r2, #0
 8101956:	2300      	movs	r3, #0
 8101958:	4640      	mov	r0, r8
 810195a:	4649      	mov	r1, r9
 810195c:	f7ff f946 	bl	8100bec <__aeabi_dcmplt>
 8101960:	b110      	cbz	r0, 8101968 <_printf_float+0x90>
 8101962:	232d      	movs	r3, #45	; 0x2d
 8101964:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8101968:	4b93      	ldr	r3, [pc, #588]	; (8101bb8 <_printf_float+0x2e0>)
 810196a:	4894      	ldr	r0, [pc, #592]	; (8101bbc <_printf_float+0x2e4>)
 810196c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8101970:	bf94      	ite	ls
 8101972:	4698      	movls	r8, r3
 8101974:	4680      	movhi	r8, r0
 8101976:	2303      	movs	r3, #3
 8101978:	6123      	str	r3, [r4, #16]
 810197a:	9b05      	ldr	r3, [sp, #20]
 810197c:	f023 0204 	bic.w	r2, r3, #4
 8101980:	6022      	str	r2, [r4, #0]
 8101982:	f04f 0900 	mov.w	r9, #0
 8101986:	9700      	str	r7, [sp, #0]
 8101988:	4633      	mov	r3, r6
 810198a:	aa0b      	add	r2, sp, #44	; 0x2c
 810198c:	4621      	mov	r1, r4
 810198e:	4628      	mov	r0, r5
 8101990:	f000 f9d8 	bl	8101d44 <_printf_common>
 8101994:	3001      	adds	r0, #1
 8101996:	f040 8090 	bne.w	8101aba <_printf_float+0x1e2>
 810199a:	f04f 30ff 	mov.w	r0, #4294967295
 810199e:	b00d      	add	sp, #52	; 0x34
 81019a0:	ecbd 8b02 	vpop	{d8}
 81019a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81019a8:	4642      	mov	r2, r8
 81019aa:	464b      	mov	r3, r9
 81019ac:	4640      	mov	r0, r8
 81019ae:	4649      	mov	r1, r9
 81019b0:	f7ff f944 	bl	8100c3c <__aeabi_dcmpun>
 81019b4:	b140      	cbz	r0, 81019c8 <_printf_float+0xf0>
 81019b6:	464b      	mov	r3, r9
 81019b8:	2b00      	cmp	r3, #0
 81019ba:	bfbc      	itt	lt
 81019bc:	232d      	movlt	r3, #45	; 0x2d
 81019be:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 81019c2:	487f      	ldr	r0, [pc, #508]	; (8101bc0 <_printf_float+0x2e8>)
 81019c4:	4b7f      	ldr	r3, [pc, #508]	; (8101bc4 <_printf_float+0x2ec>)
 81019c6:	e7d1      	b.n	810196c <_printf_float+0x94>
 81019c8:	6863      	ldr	r3, [r4, #4]
 81019ca:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 81019ce:	9206      	str	r2, [sp, #24]
 81019d0:	1c5a      	adds	r2, r3, #1
 81019d2:	d13f      	bne.n	8101a54 <_printf_float+0x17c>
 81019d4:	2306      	movs	r3, #6
 81019d6:	6063      	str	r3, [r4, #4]
 81019d8:	9b05      	ldr	r3, [sp, #20]
 81019da:	6861      	ldr	r1, [r4, #4]
 81019dc:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 81019e0:	2300      	movs	r3, #0
 81019e2:	9303      	str	r3, [sp, #12]
 81019e4:	ab0a      	add	r3, sp, #40	; 0x28
 81019e6:	e9cd b301 	strd	fp, r3, [sp, #4]
 81019ea:	ab09      	add	r3, sp, #36	; 0x24
 81019ec:	ec49 8b10 	vmov	d0, r8, r9
 81019f0:	9300      	str	r3, [sp, #0]
 81019f2:	6022      	str	r2, [r4, #0]
 81019f4:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 81019f8:	4628      	mov	r0, r5
 81019fa:	f7ff fecd 	bl	8101798 <__cvt>
 81019fe:	9b06      	ldr	r3, [sp, #24]
 8101a00:	9909      	ldr	r1, [sp, #36]	; 0x24
 8101a02:	2b47      	cmp	r3, #71	; 0x47
 8101a04:	4680      	mov	r8, r0
 8101a06:	d108      	bne.n	8101a1a <_printf_float+0x142>
 8101a08:	1cc8      	adds	r0, r1, #3
 8101a0a:	db02      	blt.n	8101a12 <_printf_float+0x13a>
 8101a0c:	6863      	ldr	r3, [r4, #4]
 8101a0e:	4299      	cmp	r1, r3
 8101a10:	dd41      	ble.n	8101a96 <_printf_float+0x1be>
 8101a12:	f1ab 0b02 	sub.w	fp, fp, #2
 8101a16:	fa5f fb8b 	uxtb.w	fp, fp
 8101a1a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8101a1e:	d820      	bhi.n	8101a62 <_printf_float+0x18a>
 8101a20:	3901      	subs	r1, #1
 8101a22:	465a      	mov	r2, fp
 8101a24:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8101a28:	9109      	str	r1, [sp, #36]	; 0x24
 8101a2a:	f7ff ff17 	bl	810185c <__exponent>
 8101a2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8101a30:	1813      	adds	r3, r2, r0
 8101a32:	2a01      	cmp	r2, #1
 8101a34:	4681      	mov	r9, r0
 8101a36:	6123      	str	r3, [r4, #16]
 8101a38:	dc02      	bgt.n	8101a40 <_printf_float+0x168>
 8101a3a:	6822      	ldr	r2, [r4, #0]
 8101a3c:	07d2      	lsls	r2, r2, #31
 8101a3e:	d501      	bpl.n	8101a44 <_printf_float+0x16c>
 8101a40:	3301      	adds	r3, #1
 8101a42:	6123      	str	r3, [r4, #16]
 8101a44:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8101a48:	2b00      	cmp	r3, #0
 8101a4a:	d09c      	beq.n	8101986 <_printf_float+0xae>
 8101a4c:	232d      	movs	r3, #45	; 0x2d
 8101a4e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8101a52:	e798      	b.n	8101986 <_printf_float+0xae>
 8101a54:	9a06      	ldr	r2, [sp, #24]
 8101a56:	2a47      	cmp	r2, #71	; 0x47
 8101a58:	d1be      	bne.n	81019d8 <_printf_float+0x100>
 8101a5a:	2b00      	cmp	r3, #0
 8101a5c:	d1bc      	bne.n	81019d8 <_printf_float+0x100>
 8101a5e:	2301      	movs	r3, #1
 8101a60:	e7b9      	b.n	81019d6 <_printf_float+0xfe>
 8101a62:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8101a66:	d118      	bne.n	8101a9a <_printf_float+0x1c2>
 8101a68:	2900      	cmp	r1, #0
 8101a6a:	6863      	ldr	r3, [r4, #4]
 8101a6c:	dd0b      	ble.n	8101a86 <_printf_float+0x1ae>
 8101a6e:	6121      	str	r1, [r4, #16]
 8101a70:	b913      	cbnz	r3, 8101a78 <_printf_float+0x1a0>
 8101a72:	6822      	ldr	r2, [r4, #0]
 8101a74:	07d0      	lsls	r0, r2, #31
 8101a76:	d502      	bpl.n	8101a7e <_printf_float+0x1a6>
 8101a78:	3301      	adds	r3, #1
 8101a7a:	440b      	add	r3, r1
 8101a7c:	6123      	str	r3, [r4, #16]
 8101a7e:	65a1      	str	r1, [r4, #88]	; 0x58
 8101a80:	f04f 0900 	mov.w	r9, #0
 8101a84:	e7de      	b.n	8101a44 <_printf_float+0x16c>
 8101a86:	b913      	cbnz	r3, 8101a8e <_printf_float+0x1b6>
 8101a88:	6822      	ldr	r2, [r4, #0]
 8101a8a:	07d2      	lsls	r2, r2, #31
 8101a8c:	d501      	bpl.n	8101a92 <_printf_float+0x1ba>
 8101a8e:	3302      	adds	r3, #2
 8101a90:	e7f4      	b.n	8101a7c <_printf_float+0x1a4>
 8101a92:	2301      	movs	r3, #1
 8101a94:	e7f2      	b.n	8101a7c <_printf_float+0x1a4>
 8101a96:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8101a9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8101a9c:	4299      	cmp	r1, r3
 8101a9e:	db05      	blt.n	8101aac <_printf_float+0x1d4>
 8101aa0:	6823      	ldr	r3, [r4, #0]
 8101aa2:	6121      	str	r1, [r4, #16]
 8101aa4:	07d8      	lsls	r0, r3, #31
 8101aa6:	d5ea      	bpl.n	8101a7e <_printf_float+0x1a6>
 8101aa8:	1c4b      	adds	r3, r1, #1
 8101aaa:	e7e7      	b.n	8101a7c <_printf_float+0x1a4>
 8101aac:	2900      	cmp	r1, #0
 8101aae:	bfd4      	ite	le
 8101ab0:	f1c1 0202 	rsble	r2, r1, #2
 8101ab4:	2201      	movgt	r2, #1
 8101ab6:	4413      	add	r3, r2
 8101ab8:	e7e0      	b.n	8101a7c <_printf_float+0x1a4>
 8101aba:	6823      	ldr	r3, [r4, #0]
 8101abc:	055a      	lsls	r2, r3, #21
 8101abe:	d407      	bmi.n	8101ad0 <_printf_float+0x1f8>
 8101ac0:	6923      	ldr	r3, [r4, #16]
 8101ac2:	4642      	mov	r2, r8
 8101ac4:	4631      	mov	r1, r6
 8101ac6:	4628      	mov	r0, r5
 8101ac8:	47b8      	blx	r7
 8101aca:	3001      	adds	r0, #1
 8101acc:	d12c      	bne.n	8101b28 <_printf_float+0x250>
 8101ace:	e764      	b.n	810199a <_printf_float+0xc2>
 8101ad0:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8101ad4:	f240 80e0 	bls.w	8101c98 <_printf_float+0x3c0>
 8101ad8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8101adc:	2200      	movs	r2, #0
 8101ade:	2300      	movs	r3, #0
 8101ae0:	f7ff f87a 	bl	8100bd8 <__aeabi_dcmpeq>
 8101ae4:	2800      	cmp	r0, #0
 8101ae6:	d034      	beq.n	8101b52 <_printf_float+0x27a>
 8101ae8:	4a37      	ldr	r2, [pc, #220]	; (8101bc8 <_printf_float+0x2f0>)
 8101aea:	2301      	movs	r3, #1
 8101aec:	4631      	mov	r1, r6
 8101aee:	4628      	mov	r0, r5
 8101af0:	47b8      	blx	r7
 8101af2:	3001      	adds	r0, #1
 8101af4:	f43f af51 	beq.w	810199a <_printf_float+0xc2>
 8101af8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8101afc:	429a      	cmp	r2, r3
 8101afe:	db02      	blt.n	8101b06 <_printf_float+0x22e>
 8101b00:	6823      	ldr	r3, [r4, #0]
 8101b02:	07d8      	lsls	r0, r3, #31
 8101b04:	d510      	bpl.n	8101b28 <_printf_float+0x250>
 8101b06:	ee18 3a10 	vmov	r3, s16
 8101b0a:	4652      	mov	r2, sl
 8101b0c:	4631      	mov	r1, r6
 8101b0e:	4628      	mov	r0, r5
 8101b10:	47b8      	blx	r7
 8101b12:	3001      	adds	r0, #1
 8101b14:	f43f af41 	beq.w	810199a <_printf_float+0xc2>
 8101b18:	f04f 0800 	mov.w	r8, #0
 8101b1c:	f104 091a 	add.w	r9, r4, #26
 8101b20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8101b22:	3b01      	subs	r3, #1
 8101b24:	4543      	cmp	r3, r8
 8101b26:	dc09      	bgt.n	8101b3c <_printf_float+0x264>
 8101b28:	6823      	ldr	r3, [r4, #0]
 8101b2a:	079b      	lsls	r3, r3, #30
 8101b2c:	f100 8105 	bmi.w	8101d3a <_printf_float+0x462>
 8101b30:	68e0      	ldr	r0, [r4, #12]
 8101b32:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8101b34:	4298      	cmp	r0, r3
 8101b36:	bfb8      	it	lt
 8101b38:	4618      	movlt	r0, r3
 8101b3a:	e730      	b.n	810199e <_printf_float+0xc6>
 8101b3c:	2301      	movs	r3, #1
 8101b3e:	464a      	mov	r2, r9
 8101b40:	4631      	mov	r1, r6
 8101b42:	4628      	mov	r0, r5
 8101b44:	47b8      	blx	r7
 8101b46:	3001      	adds	r0, #1
 8101b48:	f43f af27 	beq.w	810199a <_printf_float+0xc2>
 8101b4c:	f108 0801 	add.w	r8, r8, #1
 8101b50:	e7e6      	b.n	8101b20 <_printf_float+0x248>
 8101b52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8101b54:	2b00      	cmp	r3, #0
 8101b56:	dc39      	bgt.n	8101bcc <_printf_float+0x2f4>
 8101b58:	4a1b      	ldr	r2, [pc, #108]	; (8101bc8 <_printf_float+0x2f0>)
 8101b5a:	2301      	movs	r3, #1
 8101b5c:	4631      	mov	r1, r6
 8101b5e:	4628      	mov	r0, r5
 8101b60:	47b8      	blx	r7
 8101b62:	3001      	adds	r0, #1
 8101b64:	f43f af19 	beq.w	810199a <_printf_float+0xc2>
 8101b68:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8101b6c:	4313      	orrs	r3, r2
 8101b6e:	d102      	bne.n	8101b76 <_printf_float+0x29e>
 8101b70:	6823      	ldr	r3, [r4, #0]
 8101b72:	07d9      	lsls	r1, r3, #31
 8101b74:	d5d8      	bpl.n	8101b28 <_printf_float+0x250>
 8101b76:	ee18 3a10 	vmov	r3, s16
 8101b7a:	4652      	mov	r2, sl
 8101b7c:	4631      	mov	r1, r6
 8101b7e:	4628      	mov	r0, r5
 8101b80:	47b8      	blx	r7
 8101b82:	3001      	adds	r0, #1
 8101b84:	f43f af09 	beq.w	810199a <_printf_float+0xc2>
 8101b88:	f04f 0900 	mov.w	r9, #0
 8101b8c:	f104 0a1a 	add.w	sl, r4, #26
 8101b90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8101b92:	425b      	negs	r3, r3
 8101b94:	454b      	cmp	r3, r9
 8101b96:	dc01      	bgt.n	8101b9c <_printf_float+0x2c4>
 8101b98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8101b9a:	e792      	b.n	8101ac2 <_printf_float+0x1ea>
 8101b9c:	2301      	movs	r3, #1
 8101b9e:	4652      	mov	r2, sl
 8101ba0:	4631      	mov	r1, r6
 8101ba2:	4628      	mov	r0, r5
 8101ba4:	47b8      	blx	r7
 8101ba6:	3001      	adds	r0, #1
 8101ba8:	f43f aef7 	beq.w	810199a <_printf_float+0xc2>
 8101bac:	f109 0901 	add.w	r9, r9, #1
 8101bb0:	e7ee      	b.n	8101b90 <_printf_float+0x2b8>
 8101bb2:	bf00      	nop
 8101bb4:	7fefffff 	.word	0x7fefffff
 8101bb8:	081041f4 	.word	0x081041f4
 8101bbc:	081041f8 	.word	0x081041f8
 8101bc0:	08104200 	.word	0x08104200
 8101bc4:	081041fc 	.word	0x081041fc
 8101bc8:	08104204 	.word	0x08104204
 8101bcc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8101bce:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8101bd0:	429a      	cmp	r2, r3
 8101bd2:	bfa8      	it	ge
 8101bd4:	461a      	movge	r2, r3
 8101bd6:	2a00      	cmp	r2, #0
 8101bd8:	4691      	mov	r9, r2
 8101bda:	dc37      	bgt.n	8101c4c <_printf_float+0x374>
 8101bdc:	f04f 0b00 	mov.w	fp, #0
 8101be0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8101be4:	f104 021a 	add.w	r2, r4, #26
 8101be8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8101bea:	9305      	str	r3, [sp, #20]
 8101bec:	eba3 0309 	sub.w	r3, r3, r9
 8101bf0:	455b      	cmp	r3, fp
 8101bf2:	dc33      	bgt.n	8101c5c <_printf_float+0x384>
 8101bf4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8101bf8:	429a      	cmp	r2, r3
 8101bfa:	db3b      	blt.n	8101c74 <_printf_float+0x39c>
 8101bfc:	6823      	ldr	r3, [r4, #0]
 8101bfe:	07da      	lsls	r2, r3, #31
 8101c00:	d438      	bmi.n	8101c74 <_printf_float+0x39c>
 8101c02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8101c04:	9a05      	ldr	r2, [sp, #20]
 8101c06:	9909      	ldr	r1, [sp, #36]	; 0x24
 8101c08:	1a9a      	subs	r2, r3, r2
 8101c0a:	eba3 0901 	sub.w	r9, r3, r1
 8101c0e:	4591      	cmp	r9, r2
 8101c10:	bfa8      	it	ge
 8101c12:	4691      	movge	r9, r2
 8101c14:	f1b9 0f00 	cmp.w	r9, #0
 8101c18:	dc35      	bgt.n	8101c86 <_printf_float+0x3ae>
 8101c1a:	f04f 0800 	mov.w	r8, #0
 8101c1e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8101c22:	f104 0a1a 	add.w	sl, r4, #26
 8101c26:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8101c2a:	1a9b      	subs	r3, r3, r2
 8101c2c:	eba3 0309 	sub.w	r3, r3, r9
 8101c30:	4543      	cmp	r3, r8
 8101c32:	f77f af79 	ble.w	8101b28 <_printf_float+0x250>
 8101c36:	2301      	movs	r3, #1
 8101c38:	4652      	mov	r2, sl
 8101c3a:	4631      	mov	r1, r6
 8101c3c:	4628      	mov	r0, r5
 8101c3e:	47b8      	blx	r7
 8101c40:	3001      	adds	r0, #1
 8101c42:	f43f aeaa 	beq.w	810199a <_printf_float+0xc2>
 8101c46:	f108 0801 	add.w	r8, r8, #1
 8101c4a:	e7ec      	b.n	8101c26 <_printf_float+0x34e>
 8101c4c:	4613      	mov	r3, r2
 8101c4e:	4631      	mov	r1, r6
 8101c50:	4642      	mov	r2, r8
 8101c52:	4628      	mov	r0, r5
 8101c54:	47b8      	blx	r7
 8101c56:	3001      	adds	r0, #1
 8101c58:	d1c0      	bne.n	8101bdc <_printf_float+0x304>
 8101c5a:	e69e      	b.n	810199a <_printf_float+0xc2>
 8101c5c:	2301      	movs	r3, #1
 8101c5e:	4631      	mov	r1, r6
 8101c60:	4628      	mov	r0, r5
 8101c62:	9205      	str	r2, [sp, #20]
 8101c64:	47b8      	blx	r7
 8101c66:	3001      	adds	r0, #1
 8101c68:	f43f ae97 	beq.w	810199a <_printf_float+0xc2>
 8101c6c:	9a05      	ldr	r2, [sp, #20]
 8101c6e:	f10b 0b01 	add.w	fp, fp, #1
 8101c72:	e7b9      	b.n	8101be8 <_printf_float+0x310>
 8101c74:	ee18 3a10 	vmov	r3, s16
 8101c78:	4652      	mov	r2, sl
 8101c7a:	4631      	mov	r1, r6
 8101c7c:	4628      	mov	r0, r5
 8101c7e:	47b8      	blx	r7
 8101c80:	3001      	adds	r0, #1
 8101c82:	d1be      	bne.n	8101c02 <_printf_float+0x32a>
 8101c84:	e689      	b.n	810199a <_printf_float+0xc2>
 8101c86:	9a05      	ldr	r2, [sp, #20]
 8101c88:	464b      	mov	r3, r9
 8101c8a:	4442      	add	r2, r8
 8101c8c:	4631      	mov	r1, r6
 8101c8e:	4628      	mov	r0, r5
 8101c90:	47b8      	blx	r7
 8101c92:	3001      	adds	r0, #1
 8101c94:	d1c1      	bne.n	8101c1a <_printf_float+0x342>
 8101c96:	e680      	b.n	810199a <_printf_float+0xc2>
 8101c98:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8101c9a:	2a01      	cmp	r2, #1
 8101c9c:	dc01      	bgt.n	8101ca2 <_printf_float+0x3ca>
 8101c9e:	07db      	lsls	r3, r3, #31
 8101ca0:	d538      	bpl.n	8101d14 <_printf_float+0x43c>
 8101ca2:	2301      	movs	r3, #1
 8101ca4:	4642      	mov	r2, r8
 8101ca6:	4631      	mov	r1, r6
 8101ca8:	4628      	mov	r0, r5
 8101caa:	47b8      	blx	r7
 8101cac:	3001      	adds	r0, #1
 8101cae:	f43f ae74 	beq.w	810199a <_printf_float+0xc2>
 8101cb2:	ee18 3a10 	vmov	r3, s16
 8101cb6:	4652      	mov	r2, sl
 8101cb8:	4631      	mov	r1, r6
 8101cba:	4628      	mov	r0, r5
 8101cbc:	47b8      	blx	r7
 8101cbe:	3001      	adds	r0, #1
 8101cc0:	f43f ae6b 	beq.w	810199a <_printf_float+0xc2>
 8101cc4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8101cc8:	2200      	movs	r2, #0
 8101cca:	2300      	movs	r3, #0
 8101ccc:	f7fe ff84 	bl	8100bd8 <__aeabi_dcmpeq>
 8101cd0:	b9d8      	cbnz	r0, 8101d0a <_printf_float+0x432>
 8101cd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8101cd4:	f108 0201 	add.w	r2, r8, #1
 8101cd8:	3b01      	subs	r3, #1
 8101cda:	4631      	mov	r1, r6
 8101cdc:	4628      	mov	r0, r5
 8101cde:	47b8      	blx	r7
 8101ce0:	3001      	adds	r0, #1
 8101ce2:	d10e      	bne.n	8101d02 <_printf_float+0x42a>
 8101ce4:	e659      	b.n	810199a <_printf_float+0xc2>
 8101ce6:	2301      	movs	r3, #1
 8101ce8:	4652      	mov	r2, sl
 8101cea:	4631      	mov	r1, r6
 8101cec:	4628      	mov	r0, r5
 8101cee:	47b8      	blx	r7
 8101cf0:	3001      	adds	r0, #1
 8101cf2:	f43f ae52 	beq.w	810199a <_printf_float+0xc2>
 8101cf6:	f108 0801 	add.w	r8, r8, #1
 8101cfa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8101cfc:	3b01      	subs	r3, #1
 8101cfe:	4543      	cmp	r3, r8
 8101d00:	dcf1      	bgt.n	8101ce6 <_printf_float+0x40e>
 8101d02:	464b      	mov	r3, r9
 8101d04:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8101d08:	e6dc      	b.n	8101ac4 <_printf_float+0x1ec>
 8101d0a:	f04f 0800 	mov.w	r8, #0
 8101d0e:	f104 0a1a 	add.w	sl, r4, #26
 8101d12:	e7f2      	b.n	8101cfa <_printf_float+0x422>
 8101d14:	2301      	movs	r3, #1
 8101d16:	4642      	mov	r2, r8
 8101d18:	e7df      	b.n	8101cda <_printf_float+0x402>
 8101d1a:	2301      	movs	r3, #1
 8101d1c:	464a      	mov	r2, r9
 8101d1e:	4631      	mov	r1, r6
 8101d20:	4628      	mov	r0, r5
 8101d22:	47b8      	blx	r7
 8101d24:	3001      	adds	r0, #1
 8101d26:	f43f ae38 	beq.w	810199a <_printf_float+0xc2>
 8101d2a:	f108 0801 	add.w	r8, r8, #1
 8101d2e:	68e3      	ldr	r3, [r4, #12]
 8101d30:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8101d32:	1a5b      	subs	r3, r3, r1
 8101d34:	4543      	cmp	r3, r8
 8101d36:	dcf0      	bgt.n	8101d1a <_printf_float+0x442>
 8101d38:	e6fa      	b.n	8101b30 <_printf_float+0x258>
 8101d3a:	f04f 0800 	mov.w	r8, #0
 8101d3e:	f104 0919 	add.w	r9, r4, #25
 8101d42:	e7f4      	b.n	8101d2e <_printf_float+0x456>

08101d44 <_printf_common>:
 8101d44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8101d48:	4616      	mov	r6, r2
 8101d4a:	4699      	mov	r9, r3
 8101d4c:	688a      	ldr	r2, [r1, #8]
 8101d4e:	690b      	ldr	r3, [r1, #16]
 8101d50:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8101d54:	4293      	cmp	r3, r2
 8101d56:	bfb8      	it	lt
 8101d58:	4613      	movlt	r3, r2
 8101d5a:	6033      	str	r3, [r6, #0]
 8101d5c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8101d60:	4607      	mov	r7, r0
 8101d62:	460c      	mov	r4, r1
 8101d64:	b10a      	cbz	r2, 8101d6a <_printf_common+0x26>
 8101d66:	3301      	adds	r3, #1
 8101d68:	6033      	str	r3, [r6, #0]
 8101d6a:	6823      	ldr	r3, [r4, #0]
 8101d6c:	0699      	lsls	r1, r3, #26
 8101d6e:	bf42      	ittt	mi
 8101d70:	6833      	ldrmi	r3, [r6, #0]
 8101d72:	3302      	addmi	r3, #2
 8101d74:	6033      	strmi	r3, [r6, #0]
 8101d76:	6825      	ldr	r5, [r4, #0]
 8101d78:	f015 0506 	ands.w	r5, r5, #6
 8101d7c:	d106      	bne.n	8101d8c <_printf_common+0x48>
 8101d7e:	f104 0a19 	add.w	sl, r4, #25
 8101d82:	68e3      	ldr	r3, [r4, #12]
 8101d84:	6832      	ldr	r2, [r6, #0]
 8101d86:	1a9b      	subs	r3, r3, r2
 8101d88:	42ab      	cmp	r3, r5
 8101d8a:	dc26      	bgt.n	8101dda <_printf_common+0x96>
 8101d8c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8101d90:	1e13      	subs	r3, r2, #0
 8101d92:	6822      	ldr	r2, [r4, #0]
 8101d94:	bf18      	it	ne
 8101d96:	2301      	movne	r3, #1
 8101d98:	0692      	lsls	r2, r2, #26
 8101d9a:	d42b      	bmi.n	8101df4 <_printf_common+0xb0>
 8101d9c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8101da0:	4649      	mov	r1, r9
 8101da2:	4638      	mov	r0, r7
 8101da4:	47c0      	blx	r8
 8101da6:	3001      	adds	r0, #1
 8101da8:	d01e      	beq.n	8101de8 <_printf_common+0xa4>
 8101daa:	6823      	ldr	r3, [r4, #0]
 8101dac:	68e5      	ldr	r5, [r4, #12]
 8101dae:	6832      	ldr	r2, [r6, #0]
 8101db0:	f003 0306 	and.w	r3, r3, #6
 8101db4:	2b04      	cmp	r3, #4
 8101db6:	bf08      	it	eq
 8101db8:	1aad      	subeq	r5, r5, r2
 8101dba:	68a3      	ldr	r3, [r4, #8]
 8101dbc:	6922      	ldr	r2, [r4, #16]
 8101dbe:	bf0c      	ite	eq
 8101dc0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8101dc4:	2500      	movne	r5, #0
 8101dc6:	4293      	cmp	r3, r2
 8101dc8:	bfc4      	itt	gt
 8101dca:	1a9b      	subgt	r3, r3, r2
 8101dcc:	18ed      	addgt	r5, r5, r3
 8101dce:	2600      	movs	r6, #0
 8101dd0:	341a      	adds	r4, #26
 8101dd2:	42b5      	cmp	r5, r6
 8101dd4:	d11a      	bne.n	8101e0c <_printf_common+0xc8>
 8101dd6:	2000      	movs	r0, #0
 8101dd8:	e008      	b.n	8101dec <_printf_common+0xa8>
 8101dda:	2301      	movs	r3, #1
 8101ddc:	4652      	mov	r2, sl
 8101dde:	4649      	mov	r1, r9
 8101de0:	4638      	mov	r0, r7
 8101de2:	47c0      	blx	r8
 8101de4:	3001      	adds	r0, #1
 8101de6:	d103      	bne.n	8101df0 <_printf_common+0xac>
 8101de8:	f04f 30ff 	mov.w	r0, #4294967295
 8101dec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8101df0:	3501      	adds	r5, #1
 8101df2:	e7c6      	b.n	8101d82 <_printf_common+0x3e>
 8101df4:	18e1      	adds	r1, r4, r3
 8101df6:	1c5a      	adds	r2, r3, #1
 8101df8:	2030      	movs	r0, #48	; 0x30
 8101dfa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8101dfe:	4422      	add	r2, r4
 8101e00:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8101e04:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8101e08:	3302      	adds	r3, #2
 8101e0a:	e7c7      	b.n	8101d9c <_printf_common+0x58>
 8101e0c:	2301      	movs	r3, #1
 8101e0e:	4622      	mov	r2, r4
 8101e10:	4649      	mov	r1, r9
 8101e12:	4638      	mov	r0, r7
 8101e14:	47c0      	blx	r8
 8101e16:	3001      	adds	r0, #1
 8101e18:	d0e6      	beq.n	8101de8 <_printf_common+0xa4>
 8101e1a:	3601      	adds	r6, #1
 8101e1c:	e7d9      	b.n	8101dd2 <_printf_common+0x8e>
	...

08101e20 <_printf_i>:
 8101e20:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8101e24:	7e0f      	ldrb	r7, [r1, #24]
 8101e26:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8101e28:	2f78      	cmp	r7, #120	; 0x78
 8101e2a:	4691      	mov	r9, r2
 8101e2c:	4680      	mov	r8, r0
 8101e2e:	460c      	mov	r4, r1
 8101e30:	469a      	mov	sl, r3
 8101e32:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8101e36:	d807      	bhi.n	8101e48 <_printf_i+0x28>
 8101e38:	2f62      	cmp	r7, #98	; 0x62
 8101e3a:	d80a      	bhi.n	8101e52 <_printf_i+0x32>
 8101e3c:	2f00      	cmp	r7, #0
 8101e3e:	f000 80d8 	beq.w	8101ff2 <_printf_i+0x1d2>
 8101e42:	2f58      	cmp	r7, #88	; 0x58
 8101e44:	f000 80a3 	beq.w	8101f8e <_printf_i+0x16e>
 8101e48:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8101e4c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8101e50:	e03a      	b.n	8101ec8 <_printf_i+0xa8>
 8101e52:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8101e56:	2b15      	cmp	r3, #21
 8101e58:	d8f6      	bhi.n	8101e48 <_printf_i+0x28>
 8101e5a:	a101      	add	r1, pc, #4	; (adr r1, 8101e60 <_printf_i+0x40>)
 8101e5c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8101e60:	08101eb9 	.word	0x08101eb9
 8101e64:	08101ecd 	.word	0x08101ecd
 8101e68:	08101e49 	.word	0x08101e49
 8101e6c:	08101e49 	.word	0x08101e49
 8101e70:	08101e49 	.word	0x08101e49
 8101e74:	08101e49 	.word	0x08101e49
 8101e78:	08101ecd 	.word	0x08101ecd
 8101e7c:	08101e49 	.word	0x08101e49
 8101e80:	08101e49 	.word	0x08101e49
 8101e84:	08101e49 	.word	0x08101e49
 8101e88:	08101e49 	.word	0x08101e49
 8101e8c:	08101fd9 	.word	0x08101fd9
 8101e90:	08101efd 	.word	0x08101efd
 8101e94:	08101fbb 	.word	0x08101fbb
 8101e98:	08101e49 	.word	0x08101e49
 8101e9c:	08101e49 	.word	0x08101e49
 8101ea0:	08101ffb 	.word	0x08101ffb
 8101ea4:	08101e49 	.word	0x08101e49
 8101ea8:	08101efd 	.word	0x08101efd
 8101eac:	08101e49 	.word	0x08101e49
 8101eb0:	08101e49 	.word	0x08101e49
 8101eb4:	08101fc3 	.word	0x08101fc3
 8101eb8:	682b      	ldr	r3, [r5, #0]
 8101eba:	1d1a      	adds	r2, r3, #4
 8101ebc:	681b      	ldr	r3, [r3, #0]
 8101ebe:	602a      	str	r2, [r5, #0]
 8101ec0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8101ec4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8101ec8:	2301      	movs	r3, #1
 8101eca:	e0a3      	b.n	8102014 <_printf_i+0x1f4>
 8101ecc:	6820      	ldr	r0, [r4, #0]
 8101ece:	6829      	ldr	r1, [r5, #0]
 8101ed0:	0606      	lsls	r6, r0, #24
 8101ed2:	f101 0304 	add.w	r3, r1, #4
 8101ed6:	d50a      	bpl.n	8101eee <_printf_i+0xce>
 8101ed8:	680e      	ldr	r6, [r1, #0]
 8101eda:	602b      	str	r3, [r5, #0]
 8101edc:	2e00      	cmp	r6, #0
 8101ede:	da03      	bge.n	8101ee8 <_printf_i+0xc8>
 8101ee0:	232d      	movs	r3, #45	; 0x2d
 8101ee2:	4276      	negs	r6, r6
 8101ee4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8101ee8:	485e      	ldr	r0, [pc, #376]	; (8102064 <_printf_i+0x244>)
 8101eea:	230a      	movs	r3, #10
 8101eec:	e019      	b.n	8101f22 <_printf_i+0x102>
 8101eee:	680e      	ldr	r6, [r1, #0]
 8101ef0:	602b      	str	r3, [r5, #0]
 8101ef2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8101ef6:	bf18      	it	ne
 8101ef8:	b236      	sxthne	r6, r6
 8101efa:	e7ef      	b.n	8101edc <_printf_i+0xbc>
 8101efc:	682b      	ldr	r3, [r5, #0]
 8101efe:	6820      	ldr	r0, [r4, #0]
 8101f00:	1d19      	adds	r1, r3, #4
 8101f02:	6029      	str	r1, [r5, #0]
 8101f04:	0601      	lsls	r1, r0, #24
 8101f06:	d501      	bpl.n	8101f0c <_printf_i+0xec>
 8101f08:	681e      	ldr	r6, [r3, #0]
 8101f0a:	e002      	b.n	8101f12 <_printf_i+0xf2>
 8101f0c:	0646      	lsls	r6, r0, #25
 8101f0e:	d5fb      	bpl.n	8101f08 <_printf_i+0xe8>
 8101f10:	881e      	ldrh	r6, [r3, #0]
 8101f12:	4854      	ldr	r0, [pc, #336]	; (8102064 <_printf_i+0x244>)
 8101f14:	2f6f      	cmp	r7, #111	; 0x6f
 8101f16:	bf0c      	ite	eq
 8101f18:	2308      	moveq	r3, #8
 8101f1a:	230a      	movne	r3, #10
 8101f1c:	2100      	movs	r1, #0
 8101f1e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8101f22:	6865      	ldr	r5, [r4, #4]
 8101f24:	60a5      	str	r5, [r4, #8]
 8101f26:	2d00      	cmp	r5, #0
 8101f28:	bfa2      	ittt	ge
 8101f2a:	6821      	ldrge	r1, [r4, #0]
 8101f2c:	f021 0104 	bicge.w	r1, r1, #4
 8101f30:	6021      	strge	r1, [r4, #0]
 8101f32:	b90e      	cbnz	r6, 8101f38 <_printf_i+0x118>
 8101f34:	2d00      	cmp	r5, #0
 8101f36:	d04d      	beq.n	8101fd4 <_printf_i+0x1b4>
 8101f38:	4615      	mov	r5, r2
 8101f3a:	fbb6 f1f3 	udiv	r1, r6, r3
 8101f3e:	fb03 6711 	mls	r7, r3, r1, r6
 8101f42:	5dc7      	ldrb	r7, [r0, r7]
 8101f44:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8101f48:	4637      	mov	r7, r6
 8101f4a:	42bb      	cmp	r3, r7
 8101f4c:	460e      	mov	r6, r1
 8101f4e:	d9f4      	bls.n	8101f3a <_printf_i+0x11a>
 8101f50:	2b08      	cmp	r3, #8
 8101f52:	d10b      	bne.n	8101f6c <_printf_i+0x14c>
 8101f54:	6823      	ldr	r3, [r4, #0]
 8101f56:	07de      	lsls	r6, r3, #31
 8101f58:	d508      	bpl.n	8101f6c <_printf_i+0x14c>
 8101f5a:	6923      	ldr	r3, [r4, #16]
 8101f5c:	6861      	ldr	r1, [r4, #4]
 8101f5e:	4299      	cmp	r1, r3
 8101f60:	bfde      	ittt	le
 8101f62:	2330      	movle	r3, #48	; 0x30
 8101f64:	f805 3c01 	strble.w	r3, [r5, #-1]
 8101f68:	f105 35ff 	addle.w	r5, r5, #4294967295
 8101f6c:	1b52      	subs	r2, r2, r5
 8101f6e:	6122      	str	r2, [r4, #16]
 8101f70:	f8cd a000 	str.w	sl, [sp]
 8101f74:	464b      	mov	r3, r9
 8101f76:	aa03      	add	r2, sp, #12
 8101f78:	4621      	mov	r1, r4
 8101f7a:	4640      	mov	r0, r8
 8101f7c:	f7ff fee2 	bl	8101d44 <_printf_common>
 8101f80:	3001      	adds	r0, #1
 8101f82:	d14c      	bne.n	810201e <_printf_i+0x1fe>
 8101f84:	f04f 30ff 	mov.w	r0, #4294967295
 8101f88:	b004      	add	sp, #16
 8101f8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8101f8e:	4835      	ldr	r0, [pc, #212]	; (8102064 <_printf_i+0x244>)
 8101f90:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8101f94:	6829      	ldr	r1, [r5, #0]
 8101f96:	6823      	ldr	r3, [r4, #0]
 8101f98:	f851 6b04 	ldr.w	r6, [r1], #4
 8101f9c:	6029      	str	r1, [r5, #0]
 8101f9e:	061d      	lsls	r5, r3, #24
 8101fa0:	d514      	bpl.n	8101fcc <_printf_i+0x1ac>
 8101fa2:	07df      	lsls	r7, r3, #31
 8101fa4:	bf44      	itt	mi
 8101fa6:	f043 0320 	orrmi.w	r3, r3, #32
 8101faa:	6023      	strmi	r3, [r4, #0]
 8101fac:	b91e      	cbnz	r6, 8101fb6 <_printf_i+0x196>
 8101fae:	6823      	ldr	r3, [r4, #0]
 8101fb0:	f023 0320 	bic.w	r3, r3, #32
 8101fb4:	6023      	str	r3, [r4, #0]
 8101fb6:	2310      	movs	r3, #16
 8101fb8:	e7b0      	b.n	8101f1c <_printf_i+0xfc>
 8101fba:	6823      	ldr	r3, [r4, #0]
 8101fbc:	f043 0320 	orr.w	r3, r3, #32
 8101fc0:	6023      	str	r3, [r4, #0]
 8101fc2:	2378      	movs	r3, #120	; 0x78
 8101fc4:	4828      	ldr	r0, [pc, #160]	; (8102068 <_printf_i+0x248>)
 8101fc6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8101fca:	e7e3      	b.n	8101f94 <_printf_i+0x174>
 8101fcc:	0659      	lsls	r1, r3, #25
 8101fce:	bf48      	it	mi
 8101fd0:	b2b6      	uxthmi	r6, r6
 8101fd2:	e7e6      	b.n	8101fa2 <_printf_i+0x182>
 8101fd4:	4615      	mov	r5, r2
 8101fd6:	e7bb      	b.n	8101f50 <_printf_i+0x130>
 8101fd8:	682b      	ldr	r3, [r5, #0]
 8101fda:	6826      	ldr	r6, [r4, #0]
 8101fdc:	6961      	ldr	r1, [r4, #20]
 8101fde:	1d18      	adds	r0, r3, #4
 8101fe0:	6028      	str	r0, [r5, #0]
 8101fe2:	0635      	lsls	r5, r6, #24
 8101fe4:	681b      	ldr	r3, [r3, #0]
 8101fe6:	d501      	bpl.n	8101fec <_printf_i+0x1cc>
 8101fe8:	6019      	str	r1, [r3, #0]
 8101fea:	e002      	b.n	8101ff2 <_printf_i+0x1d2>
 8101fec:	0670      	lsls	r0, r6, #25
 8101fee:	d5fb      	bpl.n	8101fe8 <_printf_i+0x1c8>
 8101ff0:	8019      	strh	r1, [r3, #0]
 8101ff2:	2300      	movs	r3, #0
 8101ff4:	6123      	str	r3, [r4, #16]
 8101ff6:	4615      	mov	r5, r2
 8101ff8:	e7ba      	b.n	8101f70 <_printf_i+0x150>
 8101ffa:	682b      	ldr	r3, [r5, #0]
 8101ffc:	1d1a      	adds	r2, r3, #4
 8101ffe:	602a      	str	r2, [r5, #0]
 8102000:	681d      	ldr	r5, [r3, #0]
 8102002:	6862      	ldr	r2, [r4, #4]
 8102004:	2100      	movs	r1, #0
 8102006:	4628      	mov	r0, r5
 8102008:	f7fe f972 	bl	81002f0 <memchr>
 810200c:	b108      	cbz	r0, 8102012 <_printf_i+0x1f2>
 810200e:	1b40      	subs	r0, r0, r5
 8102010:	6060      	str	r0, [r4, #4]
 8102012:	6863      	ldr	r3, [r4, #4]
 8102014:	6123      	str	r3, [r4, #16]
 8102016:	2300      	movs	r3, #0
 8102018:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 810201c:	e7a8      	b.n	8101f70 <_printf_i+0x150>
 810201e:	6923      	ldr	r3, [r4, #16]
 8102020:	462a      	mov	r2, r5
 8102022:	4649      	mov	r1, r9
 8102024:	4640      	mov	r0, r8
 8102026:	47d0      	blx	sl
 8102028:	3001      	adds	r0, #1
 810202a:	d0ab      	beq.n	8101f84 <_printf_i+0x164>
 810202c:	6823      	ldr	r3, [r4, #0]
 810202e:	079b      	lsls	r3, r3, #30
 8102030:	d413      	bmi.n	810205a <_printf_i+0x23a>
 8102032:	68e0      	ldr	r0, [r4, #12]
 8102034:	9b03      	ldr	r3, [sp, #12]
 8102036:	4298      	cmp	r0, r3
 8102038:	bfb8      	it	lt
 810203a:	4618      	movlt	r0, r3
 810203c:	e7a4      	b.n	8101f88 <_printf_i+0x168>
 810203e:	2301      	movs	r3, #1
 8102040:	4632      	mov	r2, r6
 8102042:	4649      	mov	r1, r9
 8102044:	4640      	mov	r0, r8
 8102046:	47d0      	blx	sl
 8102048:	3001      	adds	r0, #1
 810204a:	d09b      	beq.n	8101f84 <_printf_i+0x164>
 810204c:	3501      	adds	r5, #1
 810204e:	68e3      	ldr	r3, [r4, #12]
 8102050:	9903      	ldr	r1, [sp, #12]
 8102052:	1a5b      	subs	r3, r3, r1
 8102054:	42ab      	cmp	r3, r5
 8102056:	dcf2      	bgt.n	810203e <_printf_i+0x21e>
 8102058:	e7eb      	b.n	8102032 <_printf_i+0x212>
 810205a:	2500      	movs	r5, #0
 810205c:	f104 0619 	add.w	r6, r4, #25
 8102060:	e7f5      	b.n	810204e <_printf_i+0x22e>
 8102062:	bf00      	nop
 8102064:	08104206 	.word	0x08104206
 8102068:	08104217 	.word	0x08104217

0810206c <quorem>:
 810206c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8102070:	6903      	ldr	r3, [r0, #16]
 8102072:	690c      	ldr	r4, [r1, #16]
 8102074:	42a3      	cmp	r3, r4
 8102076:	4607      	mov	r7, r0
 8102078:	f2c0 8081 	blt.w	810217e <quorem+0x112>
 810207c:	3c01      	subs	r4, #1
 810207e:	f101 0814 	add.w	r8, r1, #20
 8102082:	f100 0514 	add.w	r5, r0, #20
 8102086:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 810208a:	9301      	str	r3, [sp, #4]
 810208c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8102090:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8102094:	3301      	adds	r3, #1
 8102096:	429a      	cmp	r2, r3
 8102098:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 810209c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 81020a0:	fbb2 f6f3 	udiv	r6, r2, r3
 81020a4:	d331      	bcc.n	810210a <quorem+0x9e>
 81020a6:	f04f 0e00 	mov.w	lr, #0
 81020aa:	4640      	mov	r0, r8
 81020ac:	46ac      	mov	ip, r5
 81020ae:	46f2      	mov	sl, lr
 81020b0:	f850 2b04 	ldr.w	r2, [r0], #4
 81020b4:	b293      	uxth	r3, r2
 81020b6:	fb06 e303 	mla	r3, r6, r3, lr
 81020ba:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 81020be:	b29b      	uxth	r3, r3
 81020c0:	ebaa 0303 	sub.w	r3, sl, r3
 81020c4:	f8dc a000 	ldr.w	sl, [ip]
 81020c8:	0c12      	lsrs	r2, r2, #16
 81020ca:	fa13 f38a 	uxtah	r3, r3, sl
 81020ce:	fb06 e202 	mla	r2, r6, r2, lr
 81020d2:	9300      	str	r3, [sp, #0]
 81020d4:	9b00      	ldr	r3, [sp, #0]
 81020d6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 81020da:	b292      	uxth	r2, r2
 81020dc:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 81020e0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 81020e4:	f8bd 3000 	ldrh.w	r3, [sp]
 81020e8:	4581      	cmp	r9, r0
 81020ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 81020ee:	f84c 3b04 	str.w	r3, [ip], #4
 81020f2:	ea4f 4a22 	mov.w	sl, r2, asr #16
 81020f6:	d2db      	bcs.n	81020b0 <quorem+0x44>
 81020f8:	f855 300b 	ldr.w	r3, [r5, fp]
 81020fc:	b92b      	cbnz	r3, 810210a <quorem+0x9e>
 81020fe:	9b01      	ldr	r3, [sp, #4]
 8102100:	3b04      	subs	r3, #4
 8102102:	429d      	cmp	r5, r3
 8102104:	461a      	mov	r2, r3
 8102106:	d32e      	bcc.n	8102166 <quorem+0xfa>
 8102108:	613c      	str	r4, [r7, #16]
 810210a:	4638      	mov	r0, r7
 810210c:	f001 f8c6 	bl	810329c <__mcmp>
 8102110:	2800      	cmp	r0, #0
 8102112:	db24      	blt.n	810215e <quorem+0xf2>
 8102114:	3601      	adds	r6, #1
 8102116:	4628      	mov	r0, r5
 8102118:	f04f 0c00 	mov.w	ip, #0
 810211c:	f858 2b04 	ldr.w	r2, [r8], #4
 8102120:	f8d0 e000 	ldr.w	lr, [r0]
 8102124:	b293      	uxth	r3, r2
 8102126:	ebac 0303 	sub.w	r3, ip, r3
 810212a:	0c12      	lsrs	r2, r2, #16
 810212c:	fa13 f38e 	uxtah	r3, r3, lr
 8102130:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8102134:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8102138:	b29b      	uxth	r3, r3
 810213a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 810213e:	45c1      	cmp	r9, r8
 8102140:	f840 3b04 	str.w	r3, [r0], #4
 8102144:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8102148:	d2e8      	bcs.n	810211c <quorem+0xb0>
 810214a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 810214e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8102152:	b922      	cbnz	r2, 810215e <quorem+0xf2>
 8102154:	3b04      	subs	r3, #4
 8102156:	429d      	cmp	r5, r3
 8102158:	461a      	mov	r2, r3
 810215a:	d30a      	bcc.n	8102172 <quorem+0x106>
 810215c:	613c      	str	r4, [r7, #16]
 810215e:	4630      	mov	r0, r6
 8102160:	b003      	add	sp, #12
 8102162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8102166:	6812      	ldr	r2, [r2, #0]
 8102168:	3b04      	subs	r3, #4
 810216a:	2a00      	cmp	r2, #0
 810216c:	d1cc      	bne.n	8102108 <quorem+0x9c>
 810216e:	3c01      	subs	r4, #1
 8102170:	e7c7      	b.n	8102102 <quorem+0x96>
 8102172:	6812      	ldr	r2, [r2, #0]
 8102174:	3b04      	subs	r3, #4
 8102176:	2a00      	cmp	r2, #0
 8102178:	d1f0      	bne.n	810215c <quorem+0xf0>
 810217a:	3c01      	subs	r4, #1
 810217c:	e7eb      	b.n	8102156 <quorem+0xea>
 810217e:	2000      	movs	r0, #0
 8102180:	e7ee      	b.n	8102160 <quorem+0xf4>
 8102182:	0000      	movs	r0, r0
 8102184:	0000      	movs	r0, r0
	...

08102188 <_dtoa_r>:
 8102188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810218c:	ed2d 8b04 	vpush	{d8-d9}
 8102190:	ec57 6b10 	vmov	r6, r7, d0
 8102194:	b093      	sub	sp, #76	; 0x4c
 8102196:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8102198:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 810219c:	9106      	str	r1, [sp, #24]
 810219e:	ee10 aa10 	vmov	sl, s0
 81021a2:	4604      	mov	r4, r0
 81021a4:	9209      	str	r2, [sp, #36]	; 0x24
 81021a6:	930c      	str	r3, [sp, #48]	; 0x30
 81021a8:	46bb      	mov	fp, r7
 81021aa:	b975      	cbnz	r5, 81021ca <_dtoa_r+0x42>
 81021ac:	2010      	movs	r0, #16
 81021ae:	f000 fddd 	bl	8102d6c <malloc>
 81021b2:	4602      	mov	r2, r0
 81021b4:	6260      	str	r0, [r4, #36]	; 0x24
 81021b6:	b920      	cbnz	r0, 81021c2 <_dtoa_r+0x3a>
 81021b8:	4ba7      	ldr	r3, [pc, #668]	; (8102458 <_dtoa_r+0x2d0>)
 81021ba:	21ea      	movs	r1, #234	; 0xea
 81021bc:	48a7      	ldr	r0, [pc, #668]	; (810245c <_dtoa_r+0x2d4>)
 81021be:	f001 fa75 	bl	81036ac <__assert_func>
 81021c2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 81021c6:	6005      	str	r5, [r0, #0]
 81021c8:	60c5      	str	r5, [r0, #12]
 81021ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 81021cc:	6819      	ldr	r1, [r3, #0]
 81021ce:	b151      	cbz	r1, 81021e6 <_dtoa_r+0x5e>
 81021d0:	685a      	ldr	r2, [r3, #4]
 81021d2:	604a      	str	r2, [r1, #4]
 81021d4:	2301      	movs	r3, #1
 81021d6:	4093      	lsls	r3, r2
 81021d8:	608b      	str	r3, [r1, #8]
 81021da:	4620      	mov	r0, r4
 81021dc:	f000 fe1c 	bl	8102e18 <_Bfree>
 81021e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 81021e2:	2200      	movs	r2, #0
 81021e4:	601a      	str	r2, [r3, #0]
 81021e6:	1e3b      	subs	r3, r7, #0
 81021e8:	bfaa      	itet	ge
 81021ea:	2300      	movge	r3, #0
 81021ec:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 81021f0:	f8c8 3000 	strge.w	r3, [r8]
 81021f4:	4b9a      	ldr	r3, [pc, #616]	; (8102460 <_dtoa_r+0x2d8>)
 81021f6:	bfbc      	itt	lt
 81021f8:	2201      	movlt	r2, #1
 81021fa:	f8c8 2000 	strlt.w	r2, [r8]
 81021fe:	ea33 030b 	bics.w	r3, r3, fp
 8102202:	d11b      	bne.n	810223c <_dtoa_r+0xb4>
 8102204:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8102206:	f242 730f 	movw	r3, #9999	; 0x270f
 810220a:	6013      	str	r3, [r2, #0]
 810220c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8102210:	4333      	orrs	r3, r6
 8102212:	f000 8592 	beq.w	8102d3a <_dtoa_r+0xbb2>
 8102216:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8102218:	b963      	cbnz	r3, 8102234 <_dtoa_r+0xac>
 810221a:	4b92      	ldr	r3, [pc, #584]	; (8102464 <_dtoa_r+0x2dc>)
 810221c:	e022      	b.n	8102264 <_dtoa_r+0xdc>
 810221e:	4b92      	ldr	r3, [pc, #584]	; (8102468 <_dtoa_r+0x2e0>)
 8102220:	9301      	str	r3, [sp, #4]
 8102222:	3308      	adds	r3, #8
 8102224:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8102226:	6013      	str	r3, [r2, #0]
 8102228:	9801      	ldr	r0, [sp, #4]
 810222a:	b013      	add	sp, #76	; 0x4c
 810222c:	ecbd 8b04 	vpop	{d8-d9}
 8102230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8102234:	4b8b      	ldr	r3, [pc, #556]	; (8102464 <_dtoa_r+0x2dc>)
 8102236:	9301      	str	r3, [sp, #4]
 8102238:	3303      	adds	r3, #3
 810223a:	e7f3      	b.n	8102224 <_dtoa_r+0x9c>
 810223c:	2200      	movs	r2, #0
 810223e:	2300      	movs	r3, #0
 8102240:	4650      	mov	r0, sl
 8102242:	4659      	mov	r1, fp
 8102244:	f7fe fcc8 	bl	8100bd8 <__aeabi_dcmpeq>
 8102248:	ec4b ab19 	vmov	d9, sl, fp
 810224c:	4680      	mov	r8, r0
 810224e:	b158      	cbz	r0, 8102268 <_dtoa_r+0xe0>
 8102250:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8102252:	2301      	movs	r3, #1
 8102254:	6013      	str	r3, [r2, #0]
 8102256:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8102258:	2b00      	cmp	r3, #0
 810225a:	f000 856b 	beq.w	8102d34 <_dtoa_r+0xbac>
 810225e:	4883      	ldr	r0, [pc, #524]	; (810246c <_dtoa_r+0x2e4>)
 8102260:	6018      	str	r0, [r3, #0]
 8102262:	1e43      	subs	r3, r0, #1
 8102264:	9301      	str	r3, [sp, #4]
 8102266:	e7df      	b.n	8102228 <_dtoa_r+0xa0>
 8102268:	ec4b ab10 	vmov	d0, sl, fp
 810226c:	aa10      	add	r2, sp, #64	; 0x40
 810226e:	a911      	add	r1, sp, #68	; 0x44
 8102270:	4620      	mov	r0, r4
 8102272:	f001 f8b9 	bl	81033e8 <__d2b>
 8102276:	f3cb 550a 	ubfx	r5, fp, #20, #11
 810227a:	ee08 0a10 	vmov	s16, r0
 810227e:	2d00      	cmp	r5, #0
 8102280:	f000 8084 	beq.w	810238c <_dtoa_r+0x204>
 8102284:	ee19 3a90 	vmov	r3, s19
 8102288:	f3c3 0313 	ubfx	r3, r3, #0, #20
 810228c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8102290:	4656      	mov	r6, sl
 8102292:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8102296:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 810229a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 810229e:	4b74      	ldr	r3, [pc, #464]	; (8102470 <_dtoa_r+0x2e8>)
 81022a0:	2200      	movs	r2, #0
 81022a2:	4630      	mov	r0, r6
 81022a4:	4639      	mov	r1, r7
 81022a6:	f7fe f877 	bl	8100398 <__aeabi_dsub>
 81022aa:	a365      	add	r3, pc, #404	; (adr r3, 8102440 <_dtoa_r+0x2b8>)
 81022ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 81022b0:	f7fe fa2a 	bl	8100708 <__aeabi_dmul>
 81022b4:	a364      	add	r3, pc, #400	; (adr r3, 8102448 <_dtoa_r+0x2c0>)
 81022b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 81022ba:	f7fe f86f 	bl	810039c <__adddf3>
 81022be:	4606      	mov	r6, r0
 81022c0:	4628      	mov	r0, r5
 81022c2:	460f      	mov	r7, r1
 81022c4:	f7fe f9b6 	bl	8100634 <__aeabi_i2d>
 81022c8:	a361      	add	r3, pc, #388	; (adr r3, 8102450 <_dtoa_r+0x2c8>)
 81022ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 81022ce:	f7fe fa1b 	bl	8100708 <__aeabi_dmul>
 81022d2:	4602      	mov	r2, r0
 81022d4:	460b      	mov	r3, r1
 81022d6:	4630      	mov	r0, r6
 81022d8:	4639      	mov	r1, r7
 81022da:	f7fe f85f 	bl	810039c <__adddf3>
 81022de:	4606      	mov	r6, r0
 81022e0:	460f      	mov	r7, r1
 81022e2:	f7fe fcc1 	bl	8100c68 <__aeabi_d2iz>
 81022e6:	2200      	movs	r2, #0
 81022e8:	9000      	str	r0, [sp, #0]
 81022ea:	2300      	movs	r3, #0
 81022ec:	4630      	mov	r0, r6
 81022ee:	4639      	mov	r1, r7
 81022f0:	f7fe fc7c 	bl	8100bec <__aeabi_dcmplt>
 81022f4:	b150      	cbz	r0, 810230c <_dtoa_r+0x184>
 81022f6:	9800      	ldr	r0, [sp, #0]
 81022f8:	f7fe f99c 	bl	8100634 <__aeabi_i2d>
 81022fc:	4632      	mov	r2, r6
 81022fe:	463b      	mov	r3, r7
 8102300:	f7fe fc6a 	bl	8100bd8 <__aeabi_dcmpeq>
 8102304:	b910      	cbnz	r0, 810230c <_dtoa_r+0x184>
 8102306:	9b00      	ldr	r3, [sp, #0]
 8102308:	3b01      	subs	r3, #1
 810230a:	9300      	str	r3, [sp, #0]
 810230c:	9b00      	ldr	r3, [sp, #0]
 810230e:	2b16      	cmp	r3, #22
 8102310:	d85a      	bhi.n	81023c8 <_dtoa_r+0x240>
 8102312:	9a00      	ldr	r2, [sp, #0]
 8102314:	4b57      	ldr	r3, [pc, #348]	; (8102474 <_dtoa_r+0x2ec>)
 8102316:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 810231a:	e9d3 2300 	ldrd	r2, r3, [r3]
 810231e:	ec51 0b19 	vmov	r0, r1, d9
 8102322:	f7fe fc63 	bl	8100bec <__aeabi_dcmplt>
 8102326:	2800      	cmp	r0, #0
 8102328:	d050      	beq.n	81023cc <_dtoa_r+0x244>
 810232a:	9b00      	ldr	r3, [sp, #0]
 810232c:	3b01      	subs	r3, #1
 810232e:	9300      	str	r3, [sp, #0]
 8102330:	2300      	movs	r3, #0
 8102332:	930b      	str	r3, [sp, #44]	; 0x2c
 8102334:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8102336:	1b5d      	subs	r5, r3, r5
 8102338:	1e6b      	subs	r3, r5, #1
 810233a:	9305      	str	r3, [sp, #20]
 810233c:	bf45      	ittet	mi
 810233e:	f1c5 0301 	rsbmi	r3, r5, #1
 8102342:	9304      	strmi	r3, [sp, #16]
 8102344:	2300      	movpl	r3, #0
 8102346:	2300      	movmi	r3, #0
 8102348:	bf4c      	ite	mi
 810234a:	9305      	strmi	r3, [sp, #20]
 810234c:	9304      	strpl	r3, [sp, #16]
 810234e:	9b00      	ldr	r3, [sp, #0]
 8102350:	2b00      	cmp	r3, #0
 8102352:	db3d      	blt.n	81023d0 <_dtoa_r+0x248>
 8102354:	9b05      	ldr	r3, [sp, #20]
 8102356:	9a00      	ldr	r2, [sp, #0]
 8102358:	920a      	str	r2, [sp, #40]	; 0x28
 810235a:	4413      	add	r3, r2
 810235c:	9305      	str	r3, [sp, #20]
 810235e:	2300      	movs	r3, #0
 8102360:	9307      	str	r3, [sp, #28]
 8102362:	9b06      	ldr	r3, [sp, #24]
 8102364:	2b09      	cmp	r3, #9
 8102366:	f200 8089 	bhi.w	810247c <_dtoa_r+0x2f4>
 810236a:	2b05      	cmp	r3, #5
 810236c:	bfc4      	itt	gt
 810236e:	3b04      	subgt	r3, #4
 8102370:	9306      	strgt	r3, [sp, #24]
 8102372:	9b06      	ldr	r3, [sp, #24]
 8102374:	f1a3 0302 	sub.w	r3, r3, #2
 8102378:	bfcc      	ite	gt
 810237a:	2500      	movgt	r5, #0
 810237c:	2501      	movle	r5, #1
 810237e:	2b03      	cmp	r3, #3
 8102380:	f200 8087 	bhi.w	8102492 <_dtoa_r+0x30a>
 8102384:	e8df f003 	tbb	[pc, r3]
 8102388:	59383a2d 	.word	0x59383a2d
 810238c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8102390:	441d      	add	r5, r3
 8102392:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8102396:	2b20      	cmp	r3, #32
 8102398:	bfc1      	itttt	gt
 810239a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 810239e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 81023a2:	fa0b f303 	lslgt.w	r3, fp, r3
 81023a6:	fa26 f000 	lsrgt.w	r0, r6, r0
 81023aa:	bfda      	itte	le
 81023ac:	f1c3 0320 	rsble	r3, r3, #32
 81023b0:	fa06 f003 	lslle.w	r0, r6, r3
 81023b4:	4318      	orrgt	r0, r3
 81023b6:	f7fe f92d 	bl	8100614 <__aeabi_ui2d>
 81023ba:	2301      	movs	r3, #1
 81023bc:	4606      	mov	r6, r0
 81023be:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 81023c2:	3d01      	subs	r5, #1
 81023c4:	930e      	str	r3, [sp, #56]	; 0x38
 81023c6:	e76a      	b.n	810229e <_dtoa_r+0x116>
 81023c8:	2301      	movs	r3, #1
 81023ca:	e7b2      	b.n	8102332 <_dtoa_r+0x1aa>
 81023cc:	900b      	str	r0, [sp, #44]	; 0x2c
 81023ce:	e7b1      	b.n	8102334 <_dtoa_r+0x1ac>
 81023d0:	9b04      	ldr	r3, [sp, #16]
 81023d2:	9a00      	ldr	r2, [sp, #0]
 81023d4:	1a9b      	subs	r3, r3, r2
 81023d6:	9304      	str	r3, [sp, #16]
 81023d8:	4253      	negs	r3, r2
 81023da:	9307      	str	r3, [sp, #28]
 81023dc:	2300      	movs	r3, #0
 81023de:	930a      	str	r3, [sp, #40]	; 0x28
 81023e0:	e7bf      	b.n	8102362 <_dtoa_r+0x1da>
 81023e2:	2300      	movs	r3, #0
 81023e4:	9308      	str	r3, [sp, #32]
 81023e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 81023e8:	2b00      	cmp	r3, #0
 81023ea:	dc55      	bgt.n	8102498 <_dtoa_r+0x310>
 81023ec:	2301      	movs	r3, #1
 81023ee:	e9cd 3302 	strd	r3, r3, [sp, #8]
 81023f2:	461a      	mov	r2, r3
 81023f4:	9209      	str	r2, [sp, #36]	; 0x24
 81023f6:	e00c      	b.n	8102412 <_dtoa_r+0x28a>
 81023f8:	2301      	movs	r3, #1
 81023fa:	e7f3      	b.n	81023e4 <_dtoa_r+0x25c>
 81023fc:	2300      	movs	r3, #0
 81023fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8102400:	9308      	str	r3, [sp, #32]
 8102402:	9b00      	ldr	r3, [sp, #0]
 8102404:	4413      	add	r3, r2
 8102406:	9302      	str	r3, [sp, #8]
 8102408:	3301      	adds	r3, #1
 810240a:	2b01      	cmp	r3, #1
 810240c:	9303      	str	r3, [sp, #12]
 810240e:	bfb8      	it	lt
 8102410:	2301      	movlt	r3, #1
 8102412:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8102414:	2200      	movs	r2, #0
 8102416:	6042      	str	r2, [r0, #4]
 8102418:	2204      	movs	r2, #4
 810241a:	f102 0614 	add.w	r6, r2, #20
 810241e:	429e      	cmp	r6, r3
 8102420:	6841      	ldr	r1, [r0, #4]
 8102422:	d93d      	bls.n	81024a0 <_dtoa_r+0x318>
 8102424:	4620      	mov	r0, r4
 8102426:	f000 fcb7 	bl	8102d98 <_Balloc>
 810242a:	9001      	str	r0, [sp, #4]
 810242c:	2800      	cmp	r0, #0
 810242e:	d13b      	bne.n	81024a8 <_dtoa_r+0x320>
 8102430:	4b11      	ldr	r3, [pc, #68]	; (8102478 <_dtoa_r+0x2f0>)
 8102432:	4602      	mov	r2, r0
 8102434:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8102438:	e6c0      	b.n	81021bc <_dtoa_r+0x34>
 810243a:	2301      	movs	r3, #1
 810243c:	e7df      	b.n	81023fe <_dtoa_r+0x276>
 810243e:	bf00      	nop
 8102440:	636f4361 	.word	0x636f4361
 8102444:	3fd287a7 	.word	0x3fd287a7
 8102448:	8b60c8b3 	.word	0x8b60c8b3
 810244c:	3fc68a28 	.word	0x3fc68a28
 8102450:	509f79fb 	.word	0x509f79fb
 8102454:	3fd34413 	.word	0x3fd34413
 8102458:	08104235 	.word	0x08104235
 810245c:	0810424c 	.word	0x0810424c
 8102460:	7ff00000 	.word	0x7ff00000
 8102464:	08104231 	.word	0x08104231
 8102468:	08104228 	.word	0x08104228
 810246c:	08104205 	.word	0x08104205
 8102470:	3ff80000 	.word	0x3ff80000
 8102474:	08104340 	.word	0x08104340
 8102478:	081042a7 	.word	0x081042a7
 810247c:	2501      	movs	r5, #1
 810247e:	2300      	movs	r3, #0
 8102480:	9306      	str	r3, [sp, #24]
 8102482:	9508      	str	r5, [sp, #32]
 8102484:	f04f 33ff 	mov.w	r3, #4294967295
 8102488:	e9cd 3302 	strd	r3, r3, [sp, #8]
 810248c:	2200      	movs	r2, #0
 810248e:	2312      	movs	r3, #18
 8102490:	e7b0      	b.n	81023f4 <_dtoa_r+0x26c>
 8102492:	2301      	movs	r3, #1
 8102494:	9308      	str	r3, [sp, #32]
 8102496:	e7f5      	b.n	8102484 <_dtoa_r+0x2fc>
 8102498:	9b09      	ldr	r3, [sp, #36]	; 0x24
 810249a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 810249e:	e7b8      	b.n	8102412 <_dtoa_r+0x28a>
 81024a0:	3101      	adds	r1, #1
 81024a2:	6041      	str	r1, [r0, #4]
 81024a4:	0052      	lsls	r2, r2, #1
 81024a6:	e7b8      	b.n	810241a <_dtoa_r+0x292>
 81024a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 81024aa:	9a01      	ldr	r2, [sp, #4]
 81024ac:	601a      	str	r2, [r3, #0]
 81024ae:	9b03      	ldr	r3, [sp, #12]
 81024b0:	2b0e      	cmp	r3, #14
 81024b2:	f200 809d 	bhi.w	81025f0 <_dtoa_r+0x468>
 81024b6:	2d00      	cmp	r5, #0
 81024b8:	f000 809a 	beq.w	81025f0 <_dtoa_r+0x468>
 81024bc:	9b00      	ldr	r3, [sp, #0]
 81024be:	2b00      	cmp	r3, #0
 81024c0:	dd32      	ble.n	8102528 <_dtoa_r+0x3a0>
 81024c2:	4ab7      	ldr	r2, [pc, #732]	; (81027a0 <_dtoa_r+0x618>)
 81024c4:	f003 030f 	and.w	r3, r3, #15
 81024c8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 81024cc:	e9d3 8900 	ldrd	r8, r9, [r3]
 81024d0:	9b00      	ldr	r3, [sp, #0]
 81024d2:	05d8      	lsls	r0, r3, #23
 81024d4:	ea4f 1723 	mov.w	r7, r3, asr #4
 81024d8:	d516      	bpl.n	8102508 <_dtoa_r+0x380>
 81024da:	4bb2      	ldr	r3, [pc, #712]	; (81027a4 <_dtoa_r+0x61c>)
 81024dc:	ec51 0b19 	vmov	r0, r1, d9
 81024e0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 81024e4:	f7fe fa3a 	bl	810095c <__aeabi_ddiv>
 81024e8:	f007 070f 	and.w	r7, r7, #15
 81024ec:	4682      	mov	sl, r0
 81024ee:	468b      	mov	fp, r1
 81024f0:	2503      	movs	r5, #3
 81024f2:	4eac      	ldr	r6, [pc, #688]	; (81027a4 <_dtoa_r+0x61c>)
 81024f4:	b957      	cbnz	r7, 810250c <_dtoa_r+0x384>
 81024f6:	4642      	mov	r2, r8
 81024f8:	464b      	mov	r3, r9
 81024fa:	4650      	mov	r0, sl
 81024fc:	4659      	mov	r1, fp
 81024fe:	f7fe fa2d 	bl	810095c <__aeabi_ddiv>
 8102502:	4682      	mov	sl, r0
 8102504:	468b      	mov	fp, r1
 8102506:	e028      	b.n	810255a <_dtoa_r+0x3d2>
 8102508:	2502      	movs	r5, #2
 810250a:	e7f2      	b.n	81024f2 <_dtoa_r+0x36a>
 810250c:	07f9      	lsls	r1, r7, #31
 810250e:	d508      	bpl.n	8102522 <_dtoa_r+0x39a>
 8102510:	4640      	mov	r0, r8
 8102512:	4649      	mov	r1, r9
 8102514:	e9d6 2300 	ldrd	r2, r3, [r6]
 8102518:	f7fe f8f6 	bl	8100708 <__aeabi_dmul>
 810251c:	3501      	adds	r5, #1
 810251e:	4680      	mov	r8, r0
 8102520:	4689      	mov	r9, r1
 8102522:	107f      	asrs	r7, r7, #1
 8102524:	3608      	adds	r6, #8
 8102526:	e7e5      	b.n	81024f4 <_dtoa_r+0x36c>
 8102528:	f000 809b 	beq.w	8102662 <_dtoa_r+0x4da>
 810252c:	9b00      	ldr	r3, [sp, #0]
 810252e:	4f9d      	ldr	r7, [pc, #628]	; (81027a4 <_dtoa_r+0x61c>)
 8102530:	425e      	negs	r6, r3
 8102532:	4b9b      	ldr	r3, [pc, #620]	; (81027a0 <_dtoa_r+0x618>)
 8102534:	f006 020f 	and.w	r2, r6, #15
 8102538:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 810253c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8102540:	ec51 0b19 	vmov	r0, r1, d9
 8102544:	f7fe f8e0 	bl	8100708 <__aeabi_dmul>
 8102548:	1136      	asrs	r6, r6, #4
 810254a:	4682      	mov	sl, r0
 810254c:	468b      	mov	fp, r1
 810254e:	2300      	movs	r3, #0
 8102550:	2502      	movs	r5, #2
 8102552:	2e00      	cmp	r6, #0
 8102554:	d17a      	bne.n	810264c <_dtoa_r+0x4c4>
 8102556:	2b00      	cmp	r3, #0
 8102558:	d1d3      	bne.n	8102502 <_dtoa_r+0x37a>
 810255a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 810255c:	2b00      	cmp	r3, #0
 810255e:	f000 8082 	beq.w	8102666 <_dtoa_r+0x4de>
 8102562:	4b91      	ldr	r3, [pc, #580]	; (81027a8 <_dtoa_r+0x620>)
 8102564:	2200      	movs	r2, #0
 8102566:	4650      	mov	r0, sl
 8102568:	4659      	mov	r1, fp
 810256a:	f7fe fb3f 	bl	8100bec <__aeabi_dcmplt>
 810256e:	2800      	cmp	r0, #0
 8102570:	d079      	beq.n	8102666 <_dtoa_r+0x4de>
 8102572:	9b03      	ldr	r3, [sp, #12]
 8102574:	2b00      	cmp	r3, #0
 8102576:	d076      	beq.n	8102666 <_dtoa_r+0x4de>
 8102578:	9b02      	ldr	r3, [sp, #8]
 810257a:	2b00      	cmp	r3, #0
 810257c:	dd36      	ble.n	81025ec <_dtoa_r+0x464>
 810257e:	9b00      	ldr	r3, [sp, #0]
 8102580:	4650      	mov	r0, sl
 8102582:	4659      	mov	r1, fp
 8102584:	1e5f      	subs	r7, r3, #1
 8102586:	2200      	movs	r2, #0
 8102588:	4b88      	ldr	r3, [pc, #544]	; (81027ac <_dtoa_r+0x624>)
 810258a:	f7fe f8bd 	bl	8100708 <__aeabi_dmul>
 810258e:	9e02      	ldr	r6, [sp, #8]
 8102590:	4682      	mov	sl, r0
 8102592:	468b      	mov	fp, r1
 8102594:	3501      	adds	r5, #1
 8102596:	4628      	mov	r0, r5
 8102598:	f7fe f84c 	bl	8100634 <__aeabi_i2d>
 810259c:	4652      	mov	r2, sl
 810259e:	465b      	mov	r3, fp
 81025a0:	f7fe f8b2 	bl	8100708 <__aeabi_dmul>
 81025a4:	4b82      	ldr	r3, [pc, #520]	; (81027b0 <_dtoa_r+0x628>)
 81025a6:	2200      	movs	r2, #0
 81025a8:	f7fd fef8 	bl	810039c <__adddf3>
 81025ac:	46d0      	mov	r8, sl
 81025ae:	46d9      	mov	r9, fp
 81025b0:	4682      	mov	sl, r0
 81025b2:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 81025b6:	2e00      	cmp	r6, #0
 81025b8:	d158      	bne.n	810266c <_dtoa_r+0x4e4>
 81025ba:	4b7e      	ldr	r3, [pc, #504]	; (81027b4 <_dtoa_r+0x62c>)
 81025bc:	2200      	movs	r2, #0
 81025be:	4640      	mov	r0, r8
 81025c0:	4649      	mov	r1, r9
 81025c2:	f7fd fee9 	bl	8100398 <__aeabi_dsub>
 81025c6:	4652      	mov	r2, sl
 81025c8:	465b      	mov	r3, fp
 81025ca:	4680      	mov	r8, r0
 81025cc:	4689      	mov	r9, r1
 81025ce:	f7fe fb2b 	bl	8100c28 <__aeabi_dcmpgt>
 81025d2:	2800      	cmp	r0, #0
 81025d4:	f040 8295 	bne.w	8102b02 <_dtoa_r+0x97a>
 81025d8:	4652      	mov	r2, sl
 81025da:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 81025de:	4640      	mov	r0, r8
 81025e0:	4649      	mov	r1, r9
 81025e2:	f7fe fb03 	bl	8100bec <__aeabi_dcmplt>
 81025e6:	2800      	cmp	r0, #0
 81025e8:	f040 8289 	bne.w	8102afe <_dtoa_r+0x976>
 81025ec:	ec5b ab19 	vmov	sl, fp, d9
 81025f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 81025f2:	2b00      	cmp	r3, #0
 81025f4:	f2c0 8148 	blt.w	8102888 <_dtoa_r+0x700>
 81025f8:	9a00      	ldr	r2, [sp, #0]
 81025fa:	2a0e      	cmp	r2, #14
 81025fc:	f300 8144 	bgt.w	8102888 <_dtoa_r+0x700>
 8102600:	4b67      	ldr	r3, [pc, #412]	; (81027a0 <_dtoa_r+0x618>)
 8102602:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8102606:	e9d3 8900 	ldrd	r8, r9, [r3]
 810260a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 810260c:	2b00      	cmp	r3, #0
 810260e:	f280 80d5 	bge.w	81027bc <_dtoa_r+0x634>
 8102612:	9b03      	ldr	r3, [sp, #12]
 8102614:	2b00      	cmp	r3, #0
 8102616:	f300 80d1 	bgt.w	81027bc <_dtoa_r+0x634>
 810261a:	f040 826f 	bne.w	8102afc <_dtoa_r+0x974>
 810261e:	4b65      	ldr	r3, [pc, #404]	; (81027b4 <_dtoa_r+0x62c>)
 8102620:	2200      	movs	r2, #0
 8102622:	4640      	mov	r0, r8
 8102624:	4649      	mov	r1, r9
 8102626:	f7fe f86f 	bl	8100708 <__aeabi_dmul>
 810262a:	4652      	mov	r2, sl
 810262c:	465b      	mov	r3, fp
 810262e:	f7fe faf1 	bl	8100c14 <__aeabi_dcmpge>
 8102632:	9e03      	ldr	r6, [sp, #12]
 8102634:	4637      	mov	r7, r6
 8102636:	2800      	cmp	r0, #0
 8102638:	f040 8245 	bne.w	8102ac6 <_dtoa_r+0x93e>
 810263c:	9d01      	ldr	r5, [sp, #4]
 810263e:	2331      	movs	r3, #49	; 0x31
 8102640:	f805 3b01 	strb.w	r3, [r5], #1
 8102644:	9b00      	ldr	r3, [sp, #0]
 8102646:	3301      	adds	r3, #1
 8102648:	9300      	str	r3, [sp, #0]
 810264a:	e240      	b.n	8102ace <_dtoa_r+0x946>
 810264c:	07f2      	lsls	r2, r6, #31
 810264e:	d505      	bpl.n	810265c <_dtoa_r+0x4d4>
 8102650:	e9d7 2300 	ldrd	r2, r3, [r7]
 8102654:	f7fe f858 	bl	8100708 <__aeabi_dmul>
 8102658:	3501      	adds	r5, #1
 810265a:	2301      	movs	r3, #1
 810265c:	1076      	asrs	r6, r6, #1
 810265e:	3708      	adds	r7, #8
 8102660:	e777      	b.n	8102552 <_dtoa_r+0x3ca>
 8102662:	2502      	movs	r5, #2
 8102664:	e779      	b.n	810255a <_dtoa_r+0x3d2>
 8102666:	9f00      	ldr	r7, [sp, #0]
 8102668:	9e03      	ldr	r6, [sp, #12]
 810266a:	e794      	b.n	8102596 <_dtoa_r+0x40e>
 810266c:	9901      	ldr	r1, [sp, #4]
 810266e:	4b4c      	ldr	r3, [pc, #304]	; (81027a0 <_dtoa_r+0x618>)
 8102670:	4431      	add	r1, r6
 8102672:	910d      	str	r1, [sp, #52]	; 0x34
 8102674:	9908      	ldr	r1, [sp, #32]
 8102676:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 810267a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 810267e:	2900      	cmp	r1, #0
 8102680:	d043      	beq.n	810270a <_dtoa_r+0x582>
 8102682:	494d      	ldr	r1, [pc, #308]	; (81027b8 <_dtoa_r+0x630>)
 8102684:	2000      	movs	r0, #0
 8102686:	f7fe f969 	bl	810095c <__aeabi_ddiv>
 810268a:	4652      	mov	r2, sl
 810268c:	465b      	mov	r3, fp
 810268e:	f7fd fe83 	bl	8100398 <__aeabi_dsub>
 8102692:	9d01      	ldr	r5, [sp, #4]
 8102694:	4682      	mov	sl, r0
 8102696:	468b      	mov	fp, r1
 8102698:	4649      	mov	r1, r9
 810269a:	4640      	mov	r0, r8
 810269c:	f7fe fae4 	bl	8100c68 <__aeabi_d2iz>
 81026a0:	4606      	mov	r6, r0
 81026a2:	f7fd ffc7 	bl	8100634 <__aeabi_i2d>
 81026a6:	4602      	mov	r2, r0
 81026a8:	460b      	mov	r3, r1
 81026aa:	4640      	mov	r0, r8
 81026ac:	4649      	mov	r1, r9
 81026ae:	f7fd fe73 	bl	8100398 <__aeabi_dsub>
 81026b2:	3630      	adds	r6, #48	; 0x30
 81026b4:	f805 6b01 	strb.w	r6, [r5], #1
 81026b8:	4652      	mov	r2, sl
 81026ba:	465b      	mov	r3, fp
 81026bc:	4680      	mov	r8, r0
 81026be:	4689      	mov	r9, r1
 81026c0:	f7fe fa94 	bl	8100bec <__aeabi_dcmplt>
 81026c4:	2800      	cmp	r0, #0
 81026c6:	d163      	bne.n	8102790 <_dtoa_r+0x608>
 81026c8:	4642      	mov	r2, r8
 81026ca:	464b      	mov	r3, r9
 81026cc:	4936      	ldr	r1, [pc, #216]	; (81027a8 <_dtoa_r+0x620>)
 81026ce:	2000      	movs	r0, #0
 81026d0:	f7fd fe62 	bl	8100398 <__aeabi_dsub>
 81026d4:	4652      	mov	r2, sl
 81026d6:	465b      	mov	r3, fp
 81026d8:	f7fe fa88 	bl	8100bec <__aeabi_dcmplt>
 81026dc:	2800      	cmp	r0, #0
 81026de:	f040 80b5 	bne.w	810284c <_dtoa_r+0x6c4>
 81026e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 81026e4:	429d      	cmp	r5, r3
 81026e6:	d081      	beq.n	81025ec <_dtoa_r+0x464>
 81026e8:	4b30      	ldr	r3, [pc, #192]	; (81027ac <_dtoa_r+0x624>)
 81026ea:	2200      	movs	r2, #0
 81026ec:	4650      	mov	r0, sl
 81026ee:	4659      	mov	r1, fp
 81026f0:	f7fe f80a 	bl	8100708 <__aeabi_dmul>
 81026f4:	4b2d      	ldr	r3, [pc, #180]	; (81027ac <_dtoa_r+0x624>)
 81026f6:	4682      	mov	sl, r0
 81026f8:	468b      	mov	fp, r1
 81026fa:	4640      	mov	r0, r8
 81026fc:	4649      	mov	r1, r9
 81026fe:	2200      	movs	r2, #0
 8102700:	f7fe f802 	bl	8100708 <__aeabi_dmul>
 8102704:	4680      	mov	r8, r0
 8102706:	4689      	mov	r9, r1
 8102708:	e7c6      	b.n	8102698 <_dtoa_r+0x510>
 810270a:	4650      	mov	r0, sl
 810270c:	4659      	mov	r1, fp
 810270e:	f7fd fffb 	bl	8100708 <__aeabi_dmul>
 8102712:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8102714:	9d01      	ldr	r5, [sp, #4]
 8102716:	930f      	str	r3, [sp, #60]	; 0x3c
 8102718:	4682      	mov	sl, r0
 810271a:	468b      	mov	fp, r1
 810271c:	4649      	mov	r1, r9
 810271e:	4640      	mov	r0, r8
 8102720:	f7fe faa2 	bl	8100c68 <__aeabi_d2iz>
 8102724:	4606      	mov	r6, r0
 8102726:	f7fd ff85 	bl	8100634 <__aeabi_i2d>
 810272a:	3630      	adds	r6, #48	; 0x30
 810272c:	4602      	mov	r2, r0
 810272e:	460b      	mov	r3, r1
 8102730:	4640      	mov	r0, r8
 8102732:	4649      	mov	r1, r9
 8102734:	f7fd fe30 	bl	8100398 <__aeabi_dsub>
 8102738:	f805 6b01 	strb.w	r6, [r5], #1
 810273c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 810273e:	429d      	cmp	r5, r3
 8102740:	4680      	mov	r8, r0
 8102742:	4689      	mov	r9, r1
 8102744:	f04f 0200 	mov.w	r2, #0
 8102748:	d124      	bne.n	8102794 <_dtoa_r+0x60c>
 810274a:	4b1b      	ldr	r3, [pc, #108]	; (81027b8 <_dtoa_r+0x630>)
 810274c:	4650      	mov	r0, sl
 810274e:	4659      	mov	r1, fp
 8102750:	f7fd fe24 	bl	810039c <__adddf3>
 8102754:	4602      	mov	r2, r0
 8102756:	460b      	mov	r3, r1
 8102758:	4640      	mov	r0, r8
 810275a:	4649      	mov	r1, r9
 810275c:	f7fe fa64 	bl	8100c28 <__aeabi_dcmpgt>
 8102760:	2800      	cmp	r0, #0
 8102762:	d173      	bne.n	810284c <_dtoa_r+0x6c4>
 8102764:	4652      	mov	r2, sl
 8102766:	465b      	mov	r3, fp
 8102768:	4913      	ldr	r1, [pc, #76]	; (81027b8 <_dtoa_r+0x630>)
 810276a:	2000      	movs	r0, #0
 810276c:	f7fd fe14 	bl	8100398 <__aeabi_dsub>
 8102770:	4602      	mov	r2, r0
 8102772:	460b      	mov	r3, r1
 8102774:	4640      	mov	r0, r8
 8102776:	4649      	mov	r1, r9
 8102778:	f7fe fa38 	bl	8100bec <__aeabi_dcmplt>
 810277c:	2800      	cmp	r0, #0
 810277e:	f43f af35 	beq.w	81025ec <_dtoa_r+0x464>
 8102782:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8102784:	1e6b      	subs	r3, r5, #1
 8102786:	930f      	str	r3, [sp, #60]	; 0x3c
 8102788:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 810278c:	2b30      	cmp	r3, #48	; 0x30
 810278e:	d0f8      	beq.n	8102782 <_dtoa_r+0x5fa>
 8102790:	9700      	str	r7, [sp, #0]
 8102792:	e049      	b.n	8102828 <_dtoa_r+0x6a0>
 8102794:	4b05      	ldr	r3, [pc, #20]	; (81027ac <_dtoa_r+0x624>)
 8102796:	f7fd ffb7 	bl	8100708 <__aeabi_dmul>
 810279a:	4680      	mov	r8, r0
 810279c:	4689      	mov	r9, r1
 810279e:	e7bd      	b.n	810271c <_dtoa_r+0x594>
 81027a0:	08104340 	.word	0x08104340
 81027a4:	08104318 	.word	0x08104318
 81027a8:	3ff00000 	.word	0x3ff00000
 81027ac:	40240000 	.word	0x40240000
 81027b0:	401c0000 	.word	0x401c0000
 81027b4:	40140000 	.word	0x40140000
 81027b8:	3fe00000 	.word	0x3fe00000
 81027bc:	9d01      	ldr	r5, [sp, #4]
 81027be:	4656      	mov	r6, sl
 81027c0:	465f      	mov	r7, fp
 81027c2:	4642      	mov	r2, r8
 81027c4:	464b      	mov	r3, r9
 81027c6:	4630      	mov	r0, r6
 81027c8:	4639      	mov	r1, r7
 81027ca:	f7fe f8c7 	bl	810095c <__aeabi_ddiv>
 81027ce:	f7fe fa4b 	bl	8100c68 <__aeabi_d2iz>
 81027d2:	4682      	mov	sl, r0
 81027d4:	f7fd ff2e 	bl	8100634 <__aeabi_i2d>
 81027d8:	4642      	mov	r2, r8
 81027da:	464b      	mov	r3, r9
 81027dc:	f7fd ff94 	bl	8100708 <__aeabi_dmul>
 81027e0:	4602      	mov	r2, r0
 81027e2:	460b      	mov	r3, r1
 81027e4:	4630      	mov	r0, r6
 81027e6:	4639      	mov	r1, r7
 81027e8:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 81027ec:	f7fd fdd4 	bl	8100398 <__aeabi_dsub>
 81027f0:	f805 6b01 	strb.w	r6, [r5], #1
 81027f4:	9e01      	ldr	r6, [sp, #4]
 81027f6:	9f03      	ldr	r7, [sp, #12]
 81027f8:	1bae      	subs	r6, r5, r6
 81027fa:	42b7      	cmp	r7, r6
 81027fc:	4602      	mov	r2, r0
 81027fe:	460b      	mov	r3, r1
 8102800:	d135      	bne.n	810286e <_dtoa_r+0x6e6>
 8102802:	f7fd fdcb 	bl	810039c <__adddf3>
 8102806:	4642      	mov	r2, r8
 8102808:	464b      	mov	r3, r9
 810280a:	4606      	mov	r6, r0
 810280c:	460f      	mov	r7, r1
 810280e:	f7fe fa0b 	bl	8100c28 <__aeabi_dcmpgt>
 8102812:	b9d0      	cbnz	r0, 810284a <_dtoa_r+0x6c2>
 8102814:	4642      	mov	r2, r8
 8102816:	464b      	mov	r3, r9
 8102818:	4630      	mov	r0, r6
 810281a:	4639      	mov	r1, r7
 810281c:	f7fe f9dc 	bl	8100bd8 <__aeabi_dcmpeq>
 8102820:	b110      	cbz	r0, 8102828 <_dtoa_r+0x6a0>
 8102822:	f01a 0f01 	tst.w	sl, #1
 8102826:	d110      	bne.n	810284a <_dtoa_r+0x6c2>
 8102828:	4620      	mov	r0, r4
 810282a:	ee18 1a10 	vmov	r1, s16
 810282e:	f000 faf3 	bl	8102e18 <_Bfree>
 8102832:	2300      	movs	r3, #0
 8102834:	9800      	ldr	r0, [sp, #0]
 8102836:	702b      	strb	r3, [r5, #0]
 8102838:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 810283a:	3001      	adds	r0, #1
 810283c:	6018      	str	r0, [r3, #0]
 810283e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8102840:	2b00      	cmp	r3, #0
 8102842:	f43f acf1 	beq.w	8102228 <_dtoa_r+0xa0>
 8102846:	601d      	str	r5, [r3, #0]
 8102848:	e4ee      	b.n	8102228 <_dtoa_r+0xa0>
 810284a:	9f00      	ldr	r7, [sp, #0]
 810284c:	462b      	mov	r3, r5
 810284e:	461d      	mov	r5, r3
 8102850:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8102854:	2a39      	cmp	r2, #57	; 0x39
 8102856:	d106      	bne.n	8102866 <_dtoa_r+0x6de>
 8102858:	9a01      	ldr	r2, [sp, #4]
 810285a:	429a      	cmp	r2, r3
 810285c:	d1f7      	bne.n	810284e <_dtoa_r+0x6c6>
 810285e:	9901      	ldr	r1, [sp, #4]
 8102860:	2230      	movs	r2, #48	; 0x30
 8102862:	3701      	adds	r7, #1
 8102864:	700a      	strb	r2, [r1, #0]
 8102866:	781a      	ldrb	r2, [r3, #0]
 8102868:	3201      	adds	r2, #1
 810286a:	701a      	strb	r2, [r3, #0]
 810286c:	e790      	b.n	8102790 <_dtoa_r+0x608>
 810286e:	4ba6      	ldr	r3, [pc, #664]	; (8102b08 <_dtoa_r+0x980>)
 8102870:	2200      	movs	r2, #0
 8102872:	f7fd ff49 	bl	8100708 <__aeabi_dmul>
 8102876:	2200      	movs	r2, #0
 8102878:	2300      	movs	r3, #0
 810287a:	4606      	mov	r6, r0
 810287c:	460f      	mov	r7, r1
 810287e:	f7fe f9ab 	bl	8100bd8 <__aeabi_dcmpeq>
 8102882:	2800      	cmp	r0, #0
 8102884:	d09d      	beq.n	81027c2 <_dtoa_r+0x63a>
 8102886:	e7cf      	b.n	8102828 <_dtoa_r+0x6a0>
 8102888:	9a08      	ldr	r2, [sp, #32]
 810288a:	2a00      	cmp	r2, #0
 810288c:	f000 80d7 	beq.w	8102a3e <_dtoa_r+0x8b6>
 8102890:	9a06      	ldr	r2, [sp, #24]
 8102892:	2a01      	cmp	r2, #1
 8102894:	f300 80ba 	bgt.w	8102a0c <_dtoa_r+0x884>
 8102898:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 810289a:	2a00      	cmp	r2, #0
 810289c:	f000 80b2 	beq.w	8102a04 <_dtoa_r+0x87c>
 81028a0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 81028a4:	9e07      	ldr	r6, [sp, #28]
 81028a6:	9d04      	ldr	r5, [sp, #16]
 81028a8:	9a04      	ldr	r2, [sp, #16]
 81028aa:	441a      	add	r2, r3
 81028ac:	9204      	str	r2, [sp, #16]
 81028ae:	9a05      	ldr	r2, [sp, #20]
 81028b0:	2101      	movs	r1, #1
 81028b2:	441a      	add	r2, r3
 81028b4:	4620      	mov	r0, r4
 81028b6:	9205      	str	r2, [sp, #20]
 81028b8:	f000 fb66 	bl	8102f88 <__i2b>
 81028bc:	4607      	mov	r7, r0
 81028be:	2d00      	cmp	r5, #0
 81028c0:	dd0c      	ble.n	81028dc <_dtoa_r+0x754>
 81028c2:	9b05      	ldr	r3, [sp, #20]
 81028c4:	2b00      	cmp	r3, #0
 81028c6:	dd09      	ble.n	81028dc <_dtoa_r+0x754>
 81028c8:	42ab      	cmp	r3, r5
 81028ca:	9a04      	ldr	r2, [sp, #16]
 81028cc:	bfa8      	it	ge
 81028ce:	462b      	movge	r3, r5
 81028d0:	1ad2      	subs	r2, r2, r3
 81028d2:	9204      	str	r2, [sp, #16]
 81028d4:	9a05      	ldr	r2, [sp, #20]
 81028d6:	1aed      	subs	r5, r5, r3
 81028d8:	1ad3      	subs	r3, r2, r3
 81028da:	9305      	str	r3, [sp, #20]
 81028dc:	9b07      	ldr	r3, [sp, #28]
 81028de:	b31b      	cbz	r3, 8102928 <_dtoa_r+0x7a0>
 81028e0:	9b08      	ldr	r3, [sp, #32]
 81028e2:	2b00      	cmp	r3, #0
 81028e4:	f000 80af 	beq.w	8102a46 <_dtoa_r+0x8be>
 81028e8:	2e00      	cmp	r6, #0
 81028ea:	dd13      	ble.n	8102914 <_dtoa_r+0x78c>
 81028ec:	4639      	mov	r1, r7
 81028ee:	4632      	mov	r2, r6
 81028f0:	4620      	mov	r0, r4
 81028f2:	f000 fc09 	bl	8103108 <__pow5mult>
 81028f6:	ee18 2a10 	vmov	r2, s16
 81028fa:	4601      	mov	r1, r0
 81028fc:	4607      	mov	r7, r0
 81028fe:	4620      	mov	r0, r4
 8102900:	f000 fb58 	bl	8102fb4 <__multiply>
 8102904:	ee18 1a10 	vmov	r1, s16
 8102908:	4680      	mov	r8, r0
 810290a:	4620      	mov	r0, r4
 810290c:	f000 fa84 	bl	8102e18 <_Bfree>
 8102910:	ee08 8a10 	vmov	s16, r8
 8102914:	9b07      	ldr	r3, [sp, #28]
 8102916:	1b9a      	subs	r2, r3, r6
 8102918:	d006      	beq.n	8102928 <_dtoa_r+0x7a0>
 810291a:	ee18 1a10 	vmov	r1, s16
 810291e:	4620      	mov	r0, r4
 8102920:	f000 fbf2 	bl	8103108 <__pow5mult>
 8102924:	ee08 0a10 	vmov	s16, r0
 8102928:	2101      	movs	r1, #1
 810292a:	4620      	mov	r0, r4
 810292c:	f000 fb2c 	bl	8102f88 <__i2b>
 8102930:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8102932:	2b00      	cmp	r3, #0
 8102934:	4606      	mov	r6, r0
 8102936:	f340 8088 	ble.w	8102a4a <_dtoa_r+0x8c2>
 810293a:	461a      	mov	r2, r3
 810293c:	4601      	mov	r1, r0
 810293e:	4620      	mov	r0, r4
 8102940:	f000 fbe2 	bl	8103108 <__pow5mult>
 8102944:	9b06      	ldr	r3, [sp, #24]
 8102946:	2b01      	cmp	r3, #1
 8102948:	4606      	mov	r6, r0
 810294a:	f340 8081 	ble.w	8102a50 <_dtoa_r+0x8c8>
 810294e:	f04f 0800 	mov.w	r8, #0
 8102952:	6933      	ldr	r3, [r6, #16]
 8102954:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8102958:	6918      	ldr	r0, [r3, #16]
 810295a:	f000 fac5 	bl	8102ee8 <__hi0bits>
 810295e:	f1c0 0020 	rsb	r0, r0, #32
 8102962:	9b05      	ldr	r3, [sp, #20]
 8102964:	4418      	add	r0, r3
 8102966:	f010 001f 	ands.w	r0, r0, #31
 810296a:	f000 8092 	beq.w	8102a92 <_dtoa_r+0x90a>
 810296e:	f1c0 0320 	rsb	r3, r0, #32
 8102972:	2b04      	cmp	r3, #4
 8102974:	f340 808a 	ble.w	8102a8c <_dtoa_r+0x904>
 8102978:	f1c0 001c 	rsb	r0, r0, #28
 810297c:	9b04      	ldr	r3, [sp, #16]
 810297e:	4403      	add	r3, r0
 8102980:	9304      	str	r3, [sp, #16]
 8102982:	9b05      	ldr	r3, [sp, #20]
 8102984:	4403      	add	r3, r0
 8102986:	4405      	add	r5, r0
 8102988:	9305      	str	r3, [sp, #20]
 810298a:	9b04      	ldr	r3, [sp, #16]
 810298c:	2b00      	cmp	r3, #0
 810298e:	dd07      	ble.n	81029a0 <_dtoa_r+0x818>
 8102990:	ee18 1a10 	vmov	r1, s16
 8102994:	461a      	mov	r2, r3
 8102996:	4620      	mov	r0, r4
 8102998:	f000 fc10 	bl	81031bc <__lshift>
 810299c:	ee08 0a10 	vmov	s16, r0
 81029a0:	9b05      	ldr	r3, [sp, #20]
 81029a2:	2b00      	cmp	r3, #0
 81029a4:	dd05      	ble.n	81029b2 <_dtoa_r+0x82a>
 81029a6:	4631      	mov	r1, r6
 81029a8:	461a      	mov	r2, r3
 81029aa:	4620      	mov	r0, r4
 81029ac:	f000 fc06 	bl	81031bc <__lshift>
 81029b0:	4606      	mov	r6, r0
 81029b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 81029b4:	2b00      	cmp	r3, #0
 81029b6:	d06e      	beq.n	8102a96 <_dtoa_r+0x90e>
 81029b8:	ee18 0a10 	vmov	r0, s16
 81029bc:	4631      	mov	r1, r6
 81029be:	f000 fc6d 	bl	810329c <__mcmp>
 81029c2:	2800      	cmp	r0, #0
 81029c4:	da67      	bge.n	8102a96 <_dtoa_r+0x90e>
 81029c6:	9b00      	ldr	r3, [sp, #0]
 81029c8:	3b01      	subs	r3, #1
 81029ca:	ee18 1a10 	vmov	r1, s16
 81029ce:	9300      	str	r3, [sp, #0]
 81029d0:	220a      	movs	r2, #10
 81029d2:	2300      	movs	r3, #0
 81029d4:	4620      	mov	r0, r4
 81029d6:	f000 fa41 	bl	8102e5c <__multadd>
 81029da:	9b08      	ldr	r3, [sp, #32]
 81029dc:	ee08 0a10 	vmov	s16, r0
 81029e0:	2b00      	cmp	r3, #0
 81029e2:	f000 81b1 	beq.w	8102d48 <_dtoa_r+0xbc0>
 81029e6:	2300      	movs	r3, #0
 81029e8:	4639      	mov	r1, r7
 81029ea:	220a      	movs	r2, #10
 81029ec:	4620      	mov	r0, r4
 81029ee:	f000 fa35 	bl	8102e5c <__multadd>
 81029f2:	9b02      	ldr	r3, [sp, #8]
 81029f4:	2b00      	cmp	r3, #0
 81029f6:	4607      	mov	r7, r0
 81029f8:	f300 808e 	bgt.w	8102b18 <_dtoa_r+0x990>
 81029fc:	9b06      	ldr	r3, [sp, #24]
 81029fe:	2b02      	cmp	r3, #2
 8102a00:	dc51      	bgt.n	8102aa6 <_dtoa_r+0x91e>
 8102a02:	e089      	b.n	8102b18 <_dtoa_r+0x990>
 8102a04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8102a06:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8102a0a:	e74b      	b.n	81028a4 <_dtoa_r+0x71c>
 8102a0c:	9b03      	ldr	r3, [sp, #12]
 8102a0e:	1e5e      	subs	r6, r3, #1
 8102a10:	9b07      	ldr	r3, [sp, #28]
 8102a12:	42b3      	cmp	r3, r6
 8102a14:	bfbf      	itttt	lt
 8102a16:	9b07      	ldrlt	r3, [sp, #28]
 8102a18:	9607      	strlt	r6, [sp, #28]
 8102a1a:	1af2      	sublt	r2, r6, r3
 8102a1c:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8102a1e:	bfb6      	itet	lt
 8102a20:	189b      	addlt	r3, r3, r2
 8102a22:	1b9e      	subge	r6, r3, r6
 8102a24:	930a      	strlt	r3, [sp, #40]	; 0x28
 8102a26:	9b03      	ldr	r3, [sp, #12]
 8102a28:	bfb8      	it	lt
 8102a2a:	2600      	movlt	r6, #0
 8102a2c:	2b00      	cmp	r3, #0
 8102a2e:	bfb7      	itett	lt
 8102a30:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 8102a34:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 8102a38:	1a9d      	sublt	r5, r3, r2
 8102a3a:	2300      	movlt	r3, #0
 8102a3c:	e734      	b.n	81028a8 <_dtoa_r+0x720>
 8102a3e:	9e07      	ldr	r6, [sp, #28]
 8102a40:	9d04      	ldr	r5, [sp, #16]
 8102a42:	9f08      	ldr	r7, [sp, #32]
 8102a44:	e73b      	b.n	81028be <_dtoa_r+0x736>
 8102a46:	9a07      	ldr	r2, [sp, #28]
 8102a48:	e767      	b.n	810291a <_dtoa_r+0x792>
 8102a4a:	9b06      	ldr	r3, [sp, #24]
 8102a4c:	2b01      	cmp	r3, #1
 8102a4e:	dc18      	bgt.n	8102a82 <_dtoa_r+0x8fa>
 8102a50:	f1ba 0f00 	cmp.w	sl, #0
 8102a54:	d115      	bne.n	8102a82 <_dtoa_r+0x8fa>
 8102a56:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8102a5a:	b993      	cbnz	r3, 8102a82 <_dtoa_r+0x8fa>
 8102a5c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8102a60:	0d1b      	lsrs	r3, r3, #20
 8102a62:	051b      	lsls	r3, r3, #20
 8102a64:	b183      	cbz	r3, 8102a88 <_dtoa_r+0x900>
 8102a66:	9b04      	ldr	r3, [sp, #16]
 8102a68:	3301      	adds	r3, #1
 8102a6a:	9304      	str	r3, [sp, #16]
 8102a6c:	9b05      	ldr	r3, [sp, #20]
 8102a6e:	3301      	adds	r3, #1
 8102a70:	9305      	str	r3, [sp, #20]
 8102a72:	f04f 0801 	mov.w	r8, #1
 8102a76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8102a78:	2b00      	cmp	r3, #0
 8102a7a:	f47f af6a 	bne.w	8102952 <_dtoa_r+0x7ca>
 8102a7e:	2001      	movs	r0, #1
 8102a80:	e76f      	b.n	8102962 <_dtoa_r+0x7da>
 8102a82:	f04f 0800 	mov.w	r8, #0
 8102a86:	e7f6      	b.n	8102a76 <_dtoa_r+0x8ee>
 8102a88:	4698      	mov	r8, r3
 8102a8a:	e7f4      	b.n	8102a76 <_dtoa_r+0x8ee>
 8102a8c:	f43f af7d 	beq.w	810298a <_dtoa_r+0x802>
 8102a90:	4618      	mov	r0, r3
 8102a92:	301c      	adds	r0, #28
 8102a94:	e772      	b.n	810297c <_dtoa_r+0x7f4>
 8102a96:	9b03      	ldr	r3, [sp, #12]
 8102a98:	2b00      	cmp	r3, #0
 8102a9a:	dc37      	bgt.n	8102b0c <_dtoa_r+0x984>
 8102a9c:	9b06      	ldr	r3, [sp, #24]
 8102a9e:	2b02      	cmp	r3, #2
 8102aa0:	dd34      	ble.n	8102b0c <_dtoa_r+0x984>
 8102aa2:	9b03      	ldr	r3, [sp, #12]
 8102aa4:	9302      	str	r3, [sp, #8]
 8102aa6:	9b02      	ldr	r3, [sp, #8]
 8102aa8:	b96b      	cbnz	r3, 8102ac6 <_dtoa_r+0x93e>
 8102aaa:	4631      	mov	r1, r6
 8102aac:	2205      	movs	r2, #5
 8102aae:	4620      	mov	r0, r4
 8102ab0:	f000 f9d4 	bl	8102e5c <__multadd>
 8102ab4:	4601      	mov	r1, r0
 8102ab6:	4606      	mov	r6, r0
 8102ab8:	ee18 0a10 	vmov	r0, s16
 8102abc:	f000 fbee 	bl	810329c <__mcmp>
 8102ac0:	2800      	cmp	r0, #0
 8102ac2:	f73f adbb 	bgt.w	810263c <_dtoa_r+0x4b4>
 8102ac6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8102ac8:	9d01      	ldr	r5, [sp, #4]
 8102aca:	43db      	mvns	r3, r3
 8102acc:	9300      	str	r3, [sp, #0]
 8102ace:	f04f 0800 	mov.w	r8, #0
 8102ad2:	4631      	mov	r1, r6
 8102ad4:	4620      	mov	r0, r4
 8102ad6:	f000 f99f 	bl	8102e18 <_Bfree>
 8102ada:	2f00      	cmp	r7, #0
 8102adc:	f43f aea4 	beq.w	8102828 <_dtoa_r+0x6a0>
 8102ae0:	f1b8 0f00 	cmp.w	r8, #0
 8102ae4:	d005      	beq.n	8102af2 <_dtoa_r+0x96a>
 8102ae6:	45b8      	cmp	r8, r7
 8102ae8:	d003      	beq.n	8102af2 <_dtoa_r+0x96a>
 8102aea:	4641      	mov	r1, r8
 8102aec:	4620      	mov	r0, r4
 8102aee:	f000 f993 	bl	8102e18 <_Bfree>
 8102af2:	4639      	mov	r1, r7
 8102af4:	4620      	mov	r0, r4
 8102af6:	f000 f98f 	bl	8102e18 <_Bfree>
 8102afa:	e695      	b.n	8102828 <_dtoa_r+0x6a0>
 8102afc:	2600      	movs	r6, #0
 8102afe:	4637      	mov	r7, r6
 8102b00:	e7e1      	b.n	8102ac6 <_dtoa_r+0x93e>
 8102b02:	9700      	str	r7, [sp, #0]
 8102b04:	4637      	mov	r7, r6
 8102b06:	e599      	b.n	810263c <_dtoa_r+0x4b4>
 8102b08:	40240000 	.word	0x40240000
 8102b0c:	9b08      	ldr	r3, [sp, #32]
 8102b0e:	2b00      	cmp	r3, #0
 8102b10:	f000 80ca 	beq.w	8102ca8 <_dtoa_r+0xb20>
 8102b14:	9b03      	ldr	r3, [sp, #12]
 8102b16:	9302      	str	r3, [sp, #8]
 8102b18:	2d00      	cmp	r5, #0
 8102b1a:	dd05      	ble.n	8102b28 <_dtoa_r+0x9a0>
 8102b1c:	4639      	mov	r1, r7
 8102b1e:	462a      	mov	r2, r5
 8102b20:	4620      	mov	r0, r4
 8102b22:	f000 fb4b 	bl	81031bc <__lshift>
 8102b26:	4607      	mov	r7, r0
 8102b28:	f1b8 0f00 	cmp.w	r8, #0
 8102b2c:	d05b      	beq.n	8102be6 <_dtoa_r+0xa5e>
 8102b2e:	6879      	ldr	r1, [r7, #4]
 8102b30:	4620      	mov	r0, r4
 8102b32:	f000 f931 	bl	8102d98 <_Balloc>
 8102b36:	4605      	mov	r5, r0
 8102b38:	b928      	cbnz	r0, 8102b46 <_dtoa_r+0x9be>
 8102b3a:	4b87      	ldr	r3, [pc, #540]	; (8102d58 <_dtoa_r+0xbd0>)
 8102b3c:	4602      	mov	r2, r0
 8102b3e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8102b42:	f7ff bb3b 	b.w	81021bc <_dtoa_r+0x34>
 8102b46:	693a      	ldr	r2, [r7, #16]
 8102b48:	3202      	adds	r2, #2
 8102b4a:	0092      	lsls	r2, r2, #2
 8102b4c:	f107 010c 	add.w	r1, r7, #12
 8102b50:	300c      	adds	r0, #12
 8102b52:	f000 f913 	bl	8102d7c <memcpy>
 8102b56:	2201      	movs	r2, #1
 8102b58:	4629      	mov	r1, r5
 8102b5a:	4620      	mov	r0, r4
 8102b5c:	f000 fb2e 	bl	81031bc <__lshift>
 8102b60:	9b01      	ldr	r3, [sp, #4]
 8102b62:	f103 0901 	add.w	r9, r3, #1
 8102b66:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8102b6a:	4413      	add	r3, r2
 8102b6c:	9305      	str	r3, [sp, #20]
 8102b6e:	f00a 0301 	and.w	r3, sl, #1
 8102b72:	46b8      	mov	r8, r7
 8102b74:	9304      	str	r3, [sp, #16]
 8102b76:	4607      	mov	r7, r0
 8102b78:	4631      	mov	r1, r6
 8102b7a:	ee18 0a10 	vmov	r0, s16
 8102b7e:	f7ff fa75 	bl	810206c <quorem>
 8102b82:	4641      	mov	r1, r8
 8102b84:	9002      	str	r0, [sp, #8]
 8102b86:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8102b8a:	ee18 0a10 	vmov	r0, s16
 8102b8e:	f000 fb85 	bl	810329c <__mcmp>
 8102b92:	463a      	mov	r2, r7
 8102b94:	9003      	str	r0, [sp, #12]
 8102b96:	4631      	mov	r1, r6
 8102b98:	4620      	mov	r0, r4
 8102b9a:	f000 fb9b 	bl	81032d4 <__mdiff>
 8102b9e:	68c2      	ldr	r2, [r0, #12]
 8102ba0:	f109 3bff 	add.w	fp, r9, #4294967295
 8102ba4:	4605      	mov	r5, r0
 8102ba6:	bb02      	cbnz	r2, 8102bea <_dtoa_r+0xa62>
 8102ba8:	4601      	mov	r1, r0
 8102baa:	ee18 0a10 	vmov	r0, s16
 8102bae:	f000 fb75 	bl	810329c <__mcmp>
 8102bb2:	4602      	mov	r2, r0
 8102bb4:	4629      	mov	r1, r5
 8102bb6:	4620      	mov	r0, r4
 8102bb8:	9207      	str	r2, [sp, #28]
 8102bba:	f000 f92d 	bl	8102e18 <_Bfree>
 8102bbe:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8102bc2:	ea43 0102 	orr.w	r1, r3, r2
 8102bc6:	9b04      	ldr	r3, [sp, #16]
 8102bc8:	430b      	orrs	r3, r1
 8102bca:	464d      	mov	r5, r9
 8102bcc:	d10f      	bne.n	8102bee <_dtoa_r+0xa66>
 8102bce:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8102bd2:	d02a      	beq.n	8102c2a <_dtoa_r+0xaa2>
 8102bd4:	9b03      	ldr	r3, [sp, #12]
 8102bd6:	2b00      	cmp	r3, #0
 8102bd8:	dd02      	ble.n	8102be0 <_dtoa_r+0xa58>
 8102bda:	9b02      	ldr	r3, [sp, #8]
 8102bdc:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8102be0:	f88b a000 	strb.w	sl, [fp]
 8102be4:	e775      	b.n	8102ad2 <_dtoa_r+0x94a>
 8102be6:	4638      	mov	r0, r7
 8102be8:	e7ba      	b.n	8102b60 <_dtoa_r+0x9d8>
 8102bea:	2201      	movs	r2, #1
 8102bec:	e7e2      	b.n	8102bb4 <_dtoa_r+0xa2c>
 8102bee:	9b03      	ldr	r3, [sp, #12]
 8102bf0:	2b00      	cmp	r3, #0
 8102bf2:	db04      	blt.n	8102bfe <_dtoa_r+0xa76>
 8102bf4:	9906      	ldr	r1, [sp, #24]
 8102bf6:	430b      	orrs	r3, r1
 8102bf8:	9904      	ldr	r1, [sp, #16]
 8102bfa:	430b      	orrs	r3, r1
 8102bfc:	d122      	bne.n	8102c44 <_dtoa_r+0xabc>
 8102bfe:	2a00      	cmp	r2, #0
 8102c00:	ddee      	ble.n	8102be0 <_dtoa_r+0xa58>
 8102c02:	ee18 1a10 	vmov	r1, s16
 8102c06:	2201      	movs	r2, #1
 8102c08:	4620      	mov	r0, r4
 8102c0a:	f000 fad7 	bl	81031bc <__lshift>
 8102c0e:	4631      	mov	r1, r6
 8102c10:	ee08 0a10 	vmov	s16, r0
 8102c14:	f000 fb42 	bl	810329c <__mcmp>
 8102c18:	2800      	cmp	r0, #0
 8102c1a:	dc03      	bgt.n	8102c24 <_dtoa_r+0xa9c>
 8102c1c:	d1e0      	bne.n	8102be0 <_dtoa_r+0xa58>
 8102c1e:	f01a 0f01 	tst.w	sl, #1
 8102c22:	d0dd      	beq.n	8102be0 <_dtoa_r+0xa58>
 8102c24:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8102c28:	d1d7      	bne.n	8102bda <_dtoa_r+0xa52>
 8102c2a:	2339      	movs	r3, #57	; 0x39
 8102c2c:	f88b 3000 	strb.w	r3, [fp]
 8102c30:	462b      	mov	r3, r5
 8102c32:	461d      	mov	r5, r3
 8102c34:	3b01      	subs	r3, #1
 8102c36:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8102c3a:	2a39      	cmp	r2, #57	; 0x39
 8102c3c:	d071      	beq.n	8102d22 <_dtoa_r+0xb9a>
 8102c3e:	3201      	adds	r2, #1
 8102c40:	701a      	strb	r2, [r3, #0]
 8102c42:	e746      	b.n	8102ad2 <_dtoa_r+0x94a>
 8102c44:	2a00      	cmp	r2, #0
 8102c46:	dd07      	ble.n	8102c58 <_dtoa_r+0xad0>
 8102c48:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8102c4c:	d0ed      	beq.n	8102c2a <_dtoa_r+0xaa2>
 8102c4e:	f10a 0301 	add.w	r3, sl, #1
 8102c52:	f88b 3000 	strb.w	r3, [fp]
 8102c56:	e73c      	b.n	8102ad2 <_dtoa_r+0x94a>
 8102c58:	9b05      	ldr	r3, [sp, #20]
 8102c5a:	f809 ac01 	strb.w	sl, [r9, #-1]
 8102c5e:	4599      	cmp	r9, r3
 8102c60:	d047      	beq.n	8102cf2 <_dtoa_r+0xb6a>
 8102c62:	ee18 1a10 	vmov	r1, s16
 8102c66:	2300      	movs	r3, #0
 8102c68:	220a      	movs	r2, #10
 8102c6a:	4620      	mov	r0, r4
 8102c6c:	f000 f8f6 	bl	8102e5c <__multadd>
 8102c70:	45b8      	cmp	r8, r7
 8102c72:	ee08 0a10 	vmov	s16, r0
 8102c76:	f04f 0300 	mov.w	r3, #0
 8102c7a:	f04f 020a 	mov.w	r2, #10
 8102c7e:	4641      	mov	r1, r8
 8102c80:	4620      	mov	r0, r4
 8102c82:	d106      	bne.n	8102c92 <_dtoa_r+0xb0a>
 8102c84:	f000 f8ea 	bl	8102e5c <__multadd>
 8102c88:	4680      	mov	r8, r0
 8102c8a:	4607      	mov	r7, r0
 8102c8c:	f109 0901 	add.w	r9, r9, #1
 8102c90:	e772      	b.n	8102b78 <_dtoa_r+0x9f0>
 8102c92:	f000 f8e3 	bl	8102e5c <__multadd>
 8102c96:	4639      	mov	r1, r7
 8102c98:	4680      	mov	r8, r0
 8102c9a:	2300      	movs	r3, #0
 8102c9c:	220a      	movs	r2, #10
 8102c9e:	4620      	mov	r0, r4
 8102ca0:	f000 f8dc 	bl	8102e5c <__multadd>
 8102ca4:	4607      	mov	r7, r0
 8102ca6:	e7f1      	b.n	8102c8c <_dtoa_r+0xb04>
 8102ca8:	9b03      	ldr	r3, [sp, #12]
 8102caa:	9302      	str	r3, [sp, #8]
 8102cac:	9d01      	ldr	r5, [sp, #4]
 8102cae:	ee18 0a10 	vmov	r0, s16
 8102cb2:	4631      	mov	r1, r6
 8102cb4:	f7ff f9da 	bl	810206c <quorem>
 8102cb8:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8102cbc:	9b01      	ldr	r3, [sp, #4]
 8102cbe:	f805 ab01 	strb.w	sl, [r5], #1
 8102cc2:	1aea      	subs	r2, r5, r3
 8102cc4:	9b02      	ldr	r3, [sp, #8]
 8102cc6:	4293      	cmp	r3, r2
 8102cc8:	dd09      	ble.n	8102cde <_dtoa_r+0xb56>
 8102cca:	ee18 1a10 	vmov	r1, s16
 8102cce:	2300      	movs	r3, #0
 8102cd0:	220a      	movs	r2, #10
 8102cd2:	4620      	mov	r0, r4
 8102cd4:	f000 f8c2 	bl	8102e5c <__multadd>
 8102cd8:	ee08 0a10 	vmov	s16, r0
 8102cdc:	e7e7      	b.n	8102cae <_dtoa_r+0xb26>
 8102cde:	9b02      	ldr	r3, [sp, #8]
 8102ce0:	2b00      	cmp	r3, #0
 8102ce2:	bfc8      	it	gt
 8102ce4:	461d      	movgt	r5, r3
 8102ce6:	9b01      	ldr	r3, [sp, #4]
 8102ce8:	bfd8      	it	le
 8102cea:	2501      	movle	r5, #1
 8102cec:	441d      	add	r5, r3
 8102cee:	f04f 0800 	mov.w	r8, #0
 8102cf2:	ee18 1a10 	vmov	r1, s16
 8102cf6:	2201      	movs	r2, #1
 8102cf8:	4620      	mov	r0, r4
 8102cfa:	f000 fa5f 	bl	81031bc <__lshift>
 8102cfe:	4631      	mov	r1, r6
 8102d00:	ee08 0a10 	vmov	s16, r0
 8102d04:	f000 faca 	bl	810329c <__mcmp>
 8102d08:	2800      	cmp	r0, #0
 8102d0a:	dc91      	bgt.n	8102c30 <_dtoa_r+0xaa8>
 8102d0c:	d102      	bne.n	8102d14 <_dtoa_r+0xb8c>
 8102d0e:	f01a 0f01 	tst.w	sl, #1
 8102d12:	d18d      	bne.n	8102c30 <_dtoa_r+0xaa8>
 8102d14:	462b      	mov	r3, r5
 8102d16:	461d      	mov	r5, r3
 8102d18:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8102d1c:	2a30      	cmp	r2, #48	; 0x30
 8102d1e:	d0fa      	beq.n	8102d16 <_dtoa_r+0xb8e>
 8102d20:	e6d7      	b.n	8102ad2 <_dtoa_r+0x94a>
 8102d22:	9a01      	ldr	r2, [sp, #4]
 8102d24:	429a      	cmp	r2, r3
 8102d26:	d184      	bne.n	8102c32 <_dtoa_r+0xaaa>
 8102d28:	9b00      	ldr	r3, [sp, #0]
 8102d2a:	3301      	adds	r3, #1
 8102d2c:	9300      	str	r3, [sp, #0]
 8102d2e:	2331      	movs	r3, #49	; 0x31
 8102d30:	7013      	strb	r3, [r2, #0]
 8102d32:	e6ce      	b.n	8102ad2 <_dtoa_r+0x94a>
 8102d34:	4b09      	ldr	r3, [pc, #36]	; (8102d5c <_dtoa_r+0xbd4>)
 8102d36:	f7ff ba95 	b.w	8102264 <_dtoa_r+0xdc>
 8102d3a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8102d3c:	2b00      	cmp	r3, #0
 8102d3e:	f47f aa6e 	bne.w	810221e <_dtoa_r+0x96>
 8102d42:	4b07      	ldr	r3, [pc, #28]	; (8102d60 <_dtoa_r+0xbd8>)
 8102d44:	f7ff ba8e 	b.w	8102264 <_dtoa_r+0xdc>
 8102d48:	9b02      	ldr	r3, [sp, #8]
 8102d4a:	2b00      	cmp	r3, #0
 8102d4c:	dcae      	bgt.n	8102cac <_dtoa_r+0xb24>
 8102d4e:	9b06      	ldr	r3, [sp, #24]
 8102d50:	2b02      	cmp	r3, #2
 8102d52:	f73f aea8 	bgt.w	8102aa6 <_dtoa_r+0x91e>
 8102d56:	e7a9      	b.n	8102cac <_dtoa_r+0xb24>
 8102d58:	081042a7 	.word	0x081042a7
 8102d5c:	08104204 	.word	0x08104204
 8102d60:	08104228 	.word	0x08104228

08102d64 <_localeconv_r>:
 8102d64:	4800      	ldr	r0, [pc, #0]	; (8102d68 <_localeconv_r+0x4>)
 8102d66:	4770      	bx	lr
 8102d68:	10000164 	.word	0x10000164

08102d6c <malloc>:
 8102d6c:	4b02      	ldr	r3, [pc, #8]	; (8102d78 <malloc+0xc>)
 8102d6e:	4601      	mov	r1, r0
 8102d70:	6818      	ldr	r0, [r3, #0]
 8102d72:	f000 bc17 	b.w	81035a4 <_malloc_r>
 8102d76:	bf00      	nop
 8102d78:	10000010 	.word	0x10000010

08102d7c <memcpy>:
 8102d7c:	440a      	add	r2, r1
 8102d7e:	4291      	cmp	r1, r2
 8102d80:	f100 33ff 	add.w	r3, r0, #4294967295
 8102d84:	d100      	bne.n	8102d88 <memcpy+0xc>
 8102d86:	4770      	bx	lr
 8102d88:	b510      	push	{r4, lr}
 8102d8a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8102d8e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8102d92:	4291      	cmp	r1, r2
 8102d94:	d1f9      	bne.n	8102d8a <memcpy+0xe>
 8102d96:	bd10      	pop	{r4, pc}

08102d98 <_Balloc>:
 8102d98:	b570      	push	{r4, r5, r6, lr}
 8102d9a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8102d9c:	4604      	mov	r4, r0
 8102d9e:	460d      	mov	r5, r1
 8102da0:	b976      	cbnz	r6, 8102dc0 <_Balloc+0x28>
 8102da2:	2010      	movs	r0, #16
 8102da4:	f7ff ffe2 	bl	8102d6c <malloc>
 8102da8:	4602      	mov	r2, r0
 8102daa:	6260      	str	r0, [r4, #36]	; 0x24
 8102dac:	b920      	cbnz	r0, 8102db8 <_Balloc+0x20>
 8102dae:	4b18      	ldr	r3, [pc, #96]	; (8102e10 <_Balloc+0x78>)
 8102db0:	4818      	ldr	r0, [pc, #96]	; (8102e14 <_Balloc+0x7c>)
 8102db2:	2166      	movs	r1, #102	; 0x66
 8102db4:	f000 fc7a 	bl	81036ac <__assert_func>
 8102db8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8102dbc:	6006      	str	r6, [r0, #0]
 8102dbe:	60c6      	str	r6, [r0, #12]
 8102dc0:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8102dc2:	68f3      	ldr	r3, [r6, #12]
 8102dc4:	b183      	cbz	r3, 8102de8 <_Balloc+0x50>
 8102dc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8102dc8:	68db      	ldr	r3, [r3, #12]
 8102dca:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8102dce:	b9b8      	cbnz	r0, 8102e00 <_Balloc+0x68>
 8102dd0:	2101      	movs	r1, #1
 8102dd2:	fa01 f605 	lsl.w	r6, r1, r5
 8102dd6:	1d72      	adds	r2, r6, #5
 8102dd8:	0092      	lsls	r2, r2, #2
 8102dda:	4620      	mov	r0, r4
 8102ddc:	f000 fb60 	bl	81034a0 <_calloc_r>
 8102de0:	b160      	cbz	r0, 8102dfc <_Balloc+0x64>
 8102de2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8102de6:	e00e      	b.n	8102e06 <_Balloc+0x6e>
 8102de8:	2221      	movs	r2, #33	; 0x21
 8102dea:	2104      	movs	r1, #4
 8102dec:	4620      	mov	r0, r4
 8102dee:	f000 fb57 	bl	81034a0 <_calloc_r>
 8102df2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8102df4:	60f0      	str	r0, [r6, #12]
 8102df6:	68db      	ldr	r3, [r3, #12]
 8102df8:	2b00      	cmp	r3, #0
 8102dfa:	d1e4      	bne.n	8102dc6 <_Balloc+0x2e>
 8102dfc:	2000      	movs	r0, #0
 8102dfe:	bd70      	pop	{r4, r5, r6, pc}
 8102e00:	6802      	ldr	r2, [r0, #0]
 8102e02:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8102e06:	2300      	movs	r3, #0
 8102e08:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8102e0c:	e7f7      	b.n	8102dfe <_Balloc+0x66>
 8102e0e:	bf00      	nop
 8102e10:	08104235 	.word	0x08104235
 8102e14:	081042b8 	.word	0x081042b8

08102e18 <_Bfree>:
 8102e18:	b570      	push	{r4, r5, r6, lr}
 8102e1a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8102e1c:	4605      	mov	r5, r0
 8102e1e:	460c      	mov	r4, r1
 8102e20:	b976      	cbnz	r6, 8102e40 <_Bfree+0x28>
 8102e22:	2010      	movs	r0, #16
 8102e24:	f7ff ffa2 	bl	8102d6c <malloc>
 8102e28:	4602      	mov	r2, r0
 8102e2a:	6268      	str	r0, [r5, #36]	; 0x24
 8102e2c:	b920      	cbnz	r0, 8102e38 <_Bfree+0x20>
 8102e2e:	4b09      	ldr	r3, [pc, #36]	; (8102e54 <_Bfree+0x3c>)
 8102e30:	4809      	ldr	r0, [pc, #36]	; (8102e58 <_Bfree+0x40>)
 8102e32:	218a      	movs	r1, #138	; 0x8a
 8102e34:	f000 fc3a 	bl	81036ac <__assert_func>
 8102e38:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8102e3c:	6006      	str	r6, [r0, #0]
 8102e3e:	60c6      	str	r6, [r0, #12]
 8102e40:	b13c      	cbz	r4, 8102e52 <_Bfree+0x3a>
 8102e42:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8102e44:	6862      	ldr	r2, [r4, #4]
 8102e46:	68db      	ldr	r3, [r3, #12]
 8102e48:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8102e4c:	6021      	str	r1, [r4, #0]
 8102e4e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8102e52:	bd70      	pop	{r4, r5, r6, pc}
 8102e54:	08104235 	.word	0x08104235
 8102e58:	081042b8 	.word	0x081042b8

08102e5c <__multadd>:
 8102e5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8102e60:	690d      	ldr	r5, [r1, #16]
 8102e62:	4607      	mov	r7, r0
 8102e64:	460c      	mov	r4, r1
 8102e66:	461e      	mov	r6, r3
 8102e68:	f101 0c14 	add.w	ip, r1, #20
 8102e6c:	2000      	movs	r0, #0
 8102e6e:	f8dc 3000 	ldr.w	r3, [ip]
 8102e72:	b299      	uxth	r1, r3
 8102e74:	fb02 6101 	mla	r1, r2, r1, r6
 8102e78:	0c1e      	lsrs	r6, r3, #16
 8102e7a:	0c0b      	lsrs	r3, r1, #16
 8102e7c:	fb02 3306 	mla	r3, r2, r6, r3
 8102e80:	b289      	uxth	r1, r1
 8102e82:	3001      	adds	r0, #1
 8102e84:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8102e88:	4285      	cmp	r5, r0
 8102e8a:	f84c 1b04 	str.w	r1, [ip], #4
 8102e8e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8102e92:	dcec      	bgt.n	8102e6e <__multadd+0x12>
 8102e94:	b30e      	cbz	r6, 8102eda <__multadd+0x7e>
 8102e96:	68a3      	ldr	r3, [r4, #8]
 8102e98:	42ab      	cmp	r3, r5
 8102e9a:	dc19      	bgt.n	8102ed0 <__multadd+0x74>
 8102e9c:	6861      	ldr	r1, [r4, #4]
 8102e9e:	4638      	mov	r0, r7
 8102ea0:	3101      	adds	r1, #1
 8102ea2:	f7ff ff79 	bl	8102d98 <_Balloc>
 8102ea6:	4680      	mov	r8, r0
 8102ea8:	b928      	cbnz	r0, 8102eb6 <__multadd+0x5a>
 8102eaa:	4602      	mov	r2, r0
 8102eac:	4b0c      	ldr	r3, [pc, #48]	; (8102ee0 <__multadd+0x84>)
 8102eae:	480d      	ldr	r0, [pc, #52]	; (8102ee4 <__multadd+0x88>)
 8102eb0:	21b5      	movs	r1, #181	; 0xb5
 8102eb2:	f000 fbfb 	bl	81036ac <__assert_func>
 8102eb6:	6922      	ldr	r2, [r4, #16]
 8102eb8:	3202      	adds	r2, #2
 8102eba:	f104 010c 	add.w	r1, r4, #12
 8102ebe:	0092      	lsls	r2, r2, #2
 8102ec0:	300c      	adds	r0, #12
 8102ec2:	f7ff ff5b 	bl	8102d7c <memcpy>
 8102ec6:	4621      	mov	r1, r4
 8102ec8:	4638      	mov	r0, r7
 8102eca:	f7ff ffa5 	bl	8102e18 <_Bfree>
 8102ece:	4644      	mov	r4, r8
 8102ed0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8102ed4:	3501      	adds	r5, #1
 8102ed6:	615e      	str	r6, [r3, #20]
 8102ed8:	6125      	str	r5, [r4, #16]
 8102eda:	4620      	mov	r0, r4
 8102edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8102ee0:	081042a7 	.word	0x081042a7
 8102ee4:	081042b8 	.word	0x081042b8

08102ee8 <__hi0bits>:
 8102ee8:	0c03      	lsrs	r3, r0, #16
 8102eea:	041b      	lsls	r3, r3, #16
 8102eec:	b9d3      	cbnz	r3, 8102f24 <__hi0bits+0x3c>
 8102eee:	0400      	lsls	r0, r0, #16
 8102ef0:	2310      	movs	r3, #16
 8102ef2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8102ef6:	bf04      	itt	eq
 8102ef8:	0200      	lsleq	r0, r0, #8
 8102efa:	3308      	addeq	r3, #8
 8102efc:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8102f00:	bf04      	itt	eq
 8102f02:	0100      	lsleq	r0, r0, #4
 8102f04:	3304      	addeq	r3, #4
 8102f06:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8102f0a:	bf04      	itt	eq
 8102f0c:	0080      	lsleq	r0, r0, #2
 8102f0e:	3302      	addeq	r3, #2
 8102f10:	2800      	cmp	r0, #0
 8102f12:	db05      	blt.n	8102f20 <__hi0bits+0x38>
 8102f14:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8102f18:	f103 0301 	add.w	r3, r3, #1
 8102f1c:	bf08      	it	eq
 8102f1e:	2320      	moveq	r3, #32
 8102f20:	4618      	mov	r0, r3
 8102f22:	4770      	bx	lr
 8102f24:	2300      	movs	r3, #0
 8102f26:	e7e4      	b.n	8102ef2 <__hi0bits+0xa>

08102f28 <__lo0bits>:
 8102f28:	6803      	ldr	r3, [r0, #0]
 8102f2a:	f013 0207 	ands.w	r2, r3, #7
 8102f2e:	4601      	mov	r1, r0
 8102f30:	d00b      	beq.n	8102f4a <__lo0bits+0x22>
 8102f32:	07da      	lsls	r2, r3, #31
 8102f34:	d423      	bmi.n	8102f7e <__lo0bits+0x56>
 8102f36:	0798      	lsls	r0, r3, #30
 8102f38:	bf49      	itett	mi
 8102f3a:	085b      	lsrmi	r3, r3, #1
 8102f3c:	089b      	lsrpl	r3, r3, #2
 8102f3e:	2001      	movmi	r0, #1
 8102f40:	600b      	strmi	r3, [r1, #0]
 8102f42:	bf5c      	itt	pl
 8102f44:	600b      	strpl	r3, [r1, #0]
 8102f46:	2002      	movpl	r0, #2
 8102f48:	4770      	bx	lr
 8102f4a:	b298      	uxth	r0, r3
 8102f4c:	b9a8      	cbnz	r0, 8102f7a <__lo0bits+0x52>
 8102f4e:	0c1b      	lsrs	r3, r3, #16
 8102f50:	2010      	movs	r0, #16
 8102f52:	b2da      	uxtb	r2, r3
 8102f54:	b90a      	cbnz	r2, 8102f5a <__lo0bits+0x32>
 8102f56:	3008      	adds	r0, #8
 8102f58:	0a1b      	lsrs	r3, r3, #8
 8102f5a:	071a      	lsls	r2, r3, #28
 8102f5c:	bf04      	itt	eq
 8102f5e:	091b      	lsreq	r3, r3, #4
 8102f60:	3004      	addeq	r0, #4
 8102f62:	079a      	lsls	r2, r3, #30
 8102f64:	bf04      	itt	eq
 8102f66:	089b      	lsreq	r3, r3, #2
 8102f68:	3002      	addeq	r0, #2
 8102f6a:	07da      	lsls	r2, r3, #31
 8102f6c:	d403      	bmi.n	8102f76 <__lo0bits+0x4e>
 8102f6e:	085b      	lsrs	r3, r3, #1
 8102f70:	f100 0001 	add.w	r0, r0, #1
 8102f74:	d005      	beq.n	8102f82 <__lo0bits+0x5a>
 8102f76:	600b      	str	r3, [r1, #0]
 8102f78:	4770      	bx	lr
 8102f7a:	4610      	mov	r0, r2
 8102f7c:	e7e9      	b.n	8102f52 <__lo0bits+0x2a>
 8102f7e:	2000      	movs	r0, #0
 8102f80:	4770      	bx	lr
 8102f82:	2020      	movs	r0, #32
 8102f84:	4770      	bx	lr
	...

08102f88 <__i2b>:
 8102f88:	b510      	push	{r4, lr}
 8102f8a:	460c      	mov	r4, r1
 8102f8c:	2101      	movs	r1, #1
 8102f8e:	f7ff ff03 	bl	8102d98 <_Balloc>
 8102f92:	4602      	mov	r2, r0
 8102f94:	b928      	cbnz	r0, 8102fa2 <__i2b+0x1a>
 8102f96:	4b05      	ldr	r3, [pc, #20]	; (8102fac <__i2b+0x24>)
 8102f98:	4805      	ldr	r0, [pc, #20]	; (8102fb0 <__i2b+0x28>)
 8102f9a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8102f9e:	f000 fb85 	bl	81036ac <__assert_func>
 8102fa2:	2301      	movs	r3, #1
 8102fa4:	6144      	str	r4, [r0, #20]
 8102fa6:	6103      	str	r3, [r0, #16]
 8102fa8:	bd10      	pop	{r4, pc}
 8102faa:	bf00      	nop
 8102fac:	081042a7 	.word	0x081042a7
 8102fb0:	081042b8 	.word	0x081042b8

08102fb4 <__multiply>:
 8102fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8102fb8:	4691      	mov	r9, r2
 8102fba:	690a      	ldr	r2, [r1, #16]
 8102fbc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8102fc0:	429a      	cmp	r2, r3
 8102fc2:	bfb8      	it	lt
 8102fc4:	460b      	movlt	r3, r1
 8102fc6:	460c      	mov	r4, r1
 8102fc8:	bfbc      	itt	lt
 8102fca:	464c      	movlt	r4, r9
 8102fcc:	4699      	movlt	r9, r3
 8102fce:	6927      	ldr	r7, [r4, #16]
 8102fd0:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8102fd4:	68a3      	ldr	r3, [r4, #8]
 8102fd6:	6861      	ldr	r1, [r4, #4]
 8102fd8:	eb07 060a 	add.w	r6, r7, sl
 8102fdc:	42b3      	cmp	r3, r6
 8102fde:	b085      	sub	sp, #20
 8102fe0:	bfb8      	it	lt
 8102fe2:	3101      	addlt	r1, #1
 8102fe4:	f7ff fed8 	bl	8102d98 <_Balloc>
 8102fe8:	b930      	cbnz	r0, 8102ff8 <__multiply+0x44>
 8102fea:	4602      	mov	r2, r0
 8102fec:	4b44      	ldr	r3, [pc, #272]	; (8103100 <__multiply+0x14c>)
 8102fee:	4845      	ldr	r0, [pc, #276]	; (8103104 <__multiply+0x150>)
 8102ff0:	f240 115d 	movw	r1, #349	; 0x15d
 8102ff4:	f000 fb5a 	bl	81036ac <__assert_func>
 8102ff8:	f100 0514 	add.w	r5, r0, #20
 8102ffc:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8103000:	462b      	mov	r3, r5
 8103002:	2200      	movs	r2, #0
 8103004:	4543      	cmp	r3, r8
 8103006:	d321      	bcc.n	810304c <__multiply+0x98>
 8103008:	f104 0314 	add.w	r3, r4, #20
 810300c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8103010:	f109 0314 	add.w	r3, r9, #20
 8103014:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8103018:	9202      	str	r2, [sp, #8]
 810301a:	1b3a      	subs	r2, r7, r4
 810301c:	3a15      	subs	r2, #21
 810301e:	f022 0203 	bic.w	r2, r2, #3
 8103022:	3204      	adds	r2, #4
 8103024:	f104 0115 	add.w	r1, r4, #21
 8103028:	428f      	cmp	r7, r1
 810302a:	bf38      	it	cc
 810302c:	2204      	movcc	r2, #4
 810302e:	9201      	str	r2, [sp, #4]
 8103030:	9a02      	ldr	r2, [sp, #8]
 8103032:	9303      	str	r3, [sp, #12]
 8103034:	429a      	cmp	r2, r3
 8103036:	d80c      	bhi.n	8103052 <__multiply+0x9e>
 8103038:	2e00      	cmp	r6, #0
 810303a:	dd03      	ble.n	8103044 <__multiply+0x90>
 810303c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8103040:	2b00      	cmp	r3, #0
 8103042:	d05a      	beq.n	81030fa <__multiply+0x146>
 8103044:	6106      	str	r6, [r0, #16]
 8103046:	b005      	add	sp, #20
 8103048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810304c:	f843 2b04 	str.w	r2, [r3], #4
 8103050:	e7d8      	b.n	8103004 <__multiply+0x50>
 8103052:	f8b3 a000 	ldrh.w	sl, [r3]
 8103056:	f1ba 0f00 	cmp.w	sl, #0
 810305a:	d024      	beq.n	81030a6 <__multiply+0xf2>
 810305c:	f104 0e14 	add.w	lr, r4, #20
 8103060:	46a9      	mov	r9, r5
 8103062:	f04f 0c00 	mov.w	ip, #0
 8103066:	f85e 2b04 	ldr.w	r2, [lr], #4
 810306a:	f8d9 1000 	ldr.w	r1, [r9]
 810306e:	fa1f fb82 	uxth.w	fp, r2
 8103072:	b289      	uxth	r1, r1
 8103074:	fb0a 110b 	mla	r1, sl, fp, r1
 8103078:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 810307c:	f8d9 2000 	ldr.w	r2, [r9]
 8103080:	4461      	add	r1, ip
 8103082:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8103086:	fb0a c20b 	mla	r2, sl, fp, ip
 810308a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 810308e:	b289      	uxth	r1, r1
 8103090:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8103094:	4577      	cmp	r7, lr
 8103096:	f849 1b04 	str.w	r1, [r9], #4
 810309a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 810309e:	d8e2      	bhi.n	8103066 <__multiply+0xb2>
 81030a0:	9a01      	ldr	r2, [sp, #4]
 81030a2:	f845 c002 	str.w	ip, [r5, r2]
 81030a6:	9a03      	ldr	r2, [sp, #12]
 81030a8:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 81030ac:	3304      	adds	r3, #4
 81030ae:	f1b9 0f00 	cmp.w	r9, #0
 81030b2:	d020      	beq.n	81030f6 <__multiply+0x142>
 81030b4:	6829      	ldr	r1, [r5, #0]
 81030b6:	f104 0c14 	add.w	ip, r4, #20
 81030ba:	46ae      	mov	lr, r5
 81030bc:	f04f 0a00 	mov.w	sl, #0
 81030c0:	f8bc b000 	ldrh.w	fp, [ip]
 81030c4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 81030c8:	fb09 220b 	mla	r2, r9, fp, r2
 81030cc:	4492      	add	sl, r2
 81030ce:	b289      	uxth	r1, r1
 81030d0:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 81030d4:	f84e 1b04 	str.w	r1, [lr], #4
 81030d8:	f85c 2b04 	ldr.w	r2, [ip], #4
 81030dc:	f8be 1000 	ldrh.w	r1, [lr]
 81030e0:	0c12      	lsrs	r2, r2, #16
 81030e2:	fb09 1102 	mla	r1, r9, r2, r1
 81030e6:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 81030ea:	4567      	cmp	r7, ip
 81030ec:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 81030f0:	d8e6      	bhi.n	81030c0 <__multiply+0x10c>
 81030f2:	9a01      	ldr	r2, [sp, #4]
 81030f4:	50a9      	str	r1, [r5, r2]
 81030f6:	3504      	adds	r5, #4
 81030f8:	e79a      	b.n	8103030 <__multiply+0x7c>
 81030fa:	3e01      	subs	r6, #1
 81030fc:	e79c      	b.n	8103038 <__multiply+0x84>
 81030fe:	bf00      	nop
 8103100:	081042a7 	.word	0x081042a7
 8103104:	081042b8 	.word	0x081042b8

08103108 <__pow5mult>:
 8103108:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 810310c:	4615      	mov	r5, r2
 810310e:	f012 0203 	ands.w	r2, r2, #3
 8103112:	4606      	mov	r6, r0
 8103114:	460f      	mov	r7, r1
 8103116:	d007      	beq.n	8103128 <__pow5mult+0x20>
 8103118:	4c25      	ldr	r4, [pc, #148]	; (81031b0 <__pow5mult+0xa8>)
 810311a:	3a01      	subs	r2, #1
 810311c:	2300      	movs	r3, #0
 810311e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8103122:	f7ff fe9b 	bl	8102e5c <__multadd>
 8103126:	4607      	mov	r7, r0
 8103128:	10ad      	asrs	r5, r5, #2
 810312a:	d03d      	beq.n	81031a8 <__pow5mult+0xa0>
 810312c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 810312e:	b97c      	cbnz	r4, 8103150 <__pow5mult+0x48>
 8103130:	2010      	movs	r0, #16
 8103132:	f7ff fe1b 	bl	8102d6c <malloc>
 8103136:	4602      	mov	r2, r0
 8103138:	6270      	str	r0, [r6, #36]	; 0x24
 810313a:	b928      	cbnz	r0, 8103148 <__pow5mult+0x40>
 810313c:	4b1d      	ldr	r3, [pc, #116]	; (81031b4 <__pow5mult+0xac>)
 810313e:	481e      	ldr	r0, [pc, #120]	; (81031b8 <__pow5mult+0xb0>)
 8103140:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8103144:	f000 fab2 	bl	81036ac <__assert_func>
 8103148:	e9c0 4401 	strd	r4, r4, [r0, #4]
 810314c:	6004      	str	r4, [r0, #0]
 810314e:	60c4      	str	r4, [r0, #12]
 8103150:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8103154:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8103158:	b94c      	cbnz	r4, 810316e <__pow5mult+0x66>
 810315a:	f240 2171 	movw	r1, #625	; 0x271
 810315e:	4630      	mov	r0, r6
 8103160:	f7ff ff12 	bl	8102f88 <__i2b>
 8103164:	2300      	movs	r3, #0
 8103166:	f8c8 0008 	str.w	r0, [r8, #8]
 810316a:	4604      	mov	r4, r0
 810316c:	6003      	str	r3, [r0, #0]
 810316e:	f04f 0900 	mov.w	r9, #0
 8103172:	07eb      	lsls	r3, r5, #31
 8103174:	d50a      	bpl.n	810318c <__pow5mult+0x84>
 8103176:	4639      	mov	r1, r7
 8103178:	4622      	mov	r2, r4
 810317a:	4630      	mov	r0, r6
 810317c:	f7ff ff1a 	bl	8102fb4 <__multiply>
 8103180:	4639      	mov	r1, r7
 8103182:	4680      	mov	r8, r0
 8103184:	4630      	mov	r0, r6
 8103186:	f7ff fe47 	bl	8102e18 <_Bfree>
 810318a:	4647      	mov	r7, r8
 810318c:	106d      	asrs	r5, r5, #1
 810318e:	d00b      	beq.n	81031a8 <__pow5mult+0xa0>
 8103190:	6820      	ldr	r0, [r4, #0]
 8103192:	b938      	cbnz	r0, 81031a4 <__pow5mult+0x9c>
 8103194:	4622      	mov	r2, r4
 8103196:	4621      	mov	r1, r4
 8103198:	4630      	mov	r0, r6
 810319a:	f7ff ff0b 	bl	8102fb4 <__multiply>
 810319e:	6020      	str	r0, [r4, #0]
 81031a0:	f8c0 9000 	str.w	r9, [r0]
 81031a4:	4604      	mov	r4, r0
 81031a6:	e7e4      	b.n	8103172 <__pow5mult+0x6a>
 81031a8:	4638      	mov	r0, r7
 81031aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 81031ae:	bf00      	nop
 81031b0:	08104408 	.word	0x08104408
 81031b4:	08104235 	.word	0x08104235
 81031b8:	081042b8 	.word	0x081042b8

081031bc <__lshift>:
 81031bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 81031c0:	460c      	mov	r4, r1
 81031c2:	6849      	ldr	r1, [r1, #4]
 81031c4:	6923      	ldr	r3, [r4, #16]
 81031c6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 81031ca:	68a3      	ldr	r3, [r4, #8]
 81031cc:	4607      	mov	r7, r0
 81031ce:	4691      	mov	r9, r2
 81031d0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 81031d4:	f108 0601 	add.w	r6, r8, #1
 81031d8:	42b3      	cmp	r3, r6
 81031da:	db0b      	blt.n	81031f4 <__lshift+0x38>
 81031dc:	4638      	mov	r0, r7
 81031de:	f7ff fddb 	bl	8102d98 <_Balloc>
 81031e2:	4605      	mov	r5, r0
 81031e4:	b948      	cbnz	r0, 81031fa <__lshift+0x3e>
 81031e6:	4602      	mov	r2, r0
 81031e8:	4b2a      	ldr	r3, [pc, #168]	; (8103294 <__lshift+0xd8>)
 81031ea:	482b      	ldr	r0, [pc, #172]	; (8103298 <__lshift+0xdc>)
 81031ec:	f240 11d9 	movw	r1, #473	; 0x1d9
 81031f0:	f000 fa5c 	bl	81036ac <__assert_func>
 81031f4:	3101      	adds	r1, #1
 81031f6:	005b      	lsls	r3, r3, #1
 81031f8:	e7ee      	b.n	81031d8 <__lshift+0x1c>
 81031fa:	2300      	movs	r3, #0
 81031fc:	f100 0114 	add.w	r1, r0, #20
 8103200:	f100 0210 	add.w	r2, r0, #16
 8103204:	4618      	mov	r0, r3
 8103206:	4553      	cmp	r3, sl
 8103208:	db37      	blt.n	810327a <__lshift+0xbe>
 810320a:	6920      	ldr	r0, [r4, #16]
 810320c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8103210:	f104 0314 	add.w	r3, r4, #20
 8103214:	f019 091f 	ands.w	r9, r9, #31
 8103218:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 810321c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8103220:	d02f      	beq.n	8103282 <__lshift+0xc6>
 8103222:	f1c9 0e20 	rsb	lr, r9, #32
 8103226:	468a      	mov	sl, r1
 8103228:	f04f 0c00 	mov.w	ip, #0
 810322c:	681a      	ldr	r2, [r3, #0]
 810322e:	fa02 f209 	lsl.w	r2, r2, r9
 8103232:	ea42 020c 	orr.w	r2, r2, ip
 8103236:	f84a 2b04 	str.w	r2, [sl], #4
 810323a:	f853 2b04 	ldr.w	r2, [r3], #4
 810323e:	4298      	cmp	r0, r3
 8103240:	fa22 fc0e 	lsr.w	ip, r2, lr
 8103244:	d8f2      	bhi.n	810322c <__lshift+0x70>
 8103246:	1b03      	subs	r3, r0, r4
 8103248:	3b15      	subs	r3, #21
 810324a:	f023 0303 	bic.w	r3, r3, #3
 810324e:	3304      	adds	r3, #4
 8103250:	f104 0215 	add.w	r2, r4, #21
 8103254:	4290      	cmp	r0, r2
 8103256:	bf38      	it	cc
 8103258:	2304      	movcc	r3, #4
 810325a:	f841 c003 	str.w	ip, [r1, r3]
 810325e:	f1bc 0f00 	cmp.w	ip, #0
 8103262:	d001      	beq.n	8103268 <__lshift+0xac>
 8103264:	f108 0602 	add.w	r6, r8, #2
 8103268:	3e01      	subs	r6, #1
 810326a:	4638      	mov	r0, r7
 810326c:	612e      	str	r6, [r5, #16]
 810326e:	4621      	mov	r1, r4
 8103270:	f7ff fdd2 	bl	8102e18 <_Bfree>
 8103274:	4628      	mov	r0, r5
 8103276:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 810327a:	f842 0f04 	str.w	r0, [r2, #4]!
 810327e:	3301      	adds	r3, #1
 8103280:	e7c1      	b.n	8103206 <__lshift+0x4a>
 8103282:	3904      	subs	r1, #4
 8103284:	f853 2b04 	ldr.w	r2, [r3], #4
 8103288:	f841 2f04 	str.w	r2, [r1, #4]!
 810328c:	4298      	cmp	r0, r3
 810328e:	d8f9      	bhi.n	8103284 <__lshift+0xc8>
 8103290:	e7ea      	b.n	8103268 <__lshift+0xac>
 8103292:	bf00      	nop
 8103294:	081042a7 	.word	0x081042a7
 8103298:	081042b8 	.word	0x081042b8

0810329c <__mcmp>:
 810329c:	b530      	push	{r4, r5, lr}
 810329e:	6902      	ldr	r2, [r0, #16]
 81032a0:	690c      	ldr	r4, [r1, #16]
 81032a2:	1b12      	subs	r2, r2, r4
 81032a4:	d10e      	bne.n	81032c4 <__mcmp+0x28>
 81032a6:	f100 0314 	add.w	r3, r0, #20
 81032aa:	3114      	adds	r1, #20
 81032ac:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 81032b0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 81032b4:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 81032b8:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 81032bc:	42a5      	cmp	r5, r4
 81032be:	d003      	beq.n	81032c8 <__mcmp+0x2c>
 81032c0:	d305      	bcc.n	81032ce <__mcmp+0x32>
 81032c2:	2201      	movs	r2, #1
 81032c4:	4610      	mov	r0, r2
 81032c6:	bd30      	pop	{r4, r5, pc}
 81032c8:	4283      	cmp	r3, r0
 81032ca:	d3f3      	bcc.n	81032b4 <__mcmp+0x18>
 81032cc:	e7fa      	b.n	81032c4 <__mcmp+0x28>
 81032ce:	f04f 32ff 	mov.w	r2, #4294967295
 81032d2:	e7f7      	b.n	81032c4 <__mcmp+0x28>

081032d4 <__mdiff>:
 81032d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81032d8:	460c      	mov	r4, r1
 81032da:	4606      	mov	r6, r0
 81032dc:	4611      	mov	r1, r2
 81032de:	4620      	mov	r0, r4
 81032e0:	4690      	mov	r8, r2
 81032e2:	f7ff ffdb 	bl	810329c <__mcmp>
 81032e6:	1e05      	subs	r5, r0, #0
 81032e8:	d110      	bne.n	810330c <__mdiff+0x38>
 81032ea:	4629      	mov	r1, r5
 81032ec:	4630      	mov	r0, r6
 81032ee:	f7ff fd53 	bl	8102d98 <_Balloc>
 81032f2:	b930      	cbnz	r0, 8103302 <__mdiff+0x2e>
 81032f4:	4b3a      	ldr	r3, [pc, #232]	; (81033e0 <__mdiff+0x10c>)
 81032f6:	4602      	mov	r2, r0
 81032f8:	f240 2132 	movw	r1, #562	; 0x232
 81032fc:	4839      	ldr	r0, [pc, #228]	; (81033e4 <__mdiff+0x110>)
 81032fe:	f000 f9d5 	bl	81036ac <__assert_func>
 8103302:	2301      	movs	r3, #1
 8103304:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8103308:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810330c:	bfa4      	itt	ge
 810330e:	4643      	movge	r3, r8
 8103310:	46a0      	movge	r8, r4
 8103312:	4630      	mov	r0, r6
 8103314:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8103318:	bfa6      	itte	ge
 810331a:	461c      	movge	r4, r3
 810331c:	2500      	movge	r5, #0
 810331e:	2501      	movlt	r5, #1
 8103320:	f7ff fd3a 	bl	8102d98 <_Balloc>
 8103324:	b920      	cbnz	r0, 8103330 <__mdiff+0x5c>
 8103326:	4b2e      	ldr	r3, [pc, #184]	; (81033e0 <__mdiff+0x10c>)
 8103328:	4602      	mov	r2, r0
 810332a:	f44f 7110 	mov.w	r1, #576	; 0x240
 810332e:	e7e5      	b.n	81032fc <__mdiff+0x28>
 8103330:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8103334:	6926      	ldr	r6, [r4, #16]
 8103336:	60c5      	str	r5, [r0, #12]
 8103338:	f104 0914 	add.w	r9, r4, #20
 810333c:	f108 0514 	add.w	r5, r8, #20
 8103340:	f100 0e14 	add.w	lr, r0, #20
 8103344:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8103348:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 810334c:	f108 0210 	add.w	r2, r8, #16
 8103350:	46f2      	mov	sl, lr
 8103352:	2100      	movs	r1, #0
 8103354:	f859 3b04 	ldr.w	r3, [r9], #4
 8103358:	f852 bf04 	ldr.w	fp, [r2, #4]!
 810335c:	fa1f f883 	uxth.w	r8, r3
 8103360:	fa11 f18b 	uxtah	r1, r1, fp
 8103364:	0c1b      	lsrs	r3, r3, #16
 8103366:	eba1 0808 	sub.w	r8, r1, r8
 810336a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 810336e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8103372:	fa1f f888 	uxth.w	r8, r8
 8103376:	1419      	asrs	r1, r3, #16
 8103378:	454e      	cmp	r6, r9
 810337a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 810337e:	f84a 3b04 	str.w	r3, [sl], #4
 8103382:	d8e7      	bhi.n	8103354 <__mdiff+0x80>
 8103384:	1b33      	subs	r3, r6, r4
 8103386:	3b15      	subs	r3, #21
 8103388:	f023 0303 	bic.w	r3, r3, #3
 810338c:	3304      	adds	r3, #4
 810338e:	3415      	adds	r4, #21
 8103390:	42a6      	cmp	r6, r4
 8103392:	bf38      	it	cc
 8103394:	2304      	movcc	r3, #4
 8103396:	441d      	add	r5, r3
 8103398:	4473      	add	r3, lr
 810339a:	469e      	mov	lr, r3
 810339c:	462e      	mov	r6, r5
 810339e:	4566      	cmp	r6, ip
 81033a0:	d30e      	bcc.n	81033c0 <__mdiff+0xec>
 81033a2:	f10c 0203 	add.w	r2, ip, #3
 81033a6:	1b52      	subs	r2, r2, r5
 81033a8:	f022 0203 	bic.w	r2, r2, #3
 81033ac:	3d03      	subs	r5, #3
 81033ae:	45ac      	cmp	ip, r5
 81033b0:	bf38      	it	cc
 81033b2:	2200      	movcc	r2, #0
 81033b4:	441a      	add	r2, r3
 81033b6:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 81033ba:	b17b      	cbz	r3, 81033dc <__mdiff+0x108>
 81033bc:	6107      	str	r7, [r0, #16]
 81033be:	e7a3      	b.n	8103308 <__mdiff+0x34>
 81033c0:	f856 8b04 	ldr.w	r8, [r6], #4
 81033c4:	fa11 f288 	uxtah	r2, r1, r8
 81033c8:	1414      	asrs	r4, r2, #16
 81033ca:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 81033ce:	b292      	uxth	r2, r2
 81033d0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 81033d4:	f84e 2b04 	str.w	r2, [lr], #4
 81033d8:	1421      	asrs	r1, r4, #16
 81033da:	e7e0      	b.n	810339e <__mdiff+0xca>
 81033dc:	3f01      	subs	r7, #1
 81033de:	e7ea      	b.n	81033b6 <__mdiff+0xe2>
 81033e0:	081042a7 	.word	0x081042a7
 81033e4:	081042b8 	.word	0x081042b8

081033e8 <__d2b>:
 81033e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 81033ec:	4689      	mov	r9, r1
 81033ee:	2101      	movs	r1, #1
 81033f0:	ec57 6b10 	vmov	r6, r7, d0
 81033f4:	4690      	mov	r8, r2
 81033f6:	f7ff fccf 	bl	8102d98 <_Balloc>
 81033fa:	4604      	mov	r4, r0
 81033fc:	b930      	cbnz	r0, 810340c <__d2b+0x24>
 81033fe:	4602      	mov	r2, r0
 8103400:	4b25      	ldr	r3, [pc, #148]	; (8103498 <__d2b+0xb0>)
 8103402:	4826      	ldr	r0, [pc, #152]	; (810349c <__d2b+0xb4>)
 8103404:	f240 310a 	movw	r1, #778	; 0x30a
 8103408:	f000 f950 	bl	81036ac <__assert_func>
 810340c:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8103410:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8103414:	bb35      	cbnz	r5, 8103464 <__d2b+0x7c>
 8103416:	2e00      	cmp	r6, #0
 8103418:	9301      	str	r3, [sp, #4]
 810341a:	d028      	beq.n	810346e <__d2b+0x86>
 810341c:	4668      	mov	r0, sp
 810341e:	9600      	str	r6, [sp, #0]
 8103420:	f7ff fd82 	bl	8102f28 <__lo0bits>
 8103424:	9900      	ldr	r1, [sp, #0]
 8103426:	b300      	cbz	r0, 810346a <__d2b+0x82>
 8103428:	9a01      	ldr	r2, [sp, #4]
 810342a:	f1c0 0320 	rsb	r3, r0, #32
 810342e:	fa02 f303 	lsl.w	r3, r2, r3
 8103432:	430b      	orrs	r3, r1
 8103434:	40c2      	lsrs	r2, r0
 8103436:	6163      	str	r3, [r4, #20]
 8103438:	9201      	str	r2, [sp, #4]
 810343a:	9b01      	ldr	r3, [sp, #4]
 810343c:	61a3      	str	r3, [r4, #24]
 810343e:	2b00      	cmp	r3, #0
 8103440:	bf14      	ite	ne
 8103442:	2202      	movne	r2, #2
 8103444:	2201      	moveq	r2, #1
 8103446:	6122      	str	r2, [r4, #16]
 8103448:	b1d5      	cbz	r5, 8103480 <__d2b+0x98>
 810344a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 810344e:	4405      	add	r5, r0
 8103450:	f8c9 5000 	str.w	r5, [r9]
 8103454:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8103458:	f8c8 0000 	str.w	r0, [r8]
 810345c:	4620      	mov	r0, r4
 810345e:	b003      	add	sp, #12
 8103460:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8103464:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8103468:	e7d5      	b.n	8103416 <__d2b+0x2e>
 810346a:	6161      	str	r1, [r4, #20]
 810346c:	e7e5      	b.n	810343a <__d2b+0x52>
 810346e:	a801      	add	r0, sp, #4
 8103470:	f7ff fd5a 	bl	8102f28 <__lo0bits>
 8103474:	9b01      	ldr	r3, [sp, #4]
 8103476:	6163      	str	r3, [r4, #20]
 8103478:	2201      	movs	r2, #1
 810347a:	6122      	str	r2, [r4, #16]
 810347c:	3020      	adds	r0, #32
 810347e:	e7e3      	b.n	8103448 <__d2b+0x60>
 8103480:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8103484:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8103488:	f8c9 0000 	str.w	r0, [r9]
 810348c:	6918      	ldr	r0, [r3, #16]
 810348e:	f7ff fd2b 	bl	8102ee8 <__hi0bits>
 8103492:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8103496:	e7df      	b.n	8103458 <__d2b+0x70>
 8103498:	081042a7 	.word	0x081042a7
 810349c:	081042b8 	.word	0x081042b8

081034a0 <_calloc_r>:
 81034a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 81034a2:	fba1 2402 	umull	r2, r4, r1, r2
 81034a6:	b94c      	cbnz	r4, 81034bc <_calloc_r+0x1c>
 81034a8:	4611      	mov	r1, r2
 81034aa:	9201      	str	r2, [sp, #4]
 81034ac:	f000 f87a 	bl	81035a4 <_malloc_r>
 81034b0:	9a01      	ldr	r2, [sp, #4]
 81034b2:	4605      	mov	r5, r0
 81034b4:	b930      	cbnz	r0, 81034c4 <_calloc_r+0x24>
 81034b6:	4628      	mov	r0, r5
 81034b8:	b003      	add	sp, #12
 81034ba:	bd30      	pop	{r4, r5, pc}
 81034bc:	220c      	movs	r2, #12
 81034be:	6002      	str	r2, [r0, #0]
 81034c0:	2500      	movs	r5, #0
 81034c2:	e7f8      	b.n	81034b6 <_calloc_r+0x16>
 81034c4:	4621      	mov	r1, r4
 81034c6:	f7fe f95f 	bl	8101788 <memset>
 81034ca:	e7f4      	b.n	81034b6 <_calloc_r+0x16>

081034cc <_free_r>:
 81034cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 81034ce:	2900      	cmp	r1, #0
 81034d0:	d044      	beq.n	810355c <_free_r+0x90>
 81034d2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 81034d6:	9001      	str	r0, [sp, #4]
 81034d8:	2b00      	cmp	r3, #0
 81034da:	f1a1 0404 	sub.w	r4, r1, #4
 81034de:	bfb8      	it	lt
 81034e0:	18e4      	addlt	r4, r4, r3
 81034e2:	f000 f925 	bl	8103730 <__malloc_lock>
 81034e6:	4a1e      	ldr	r2, [pc, #120]	; (8103560 <_free_r+0x94>)
 81034e8:	9801      	ldr	r0, [sp, #4]
 81034ea:	6813      	ldr	r3, [r2, #0]
 81034ec:	b933      	cbnz	r3, 81034fc <_free_r+0x30>
 81034ee:	6063      	str	r3, [r4, #4]
 81034f0:	6014      	str	r4, [r2, #0]
 81034f2:	b003      	add	sp, #12
 81034f4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 81034f8:	f000 b920 	b.w	810373c <__malloc_unlock>
 81034fc:	42a3      	cmp	r3, r4
 81034fe:	d908      	bls.n	8103512 <_free_r+0x46>
 8103500:	6825      	ldr	r5, [r4, #0]
 8103502:	1961      	adds	r1, r4, r5
 8103504:	428b      	cmp	r3, r1
 8103506:	bf01      	itttt	eq
 8103508:	6819      	ldreq	r1, [r3, #0]
 810350a:	685b      	ldreq	r3, [r3, #4]
 810350c:	1949      	addeq	r1, r1, r5
 810350e:	6021      	streq	r1, [r4, #0]
 8103510:	e7ed      	b.n	81034ee <_free_r+0x22>
 8103512:	461a      	mov	r2, r3
 8103514:	685b      	ldr	r3, [r3, #4]
 8103516:	b10b      	cbz	r3, 810351c <_free_r+0x50>
 8103518:	42a3      	cmp	r3, r4
 810351a:	d9fa      	bls.n	8103512 <_free_r+0x46>
 810351c:	6811      	ldr	r1, [r2, #0]
 810351e:	1855      	adds	r5, r2, r1
 8103520:	42a5      	cmp	r5, r4
 8103522:	d10b      	bne.n	810353c <_free_r+0x70>
 8103524:	6824      	ldr	r4, [r4, #0]
 8103526:	4421      	add	r1, r4
 8103528:	1854      	adds	r4, r2, r1
 810352a:	42a3      	cmp	r3, r4
 810352c:	6011      	str	r1, [r2, #0]
 810352e:	d1e0      	bne.n	81034f2 <_free_r+0x26>
 8103530:	681c      	ldr	r4, [r3, #0]
 8103532:	685b      	ldr	r3, [r3, #4]
 8103534:	6053      	str	r3, [r2, #4]
 8103536:	4421      	add	r1, r4
 8103538:	6011      	str	r1, [r2, #0]
 810353a:	e7da      	b.n	81034f2 <_free_r+0x26>
 810353c:	d902      	bls.n	8103544 <_free_r+0x78>
 810353e:	230c      	movs	r3, #12
 8103540:	6003      	str	r3, [r0, #0]
 8103542:	e7d6      	b.n	81034f2 <_free_r+0x26>
 8103544:	6825      	ldr	r5, [r4, #0]
 8103546:	1961      	adds	r1, r4, r5
 8103548:	428b      	cmp	r3, r1
 810354a:	bf04      	itt	eq
 810354c:	6819      	ldreq	r1, [r3, #0]
 810354e:	685b      	ldreq	r3, [r3, #4]
 8103550:	6063      	str	r3, [r4, #4]
 8103552:	bf04      	itt	eq
 8103554:	1949      	addeq	r1, r1, r5
 8103556:	6021      	streq	r1, [r4, #0]
 8103558:	6054      	str	r4, [r2, #4]
 810355a:	e7ca      	b.n	81034f2 <_free_r+0x26>
 810355c:	b003      	add	sp, #12
 810355e:	bd30      	pop	{r4, r5, pc}
 8103560:	10000204 	.word	0x10000204

08103564 <sbrk_aligned>:
 8103564:	b570      	push	{r4, r5, r6, lr}
 8103566:	4e0e      	ldr	r6, [pc, #56]	; (81035a0 <sbrk_aligned+0x3c>)
 8103568:	460c      	mov	r4, r1
 810356a:	6831      	ldr	r1, [r6, #0]
 810356c:	4605      	mov	r5, r0
 810356e:	b911      	cbnz	r1, 8103576 <sbrk_aligned+0x12>
 8103570:	f000 f88c 	bl	810368c <_sbrk_r>
 8103574:	6030      	str	r0, [r6, #0]
 8103576:	4621      	mov	r1, r4
 8103578:	4628      	mov	r0, r5
 810357a:	f000 f887 	bl	810368c <_sbrk_r>
 810357e:	1c43      	adds	r3, r0, #1
 8103580:	d00a      	beq.n	8103598 <sbrk_aligned+0x34>
 8103582:	1cc4      	adds	r4, r0, #3
 8103584:	f024 0403 	bic.w	r4, r4, #3
 8103588:	42a0      	cmp	r0, r4
 810358a:	d007      	beq.n	810359c <sbrk_aligned+0x38>
 810358c:	1a21      	subs	r1, r4, r0
 810358e:	4628      	mov	r0, r5
 8103590:	f000 f87c 	bl	810368c <_sbrk_r>
 8103594:	3001      	adds	r0, #1
 8103596:	d101      	bne.n	810359c <sbrk_aligned+0x38>
 8103598:	f04f 34ff 	mov.w	r4, #4294967295
 810359c:	4620      	mov	r0, r4
 810359e:	bd70      	pop	{r4, r5, r6, pc}
 81035a0:	10000208 	.word	0x10000208

081035a4 <_malloc_r>:
 81035a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 81035a8:	1ccd      	adds	r5, r1, #3
 81035aa:	f025 0503 	bic.w	r5, r5, #3
 81035ae:	3508      	adds	r5, #8
 81035b0:	2d0c      	cmp	r5, #12
 81035b2:	bf38      	it	cc
 81035b4:	250c      	movcc	r5, #12
 81035b6:	2d00      	cmp	r5, #0
 81035b8:	4607      	mov	r7, r0
 81035ba:	db01      	blt.n	81035c0 <_malloc_r+0x1c>
 81035bc:	42a9      	cmp	r1, r5
 81035be:	d905      	bls.n	81035cc <_malloc_r+0x28>
 81035c0:	230c      	movs	r3, #12
 81035c2:	603b      	str	r3, [r7, #0]
 81035c4:	2600      	movs	r6, #0
 81035c6:	4630      	mov	r0, r6
 81035c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 81035cc:	4e2e      	ldr	r6, [pc, #184]	; (8103688 <_malloc_r+0xe4>)
 81035ce:	f000 f8af 	bl	8103730 <__malloc_lock>
 81035d2:	6833      	ldr	r3, [r6, #0]
 81035d4:	461c      	mov	r4, r3
 81035d6:	bb34      	cbnz	r4, 8103626 <_malloc_r+0x82>
 81035d8:	4629      	mov	r1, r5
 81035da:	4638      	mov	r0, r7
 81035dc:	f7ff ffc2 	bl	8103564 <sbrk_aligned>
 81035e0:	1c43      	adds	r3, r0, #1
 81035e2:	4604      	mov	r4, r0
 81035e4:	d14d      	bne.n	8103682 <_malloc_r+0xde>
 81035e6:	6834      	ldr	r4, [r6, #0]
 81035e8:	4626      	mov	r6, r4
 81035ea:	2e00      	cmp	r6, #0
 81035ec:	d140      	bne.n	8103670 <_malloc_r+0xcc>
 81035ee:	6823      	ldr	r3, [r4, #0]
 81035f0:	4631      	mov	r1, r6
 81035f2:	4638      	mov	r0, r7
 81035f4:	eb04 0803 	add.w	r8, r4, r3
 81035f8:	f000 f848 	bl	810368c <_sbrk_r>
 81035fc:	4580      	cmp	r8, r0
 81035fe:	d13a      	bne.n	8103676 <_malloc_r+0xd2>
 8103600:	6821      	ldr	r1, [r4, #0]
 8103602:	3503      	adds	r5, #3
 8103604:	1a6d      	subs	r5, r5, r1
 8103606:	f025 0503 	bic.w	r5, r5, #3
 810360a:	3508      	adds	r5, #8
 810360c:	2d0c      	cmp	r5, #12
 810360e:	bf38      	it	cc
 8103610:	250c      	movcc	r5, #12
 8103612:	4629      	mov	r1, r5
 8103614:	4638      	mov	r0, r7
 8103616:	f7ff ffa5 	bl	8103564 <sbrk_aligned>
 810361a:	3001      	adds	r0, #1
 810361c:	d02b      	beq.n	8103676 <_malloc_r+0xd2>
 810361e:	6823      	ldr	r3, [r4, #0]
 8103620:	442b      	add	r3, r5
 8103622:	6023      	str	r3, [r4, #0]
 8103624:	e00e      	b.n	8103644 <_malloc_r+0xa0>
 8103626:	6822      	ldr	r2, [r4, #0]
 8103628:	1b52      	subs	r2, r2, r5
 810362a:	d41e      	bmi.n	810366a <_malloc_r+0xc6>
 810362c:	2a0b      	cmp	r2, #11
 810362e:	d916      	bls.n	810365e <_malloc_r+0xba>
 8103630:	1961      	adds	r1, r4, r5
 8103632:	42a3      	cmp	r3, r4
 8103634:	6025      	str	r5, [r4, #0]
 8103636:	bf18      	it	ne
 8103638:	6059      	strne	r1, [r3, #4]
 810363a:	6863      	ldr	r3, [r4, #4]
 810363c:	bf08      	it	eq
 810363e:	6031      	streq	r1, [r6, #0]
 8103640:	5162      	str	r2, [r4, r5]
 8103642:	604b      	str	r3, [r1, #4]
 8103644:	4638      	mov	r0, r7
 8103646:	f104 060b 	add.w	r6, r4, #11
 810364a:	f000 f877 	bl	810373c <__malloc_unlock>
 810364e:	f026 0607 	bic.w	r6, r6, #7
 8103652:	1d23      	adds	r3, r4, #4
 8103654:	1af2      	subs	r2, r6, r3
 8103656:	d0b6      	beq.n	81035c6 <_malloc_r+0x22>
 8103658:	1b9b      	subs	r3, r3, r6
 810365a:	50a3      	str	r3, [r4, r2]
 810365c:	e7b3      	b.n	81035c6 <_malloc_r+0x22>
 810365e:	6862      	ldr	r2, [r4, #4]
 8103660:	42a3      	cmp	r3, r4
 8103662:	bf0c      	ite	eq
 8103664:	6032      	streq	r2, [r6, #0]
 8103666:	605a      	strne	r2, [r3, #4]
 8103668:	e7ec      	b.n	8103644 <_malloc_r+0xa0>
 810366a:	4623      	mov	r3, r4
 810366c:	6864      	ldr	r4, [r4, #4]
 810366e:	e7b2      	b.n	81035d6 <_malloc_r+0x32>
 8103670:	4634      	mov	r4, r6
 8103672:	6876      	ldr	r6, [r6, #4]
 8103674:	e7b9      	b.n	81035ea <_malloc_r+0x46>
 8103676:	230c      	movs	r3, #12
 8103678:	603b      	str	r3, [r7, #0]
 810367a:	4638      	mov	r0, r7
 810367c:	f000 f85e 	bl	810373c <__malloc_unlock>
 8103680:	e7a1      	b.n	81035c6 <_malloc_r+0x22>
 8103682:	6025      	str	r5, [r4, #0]
 8103684:	e7de      	b.n	8103644 <_malloc_r+0xa0>
 8103686:	bf00      	nop
 8103688:	10000204 	.word	0x10000204

0810368c <_sbrk_r>:
 810368c:	b538      	push	{r3, r4, r5, lr}
 810368e:	4d06      	ldr	r5, [pc, #24]	; (81036a8 <_sbrk_r+0x1c>)
 8103690:	2300      	movs	r3, #0
 8103692:	4604      	mov	r4, r0
 8103694:	4608      	mov	r0, r1
 8103696:	602b      	str	r3, [r5, #0]
 8103698:	f7fd fc38 	bl	8100f0c <_sbrk>
 810369c:	1c43      	adds	r3, r0, #1
 810369e:	d102      	bne.n	81036a6 <_sbrk_r+0x1a>
 81036a0:	682b      	ldr	r3, [r5, #0]
 81036a2:	b103      	cbz	r3, 81036a6 <_sbrk_r+0x1a>
 81036a4:	6023      	str	r3, [r4, #0]
 81036a6:	bd38      	pop	{r3, r4, r5, pc}
 81036a8:	1000020c 	.word	0x1000020c

081036ac <__assert_func>:
 81036ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 81036ae:	4614      	mov	r4, r2
 81036b0:	461a      	mov	r2, r3
 81036b2:	4b09      	ldr	r3, [pc, #36]	; (81036d8 <__assert_func+0x2c>)
 81036b4:	681b      	ldr	r3, [r3, #0]
 81036b6:	4605      	mov	r5, r0
 81036b8:	68d8      	ldr	r0, [r3, #12]
 81036ba:	b14c      	cbz	r4, 81036d0 <__assert_func+0x24>
 81036bc:	4b07      	ldr	r3, [pc, #28]	; (81036dc <__assert_func+0x30>)
 81036be:	9100      	str	r1, [sp, #0]
 81036c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 81036c4:	4906      	ldr	r1, [pc, #24]	; (81036e0 <__assert_func+0x34>)
 81036c6:	462b      	mov	r3, r5
 81036c8:	f000 f80e 	bl	81036e8 <fiprintf>
 81036cc:	f000 fa64 	bl	8103b98 <abort>
 81036d0:	4b04      	ldr	r3, [pc, #16]	; (81036e4 <__assert_func+0x38>)
 81036d2:	461c      	mov	r4, r3
 81036d4:	e7f3      	b.n	81036be <__assert_func+0x12>
 81036d6:	bf00      	nop
 81036d8:	10000010 	.word	0x10000010
 81036dc:	08104414 	.word	0x08104414
 81036e0:	08104421 	.word	0x08104421
 81036e4:	0810444f 	.word	0x0810444f

081036e8 <fiprintf>:
 81036e8:	b40e      	push	{r1, r2, r3}
 81036ea:	b503      	push	{r0, r1, lr}
 81036ec:	4601      	mov	r1, r0
 81036ee:	ab03      	add	r3, sp, #12
 81036f0:	4805      	ldr	r0, [pc, #20]	; (8103708 <fiprintf+0x20>)
 81036f2:	f853 2b04 	ldr.w	r2, [r3], #4
 81036f6:	6800      	ldr	r0, [r0, #0]
 81036f8:	9301      	str	r3, [sp, #4]
 81036fa:	f000 f84f 	bl	810379c <_vfiprintf_r>
 81036fe:	b002      	add	sp, #8
 8103700:	f85d eb04 	ldr.w	lr, [sp], #4
 8103704:	b003      	add	sp, #12
 8103706:	4770      	bx	lr
 8103708:	10000010 	.word	0x10000010

0810370c <__ascii_mbtowc>:
 810370c:	b082      	sub	sp, #8
 810370e:	b901      	cbnz	r1, 8103712 <__ascii_mbtowc+0x6>
 8103710:	a901      	add	r1, sp, #4
 8103712:	b142      	cbz	r2, 8103726 <__ascii_mbtowc+0x1a>
 8103714:	b14b      	cbz	r3, 810372a <__ascii_mbtowc+0x1e>
 8103716:	7813      	ldrb	r3, [r2, #0]
 8103718:	600b      	str	r3, [r1, #0]
 810371a:	7812      	ldrb	r2, [r2, #0]
 810371c:	1e10      	subs	r0, r2, #0
 810371e:	bf18      	it	ne
 8103720:	2001      	movne	r0, #1
 8103722:	b002      	add	sp, #8
 8103724:	4770      	bx	lr
 8103726:	4610      	mov	r0, r2
 8103728:	e7fb      	b.n	8103722 <__ascii_mbtowc+0x16>
 810372a:	f06f 0001 	mvn.w	r0, #1
 810372e:	e7f8      	b.n	8103722 <__ascii_mbtowc+0x16>

08103730 <__malloc_lock>:
 8103730:	4801      	ldr	r0, [pc, #4]	; (8103738 <__malloc_lock+0x8>)
 8103732:	f000 bbf1 	b.w	8103f18 <__retarget_lock_acquire_recursive>
 8103736:	bf00      	nop
 8103738:	10000210 	.word	0x10000210

0810373c <__malloc_unlock>:
 810373c:	4801      	ldr	r0, [pc, #4]	; (8103744 <__malloc_unlock+0x8>)
 810373e:	f000 bbec 	b.w	8103f1a <__retarget_lock_release_recursive>
 8103742:	bf00      	nop
 8103744:	10000210 	.word	0x10000210

08103748 <__sfputc_r>:
 8103748:	6893      	ldr	r3, [r2, #8]
 810374a:	3b01      	subs	r3, #1
 810374c:	2b00      	cmp	r3, #0
 810374e:	b410      	push	{r4}
 8103750:	6093      	str	r3, [r2, #8]
 8103752:	da08      	bge.n	8103766 <__sfputc_r+0x1e>
 8103754:	6994      	ldr	r4, [r2, #24]
 8103756:	42a3      	cmp	r3, r4
 8103758:	db01      	blt.n	810375e <__sfputc_r+0x16>
 810375a:	290a      	cmp	r1, #10
 810375c:	d103      	bne.n	8103766 <__sfputc_r+0x1e>
 810375e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8103762:	f000 b94b 	b.w	81039fc <__swbuf_r>
 8103766:	6813      	ldr	r3, [r2, #0]
 8103768:	1c58      	adds	r0, r3, #1
 810376a:	6010      	str	r0, [r2, #0]
 810376c:	7019      	strb	r1, [r3, #0]
 810376e:	4608      	mov	r0, r1
 8103770:	f85d 4b04 	ldr.w	r4, [sp], #4
 8103774:	4770      	bx	lr

08103776 <__sfputs_r>:
 8103776:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8103778:	4606      	mov	r6, r0
 810377a:	460f      	mov	r7, r1
 810377c:	4614      	mov	r4, r2
 810377e:	18d5      	adds	r5, r2, r3
 8103780:	42ac      	cmp	r4, r5
 8103782:	d101      	bne.n	8103788 <__sfputs_r+0x12>
 8103784:	2000      	movs	r0, #0
 8103786:	e007      	b.n	8103798 <__sfputs_r+0x22>
 8103788:	f814 1b01 	ldrb.w	r1, [r4], #1
 810378c:	463a      	mov	r2, r7
 810378e:	4630      	mov	r0, r6
 8103790:	f7ff ffda 	bl	8103748 <__sfputc_r>
 8103794:	1c43      	adds	r3, r0, #1
 8103796:	d1f3      	bne.n	8103780 <__sfputs_r+0xa>
 8103798:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0810379c <_vfiprintf_r>:
 810379c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81037a0:	460d      	mov	r5, r1
 81037a2:	b09d      	sub	sp, #116	; 0x74
 81037a4:	4614      	mov	r4, r2
 81037a6:	4698      	mov	r8, r3
 81037a8:	4606      	mov	r6, r0
 81037aa:	b118      	cbz	r0, 81037b4 <_vfiprintf_r+0x18>
 81037ac:	6983      	ldr	r3, [r0, #24]
 81037ae:	b90b      	cbnz	r3, 81037b4 <_vfiprintf_r+0x18>
 81037b0:	f000 fb14 	bl	8103ddc <__sinit>
 81037b4:	4b89      	ldr	r3, [pc, #548]	; (81039dc <_vfiprintf_r+0x240>)
 81037b6:	429d      	cmp	r5, r3
 81037b8:	d11b      	bne.n	81037f2 <_vfiprintf_r+0x56>
 81037ba:	6875      	ldr	r5, [r6, #4]
 81037bc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 81037be:	07d9      	lsls	r1, r3, #31
 81037c0:	d405      	bmi.n	81037ce <_vfiprintf_r+0x32>
 81037c2:	89ab      	ldrh	r3, [r5, #12]
 81037c4:	059a      	lsls	r2, r3, #22
 81037c6:	d402      	bmi.n	81037ce <_vfiprintf_r+0x32>
 81037c8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 81037ca:	f000 fba5 	bl	8103f18 <__retarget_lock_acquire_recursive>
 81037ce:	89ab      	ldrh	r3, [r5, #12]
 81037d0:	071b      	lsls	r3, r3, #28
 81037d2:	d501      	bpl.n	81037d8 <_vfiprintf_r+0x3c>
 81037d4:	692b      	ldr	r3, [r5, #16]
 81037d6:	b9eb      	cbnz	r3, 8103814 <_vfiprintf_r+0x78>
 81037d8:	4629      	mov	r1, r5
 81037da:	4630      	mov	r0, r6
 81037dc:	f000 f96e 	bl	8103abc <__swsetup_r>
 81037e0:	b1c0      	cbz	r0, 8103814 <_vfiprintf_r+0x78>
 81037e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 81037e4:	07dc      	lsls	r4, r3, #31
 81037e6:	d50e      	bpl.n	8103806 <_vfiprintf_r+0x6a>
 81037e8:	f04f 30ff 	mov.w	r0, #4294967295
 81037ec:	b01d      	add	sp, #116	; 0x74
 81037ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81037f2:	4b7b      	ldr	r3, [pc, #492]	; (81039e0 <_vfiprintf_r+0x244>)
 81037f4:	429d      	cmp	r5, r3
 81037f6:	d101      	bne.n	81037fc <_vfiprintf_r+0x60>
 81037f8:	68b5      	ldr	r5, [r6, #8]
 81037fa:	e7df      	b.n	81037bc <_vfiprintf_r+0x20>
 81037fc:	4b79      	ldr	r3, [pc, #484]	; (81039e4 <_vfiprintf_r+0x248>)
 81037fe:	429d      	cmp	r5, r3
 8103800:	bf08      	it	eq
 8103802:	68f5      	ldreq	r5, [r6, #12]
 8103804:	e7da      	b.n	81037bc <_vfiprintf_r+0x20>
 8103806:	89ab      	ldrh	r3, [r5, #12]
 8103808:	0598      	lsls	r0, r3, #22
 810380a:	d4ed      	bmi.n	81037e8 <_vfiprintf_r+0x4c>
 810380c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 810380e:	f000 fb84 	bl	8103f1a <__retarget_lock_release_recursive>
 8103812:	e7e9      	b.n	81037e8 <_vfiprintf_r+0x4c>
 8103814:	2300      	movs	r3, #0
 8103816:	9309      	str	r3, [sp, #36]	; 0x24
 8103818:	2320      	movs	r3, #32
 810381a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 810381e:	f8cd 800c 	str.w	r8, [sp, #12]
 8103822:	2330      	movs	r3, #48	; 0x30
 8103824:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 81039e8 <_vfiprintf_r+0x24c>
 8103828:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 810382c:	f04f 0901 	mov.w	r9, #1
 8103830:	4623      	mov	r3, r4
 8103832:	469a      	mov	sl, r3
 8103834:	f813 2b01 	ldrb.w	r2, [r3], #1
 8103838:	b10a      	cbz	r2, 810383e <_vfiprintf_r+0xa2>
 810383a:	2a25      	cmp	r2, #37	; 0x25
 810383c:	d1f9      	bne.n	8103832 <_vfiprintf_r+0x96>
 810383e:	ebba 0b04 	subs.w	fp, sl, r4
 8103842:	d00b      	beq.n	810385c <_vfiprintf_r+0xc0>
 8103844:	465b      	mov	r3, fp
 8103846:	4622      	mov	r2, r4
 8103848:	4629      	mov	r1, r5
 810384a:	4630      	mov	r0, r6
 810384c:	f7ff ff93 	bl	8103776 <__sfputs_r>
 8103850:	3001      	adds	r0, #1
 8103852:	f000 80aa 	beq.w	81039aa <_vfiprintf_r+0x20e>
 8103856:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8103858:	445a      	add	r2, fp
 810385a:	9209      	str	r2, [sp, #36]	; 0x24
 810385c:	f89a 3000 	ldrb.w	r3, [sl]
 8103860:	2b00      	cmp	r3, #0
 8103862:	f000 80a2 	beq.w	81039aa <_vfiprintf_r+0x20e>
 8103866:	2300      	movs	r3, #0
 8103868:	f04f 32ff 	mov.w	r2, #4294967295
 810386c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8103870:	f10a 0a01 	add.w	sl, sl, #1
 8103874:	9304      	str	r3, [sp, #16]
 8103876:	9307      	str	r3, [sp, #28]
 8103878:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 810387c:	931a      	str	r3, [sp, #104]	; 0x68
 810387e:	4654      	mov	r4, sl
 8103880:	2205      	movs	r2, #5
 8103882:	f814 1b01 	ldrb.w	r1, [r4], #1
 8103886:	4858      	ldr	r0, [pc, #352]	; (81039e8 <_vfiprintf_r+0x24c>)
 8103888:	f7fc fd32 	bl	81002f0 <memchr>
 810388c:	9a04      	ldr	r2, [sp, #16]
 810388e:	b9d8      	cbnz	r0, 81038c8 <_vfiprintf_r+0x12c>
 8103890:	06d1      	lsls	r1, r2, #27
 8103892:	bf44      	itt	mi
 8103894:	2320      	movmi	r3, #32
 8103896:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 810389a:	0713      	lsls	r3, r2, #28
 810389c:	bf44      	itt	mi
 810389e:	232b      	movmi	r3, #43	; 0x2b
 81038a0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 81038a4:	f89a 3000 	ldrb.w	r3, [sl]
 81038a8:	2b2a      	cmp	r3, #42	; 0x2a
 81038aa:	d015      	beq.n	81038d8 <_vfiprintf_r+0x13c>
 81038ac:	9a07      	ldr	r2, [sp, #28]
 81038ae:	4654      	mov	r4, sl
 81038b0:	2000      	movs	r0, #0
 81038b2:	f04f 0c0a 	mov.w	ip, #10
 81038b6:	4621      	mov	r1, r4
 81038b8:	f811 3b01 	ldrb.w	r3, [r1], #1
 81038bc:	3b30      	subs	r3, #48	; 0x30
 81038be:	2b09      	cmp	r3, #9
 81038c0:	d94e      	bls.n	8103960 <_vfiprintf_r+0x1c4>
 81038c2:	b1b0      	cbz	r0, 81038f2 <_vfiprintf_r+0x156>
 81038c4:	9207      	str	r2, [sp, #28]
 81038c6:	e014      	b.n	81038f2 <_vfiprintf_r+0x156>
 81038c8:	eba0 0308 	sub.w	r3, r0, r8
 81038cc:	fa09 f303 	lsl.w	r3, r9, r3
 81038d0:	4313      	orrs	r3, r2
 81038d2:	9304      	str	r3, [sp, #16]
 81038d4:	46a2      	mov	sl, r4
 81038d6:	e7d2      	b.n	810387e <_vfiprintf_r+0xe2>
 81038d8:	9b03      	ldr	r3, [sp, #12]
 81038da:	1d19      	adds	r1, r3, #4
 81038dc:	681b      	ldr	r3, [r3, #0]
 81038de:	9103      	str	r1, [sp, #12]
 81038e0:	2b00      	cmp	r3, #0
 81038e2:	bfbb      	ittet	lt
 81038e4:	425b      	neglt	r3, r3
 81038e6:	f042 0202 	orrlt.w	r2, r2, #2
 81038ea:	9307      	strge	r3, [sp, #28]
 81038ec:	9307      	strlt	r3, [sp, #28]
 81038ee:	bfb8      	it	lt
 81038f0:	9204      	strlt	r2, [sp, #16]
 81038f2:	7823      	ldrb	r3, [r4, #0]
 81038f4:	2b2e      	cmp	r3, #46	; 0x2e
 81038f6:	d10c      	bne.n	8103912 <_vfiprintf_r+0x176>
 81038f8:	7863      	ldrb	r3, [r4, #1]
 81038fa:	2b2a      	cmp	r3, #42	; 0x2a
 81038fc:	d135      	bne.n	810396a <_vfiprintf_r+0x1ce>
 81038fe:	9b03      	ldr	r3, [sp, #12]
 8103900:	1d1a      	adds	r2, r3, #4
 8103902:	681b      	ldr	r3, [r3, #0]
 8103904:	9203      	str	r2, [sp, #12]
 8103906:	2b00      	cmp	r3, #0
 8103908:	bfb8      	it	lt
 810390a:	f04f 33ff 	movlt.w	r3, #4294967295
 810390e:	3402      	adds	r4, #2
 8103910:	9305      	str	r3, [sp, #20]
 8103912:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 81039f8 <_vfiprintf_r+0x25c>
 8103916:	7821      	ldrb	r1, [r4, #0]
 8103918:	2203      	movs	r2, #3
 810391a:	4650      	mov	r0, sl
 810391c:	f7fc fce8 	bl	81002f0 <memchr>
 8103920:	b140      	cbz	r0, 8103934 <_vfiprintf_r+0x198>
 8103922:	2340      	movs	r3, #64	; 0x40
 8103924:	eba0 000a 	sub.w	r0, r0, sl
 8103928:	fa03 f000 	lsl.w	r0, r3, r0
 810392c:	9b04      	ldr	r3, [sp, #16]
 810392e:	4303      	orrs	r3, r0
 8103930:	3401      	adds	r4, #1
 8103932:	9304      	str	r3, [sp, #16]
 8103934:	f814 1b01 	ldrb.w	r1, [r4], #1
 8103938:	482c      	ldr	r0, [pc, #176]	; (81039ec <_vfiprintf_r+0x250>)
 810393a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 810393e:	2206      	movs	r2, #6
 8103940:	f7fc fcd6 	bl	81002f0 <memchr>
 8103944:	2800      	cmp	r0, #0
 8103946:	d03f      	beq.n	81039c8 <_vfiprintf_r+0x22c>
 8103948:	4b29      	ldr	r3, [pc, #164]	; (81039f0 <_vfiprintf_r+0x254>)
 810394a:	bb1b      	cbnz	r3, 8103994 <_vfiprintf_r+0x1f8>
 810394c:	9b03      	ldr	r3, [sp, #12]
 810394e:	3307      	adds	r3, #7
 8103950:	f023 0307 	bic.w	r3, r3, #7
 8103954:	3308      	adds	r3, #8
 8103956:	9303      	str	r3, [sp, #12]
 8103958:	9b09      	ldr	r3, [sp, #36]	; 0x24
 810395a:	443b      	add	r3, r7
 810395c:	9309      	str	r3, [sp, #36]	; 0x24
 810395e:	e767      	b.n	8103830 <_vfiprintf_r+0x94>
 8103960:	fb0c 3202 	mla	r2, ip, r2, r3
 8103964:	460c      	mov	r4, r1
 8103966:	2001      	movs	r0, #1
 8103968:	e7a5      	b.n	81038b6 <_vfiprintf_r+0x11a>
 810396a:	2300      	movs	r3, #0
 810396c:	3401      	adds	r4, #1
 810396e:	9305      	str	r3, [sp, #20]
 8103970:	4619      	mov	r1, r3
 8103972:	f04f 0c0a 	mov.w	ip, #10
 8103976:	4620      	mov	r0, r4
 8103978:	f810 2b01 	ldrb.w	r2, [r0], #1
 810397c:	3a30      	subs	r2, #48	; 0x30
 810397e:	2a09      	cmp	r2, #9
 8103980:	d903      	bls.n	810398a <_vfiprintf_r+0x1ee>
 8103982:	2b00      	cmp	r3, #0
 8103984:	d0c5      	beq.n	8103912 <_vfiprintf_r+0x176>
 8103986:	9105      	str	r1, [sp, #20]
 8103988:	e7c3      	b.n	8103912 <_vfiprintf_r+0x176>
 810398a:	fb0c 2101 	mla	r1, ip, r1, r2
 810398e:	4604      	mov	r4, r0
 8103990:	2301      	movs	r3, #1
 8103992:	e7f0      	b.n	8103976 <_vfiprintf_r+0x1da>
 8103994:	ab03      	add	r3, sp, #12
 8103996:	9300      	str	r3, [sp, #0]
 8103998:	462a      	mov	r2, r5
 810399a:	4b16      	ldr	r3, [pc, #88]	; (81039f4 <_vfiprintf_r+0x258>)
 810399c:	a904      	add	r1, sp, #16
 810399e:	4630      	mov	r0, r6
 81039a0:	f7fd ff9a 	bl	81018d8 <_printf_float>
 81039a4:	4607      	mov	r7, r0
 81039a6:	1c78      	adds	r0, r7, #1
 81039a8:	d1d6      	bne.n	8103958 <_vfiprintf_r+0x1bc>
 81039aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 81039ac:	07d9      	lsls	r1, r3, #31
 81039ae:	d405      	bmi.n	81039bc <_vfiprintf_r+0x220>
 81039b0:	89ab      	ldrh	r3, [r5, #12]
 81039b2:	059a      	lsls	r2, r3, #22
 81039b4:	d402      	bmi.n	81039bc <_vfiprintf_r+0x220>
 81039b6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 81039b8:	f000 faaf 	bl	8103f1a <__retarget_lock_release_recursive>
 81039bc:	89ab      	ldrh	r3, [r5, #12]
 81039be:	065b      	lsls	r3, r3, #25
 81039c0:	f53f af12 	bmi.w	81037e8 <_vfiprintf_r+0x4c>
 81039c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 81039c6:	e711      	b.n	81037ec <_vfiprintf_r+0x50>
 81039c8:	ab03      	add	r3, sp, #12
 81039ca:	9300      	str	r3, [sp, #0]
 81039cc:	462a      	mov	r2, r5
 81039ce:	4b09      	ldr	r3, [pc, #36]	; (81039f4 <_vfiprintf_r+0x258>)
 81039d0:	a904      	add	r1, sp, #16
 81039d2:	4630      	mov	r0, r6
 81039d4:	f7fe fa24 	bl	8101e20 <_printf_i>
 81039d8:	e7e4      	b.n	81039a4 <_vfiprintf_r+0x208>
 81039da:	bf00      	nop
 81039dc:	0810458c 	.word	0x0810458c
 81039e0:	081045ac 	.word	0x081045ac
 81039e4:	0810456c 	.word	0x0810456c
 81039e8:	0810445a 	.word	0x0810445a
 81039ec:	08104464 	.word	0x08104464
 81039f0:	081018d9 	.word	0x081018d9
 81039f4:	08103777 	.word	0x08103777
 81039f8:	08104460 	.word	0x08104460

081039fc <__swbuf_r>:
 81039fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 81039fe:	460e      	mov	r6, r1
 8103a00:	4614      	mov	r4, r2
 8103a02:	4605      	mov	r5, r0
 8103a04:	b118      	cbz	r0, 8103a0e <__swbuf_r+0x12>
 8103a06:	6983      	ldr	r3, [r0, #24]
 8103a08:	b90b      	cbnz	r3, 8103a0e <__swbuf_r+0x12>
 8103a0a:	f000 f9e7 	bl	8103ddc <__sinit>
 8103a0e:	4b21      	ldr	r3, [pc, #132]	; (8103a94 <__swbuf_r+0x98>)
 8103a10:	429c      	cmp	r4, r3
 8103a12:	d12b      	bne.n	8103a6c <__swbuf_r+0x70>
 8103a14:	686c      	ldr	r4, [r5, #4]
 8103a16:	69a3      	ldr	r3, [r4, #24]
 8103a18:	60a3      	str	r3, [r4, #8]
 8103a1a:	89a3      	ldrh	r3, [r4, #12]
 8103a1c:	071a      	lsls	r2, r3, #28
 8103a1e:	d52f      	bpl.n	8103a80 <__swbuf_r+0x84>
 8103a20:	6923      	ldr	r3, [r4, #16]
 8103a22:	b36b      	cbz	r3, 8103a80 <__swbuf_r+0x84>
 8103a24:	6923      	ldr	r3, [r4, #16]
 8103a26:	6820      	ldr	r0, [r4, #0]
 8103a28:	1ac0      	subs	r0, r0, r3
 8103a2a:	6963      	ldr	r3, [r4, #20]
 8103a2c:	b2f6      	uxtb	r6, r6
 8103a2e:	4283      	cmp	r3, r0
 8103a30:	4637      	mov	r7, r6
 8103a32:	dc04      	bgt.n	8103a3e <__swbuf_r+0x42>
 8103a34:	4621      	mov	r1, r4
 8103a36:	4628      	mov	r0, r5
 8103a38:	f000 f93c 	bl	8103cb4 <_fflush_r>
 8103a3c:	bb30      	cbnz	r0, 8103a8c <__swbuf_r+0x90>
 8103a3e:	68a3      	ldr	r3, [r4, #8]
 8103a40:	3b01      	subs	r3, #1
 8103a42:	60a3      	str	r3, [r4, #8]
 8103a44:	6823      	ldr	r3, [r4, #0]
 8103a46:	1c5a      	adds	r2, r3, #1
 8103a48:	6022      	str	r2, [r4, #0]
 8103a4a:	701e      	strb	r6, [r3, #0]
 8103a4c:	6963      	ldr	r3, [r4, #20]
 8103a4e:	3001      	adds	r0, #1
 8103a50:	4283      	cmp	r3, r0
 8103a52:	d004      	beq.n	8103a5e <__swbuf_r+0x62>
 8103a54:	89a3      	ldrh	r3, [r4, #12]
 8103a56:	07db      	lsls	r3, r3, #31
 8103a58:	d506      	bpl.n	8103a68 <__swbuf_r+0x6c>
 8103a5a:	2e0a      	cmp	r6, #10
 8103a5c:	d104      	bne.n	8103a68 <__swbuf_r+0x6c>
 8103a5e:	4621      	mov	r1, r4
 8103a60:	4628      	mov	r0, r5
 8103a62:	f000 f927 	bl	8103cb4 <_fflush_r>
 8103a66:	b988      	cbnz	r0, 8103a8c <__swbuf_r+0x90>
 8103a68:	4638      	mov	r0, r7
 8103a6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8103a6c:	4b0a      	ldr	r3, [pc, #40]	; (8103a98 <__swbuf_r+0x9c>)
 8103a6e:	429c      	cmp	r4, r3
 8103a70:	d101      	bne.n	8103a76 <__swbuf_r+0x7a>
 8103a72:	68ac      	ldr	r4, [r5, #8]
 8103a74:	e7cf      	b.n	8103a16 <__swbuf_r+0x1a>
 8103a76:	4b09      	ldr	r3, [pc, #36]	; (8103a9c <__swbuf_r+0xa0>)
 8103a78:	429c      	cmp	r4, r3
 8103a7a:	bf08      	it	eq
 8103a7c:	68ec      	ldreq	r4, [r5, #12]
 8103a7e:	e7ca      	b.n	8103a16 <__swbuf_r+0x1a>
 8103a80:	4621      	mov	r1, r4
 8103a82:	4628      	mov	r0, r5
 8103a84:	f000 f81a 	bl	8103abc <__swsetup_r>
 8103a88:	2800      	cmp	r0, #0
 8103a8a:	d0cb      	beq.n	8103a24 <__swbuf_r+0x28>
 8103a8c:	f04f 37ff 	mov.w	r7, #4294967295
 8103a90:	e7ea      	b.n	8103a68 <__swbuf_r+0x6c>
 8103a92:	bf00      	nop
 8103a94:	0810458c 	.word	0x0810458c
 8103a98:	081045ac 	.word	0x081045ac
 8103a9c:	0810456c 	.word	0x0810456c

08103aa0 <__ascii_wctomb>:
 8103aa0:	b149      	cbz	r1, 8103ab6 <__ascii_wctomb+0x16>
 8103aa2:	2aff      	cmp	r2, #255	; 0xff
 8103aa4:	bf85      	ittet	hi
 8103aa6:	238a      	movhi	r3, #138	; 0x8a
 8103aa8:	6003      	strhi	r3, [r0, #0]
 8103aaa:	700a      	strbls	r2, [r1, #0]
 8103aac:	f04f 30ff 	movhi.w	r0, #4294967295
 8103ab0:	bf98      	it	ls
 8103ab2:	2001      	movls	r0, #1
 8103ab4:	4770      	bx	lr
 8103ab6:	4608      	mov	r0, r1
 8103ab8:	4770      	bx	lr
	...

08103abc <__swsetup_r>:
 8103abc:	4b32      	ldr	r3, [pc, #200]	; (8103b88 <__swsetup_r+0xcc>)
 8103abe:	b570      	push	{r4, r5, r6, lr}
 8103ac0:	681d      	ldr	r5, [r3, #0]
 8103ac2:	4606      	mov	r6, r0
 8103ac4:	460c      	mov	r4, r1
 8103ac6:	b125      	cbz	r5, 8103ad2 <__swsetup_r+0x16>
 8103ac8:	69ab      	ldr	r3, [r5, #24]
 8103aca:	b913      	cbnz	r3, 8103ad2 <__swsetup_r+0x16>
 8103acc:	4628      	mov	r0, r5
 8103ace:	f000 f985 	bl	8103ddc <__sinit>
 8103ad2:	4b2e      	ldr	r3, [pc, #184]	; (8103b8c <__swsetup_r+0xd0>)
 8103ad4:	429c      	cmp	r4, r3
 8103ad6:	d10f      	bne.n	8103af8 <__swsetup_r+0x3c>
 8103ad8:	686c      	ldr	r4, [r5, #4]
 8103ada:	89a3      	ldrh	r3, [r4, #12]
 8103adc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8103ae0:	0719      	lsls	r1, r3, #28
 8103ae2:	d42c      	bmi.n	8103b3e <__swsetup_r+0x82>
 8103ae4:	06dd      	lsls	r5, r3, #27
 8103ae6:	d411      	bmi.n	8103b0c <__swsetup_r+0x50>
 8103ae8:	2309      	movs	r3, #9
 8103aea:	6033      	str	r3, [r6, #0]
 8103aec:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8103af0:	81a3      	strh	r3, [r4, #12]
 8103af2:	f04f 30ff 	mov.w	r0, #4294967295
 8103af6:	e03e      	b.n	8103b76 <__swsetup_r+0xba>
 8103af8:	4b25      	ldr	r3, [pc, #148]	; (8103b90 <__swsetup_r+0xd4>)
 8103afa:	429c      	cmp	r4, r3
 8103afc:	d101      	bne.n	8103b02 <__swsetup_r+0x46>
 8103afe:	68ac      	ldr	r4, [r5, #8]
 8103b00:	e7eb      	b.n	8103ada <__swsetup_r+0x1e>
 8103b02:	4b24      	ldr	r3, [pc, #144]	; (8103b94 <__swsetup_r+0xd8>)
 8103b04:	429c      	cmp	r4, r3
 8103b06:	bf08      	it	eq
 8103b08:	68ec      	ldreq	r4, [r5, #12]
 8103b0a:	e7e6      	b.n	8103ada <__swsetup_r+0x1e>
 8103b0c:	0758      	lsls	r0, r3, #29
 8103b0e:	d512      	bpl.n	8103b36 <__swsetup_r+0x7a>
 8103b10:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8103b12:	b141      	cbz	r1, 8103b26 <__swsetup_r+0x6a>
 8103b14:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8103b18:	4299      	cmp	r1, r3
 8103b1a:	d002      	beq.n	8103b22 <__swsetup_r+0x66>
 8103b1c:	4630      	mov	r0, r6
 8103b1e:	f7ff fcd5 	bl	81034cc <_free_r>
 8103b22:	2300      	movs	r3, #0
 8103b24:	6363      	str	r3, [r4, #52]	; 0x34
 8103b26:	89a3      	ldrh	r3, [r4, #12]
 8103b28:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8103b2c:	81a3      	strh	r3, [r4, #12]
 8103b2e:	2300      	movs	r3, #0
 8103b30:	6063      	str	r3, [r4, #4]
 8103b32:	6923      	ldr	r3, [r4, #16]
 8103b34:	6023      	str	r3, [r4, #0]
 8103b36:	89a3      	ldrh	r3, [r4, #12]
 8103b38:	f043 0308 	orr.w	r3, r3, #8
 8103b3c:	81a3      	strh	r3, [r4, #12]
 8103b3e:	6923      	ldr	r3, [r4, #16]
 8103b40:	b94b      	cbnz	r3, 8103b56 <__swsetup_r+0x9a>
 8103b42:	89a3      	ldrh	r3, [r4, #12]
 8103b44:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8103b48:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8103b4c:	d003      	beq.n	8103b56 <__swsetup_r+0x9a>
 8103b4e:	4621      	mov	r1, r4
 8103b50:	4630      	mov	r0, r6
 8103b52:	f000 fa09 	bl	8103f68 <__smakebuf_r>
 8103b56:	89a0      	ldrh	r0, [r4, #12]
 8103b58:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8103b5c:	f010 0301 	ands.w	r3, r0, #1
 8103b60:	d00a      	beq.n	8103b78 <__swsetup_r+0xbc>
 8103b62:	2300      	movs	r3, #0
 8103b64:	60a3      	str	r3, [r4, #8]
 8103b66:	6963      	ldr	r3, [r4, #20]
 8103b68:	425b      	negs	r3, r3
 8103b6a:	61a3      	str	r3, [r4, #24]
 8103b6c:	6923      	ldr	r3, [r4, #16]
 8103b6e:	b943      	cbnz	r3, 8103b82 <__swsetup_r+0xc6>
 8103b70:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8103b74:	d1ba      	bne.n	8103aec <__swsetup_r+0x30>
 8103b76:	bd70      	pop	{r4, r5, r6, pc}
 8103b78:	0781      	lsls	r1, r0, #30
 8103b7a:	bf58      	it	pl
 8103b7c:	6963      	ldrpl	r3, [r4, #20]
 8103b7e:	60a3      	str	r3, [r4, #8]
 8103b80:	e7f4      	b.n	8103b6c <__swsetup_r+0xb0>
 8103b82:	2000      	movs	r0, #0
 8103b84:	e7f7      	b.n	8103b76 <__swsetup_r+0xba>
 8103b86:	bf00      	nop
 8103b88:	10000010 	.word	0x10000010
 8103b8c:	0810458c 	.word	0x0810458c
 8103b90:	081045ac 	.word	0x081045ac
 8103b94:	0810456c 	.word	0x0810456c

08103b98 <abort>:
 8103b98:	b508      	push	{r3, lr}
 8103b9a:	2006      	movs	r0, #6
 8103b9c:	f000 fa4c 	bl	8104038 <raise>
 8103ba0:	2001      	movs	r0, #1
 8103ba2:	f7fd f93b 	bl	8100e1c <_exit>
	...

08103ba8 <__sflush_r>:
 8103ba8:	898a      	ldrh	r2, [r1, #12]
 8103baa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8103bae:	4605      	mov	r5, r0
 8103bb0:	0710      	lsls	r0, r2, #28
 8103bb2:	460c      	mov	r4, r1
 8103bb4:	d458      	bmi.n	8103c68 <__sflush_r+0xc0>
 8103bb6:	684b      	ldr	r3, [r1, #4]
 8103bb8:	2b00      	cmp	r3, #0
 8103bba:	dc05      	bgt.n	8103bc8 <__sflush_r+0x20>
 8103bbc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8103bbe:	2b00      	cmp	r3, #0
 8103bc0:	dc02      	bgt.n	8103bc8 <__sflush_r+0x20>
 8103bc2:	2000      	movs	r0, #0
 8103bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8103bc8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8103bca:	2e00      	cmp	r6, #0
 8103bcc:	d0f9      	beq.n	8103bc2 <__sflush_r+0x1a>
 8103bce:	2300      	movs	r3, #0
 8103bd0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8103bd4:	682f      	ldr	r7, [r5, #0]
 8103bd6:	602b      	str	r3, [r5, #0]
 8103bd8:	d032      	beq.n	8103c40 <__sflush_r+0x98>
 8103bda:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8103bdc:	89a3      	ldrh	r3, [r4, #12]
 8103bde:	075a      	lsls	r2, r3, #29
 8103be0:	d505      	bpl.n	8103bee <__sflush_r+0x46>
 8103be2:	6863      	ldr	r3, [r4, #4]
 8103be4:	1ac0      	subs	r0, r0, r3
 8103be6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8103be8:	b10b      	cbz	r3, 8103bee <__sflush_r+0x46>
 8103bea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8103bec:	1ac0      	subs	r0, r0, r3
 8103bee:	2300      	movs	r3, #0
 8103bf0:	4602      	mov	r2, r0
 8103bf2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8103bf4:	6a21      	ldr	r1, [r4, #32]
 8103bf6:	4628      	mov	r0, r5
 8103bf8:	47b0      	blx	r6
 8103bfa:	1c43      	adds	r3, r0, #1
 8103bfc:	89a3      	ldrh	r3, [r4, #12]
 8103bfe:	d106      	bne.n	8103c0e <__sflush_r+0x66>
 8103c00:	6829      	ldr	r1, [r5, #0]
 8103c02:	291d      	cmp	r1, #29
 8103c04:	d82c      	bhi.n	8103c60 <__sflush_r+0xb8>
 8103c06:	4a2a      	ldr	r2, [pc, #168]	; (8103cb0 <__sflush_r+0x108>)
 8103c08:	40ca      	lsrs	r2, r1
 8103c0a:	07d6      	lsls	r6, r2, #31
 8103c0c:	d528      	bpl.n	8103c60 <__sflush_r+0xb8>
 8103c0e:	2200      	movs	r2, #0
 8103c10:	6062      	str	r2, [r4, #4]
 8103c12:	04d9      	lsls	r1, r3, #19
 8103c14:	6922      	ldr	r2, [r4, #16]
 8103c16:	6022      	str	r2, [r4, #0]
 8103c18:	d504      	bpl.n	8103c24 <__sflush_r+0x7c>
 8103c1a:	1c42      	adds	r2, r0, #1
 8103c1c:	d101      	bne.n	8103c22 <__sflush_r+0x7a>
 8103c1e:	682b      	ldr	r3, [r5, #0]
 8103c20:	b903      	cbnz	r3, 8103c24 <__sflush_r+0x7c>
 8103c22:	6560      	str	r0, [r4, #84]	; 0x54
 8103c24:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8103c26:	602f      	str	r7, [r5, #0]
 8103c28:	2900      	cmp	r1, #0
 8103c2a:	d0ca      	beq.n	8103bc2 <__sflush_r+0x1a>
 8103c2c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8103c30:	4299      	cmp	r1, r3
 8103c32:	d002      	beq.n	8103c3a <__sflush_r+0x92>
 8103c34:	4628      	mov	r0, r5
 8103c36:	f7ff fc49 	bl	81034cc <_free_r>
 8103c3a:	2000      	movs	r0, #0
 8103c3c:	6360      	str	r0, [r4, #52]	; 0x34
 8103c3e:	e7c1      	b.n	8103bc4 <__sflush_r+0x1c>
 8103c40:	6a21      	ldr	r1, [r4, #32]
 8103c42:	2301      	movs	r3, #1
 8103c44:	4628      	mov	r0, r5
 8103c46:	47b0      	blx	r6
 8103c48:	1c41      	adds	r1, r0, #1
 8103c4a:	d1c7      	bne.n	8103bdc <__sflush_r+0x34>
 8103c4c:	682b      	ldr	r3, [r5, #0]
 8103c4e:	2b00      	cmp	r3, #0
 8103c50:	d0c4      	beq.n	8103bdc <__sflush_r+0x34>
 8103c52:	2b1d      	cmp	r3, #29
 8103c54:	d001      	beq.n	8103c5a <__sflush_r+0xb2>
 8103c56:	2b16      	cmp	r3, #22
 8103c58:	d101      	bne.n	8103c5e <__sflush_r+0xb6>
 8103c5a:	602f      	str	r7, [r5, #0]
 8103c5c:	e7b1      	b.n	8103bc2 <__sflush_r+0x1a>
 8103c5e:	89a3      	ldrh	r3, [r4, #12]
 8103c60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8103c64:	81a3      	strh	r3, [r4, #12]
 8103c66:	e7ad      	b.n	8103bc4 <__sflush_r+0x1c>
 8103c68:	690f      	ldr	r7, [r1, #16]
 8103c6a:	2f00      	cmp	r7, #0
 8103c6c:	d0a9      	beq.n	8103bc2 <__sflush_r+0x1a>
 8103c6e:	0793      	lsls	r3, r2, #30
 8103c70:	680e      	ldr	r6, [r1, #0]
 8103c72:	bf08      	it	eq
 8103c74:	694b      	ldreq	r3, [r1, #20]
 8103c76:	600f      	str	r7, [r1, #0]
 8103c78:	bf18      	it	ne
 8103c7a:	2300      	movne	r3, #0
 8103c7c:	eba6 0807 	sub.w	r8, r6, r7
 8103c80:	608b      	str	r3, [r1, #8]
 8103c82:	f1b8 0f00 	cmp.w	r8, #0
 8103c86:	dd9c      	ble.n	8103bc2 <__sflush_r+0x1a>
 8103c88:	6a21      	ldr	r1, [r4, #32]
 8103c8a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8103c8c:	4643      	mov	r3, r8
 8103c8e:	463a      	mov	r2, r7
 8103c90:	4628      	mov	r0, r5
 8103c92:	47b0      	blx	r6
 8103c94:	2800      	cmp	r0, #0
 8103c96:	dc06      	bgt.n	8103ca6 <__sflush_r+0xfe>
 8103c98:	89a3      	ldrh	r3, [r4, #12]
 8103c9a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8103c9e:	81a3      	strh	r3, [r4, #12]
 8103ca0:	f04f 30ff 	mov.w	r0, #4294967295
 8103ca4:	e78e      	b.n	8103bc4 <__sflush_r+0x1c>
 8103ca6:	4407      	add	r7, r0
 8103ca8:	eba8 0800 	sub.w	r8, r8, r0
 8103cac:	e7e9      	b.n	8103c82 <__sflush_r+0xda>
 8103cae:	bf00      	nop
 8103cb0:	20400001 	.word	0x20400001

08103cb4 <_fflush_r>:
 8103cb4:	b538      	push	{r3, r4, r5, lr}
 8103cb6:	690b      	ldr	r3, [r1, #16]
 8103cb8:	4605      	mov	r5, r0
 8103cba:	460c      	mov	r4, r1
 8103cbc:	b913      	cbnz	r3, 8103cc4 <_fflush_r+0x10>
 8103cbe:	2500      	movs	r5, #0
 8103cc0:	4628      	mov	r0, r5
 8103cc2:	bd38      	pop	{r3, r4, r5, pc}
 8103cc4:	b118      	cbz	r0, 8103cce <_fflush_r+0x1a>
 8103cc6:	6983      	ldr	r3, [r0, #24]
 8103cc8:	b90b      	cbnz	r3, 8103cce <_fflush_r+0x1a>
 8103cca:	f000 f887 	bl	8103ddc <__sinit>
 8103cce:	4b14      	ldr	r3, [pc, #80]	; (8103d20 <_fflush_r+0x6c>)
 8103cd0:	429c      	cmp	r4, r3
 8103cd2:	d11b      	bne.n	8103d0c <_fflush_r+0x58>
 8103cd4:	686c      	ldr	r4, [r5, #4]
 8103cd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8103cda:	2b00      	cmp	r3, #0
 8103cdc:	d0ef      	beq.n	8103cbe <_fflush_r+0xa>
 8103cde:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8103ce0:	07d0      	lsls	r0, r2, #31
 8103ce2:	d404      	bmi.n	8103cee <_fflush_r+0x3a>
 8103ce4:	0599      	lsls	r1, r3, #22
 8103ce6:	d402      	bmi.n	8103cee <_fflush_r+0x3a>
 8103ce8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8103cea:	f000 f915 	bl	8103f18 <__retarget_lock_acquire_recursive>
 8103cee:	4628      	mov	r0, r5
 8103cf0:	4621      	mov	r1, r4
 8103cf2:	f7ff ff59 	bl	8103ba8 <__sflush_r>
 8103cf6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8103cf8:	07da      	lsls	r2, r3, #31
 8103cfa:	4605      	mov	r5, r0
 8103cfc:	d4e0      	bmi.n	8103cc0 <_fflush_r+0xc>
 8103cfe:	89a3      	ldrh	r3, [r4, #12]
 8103d00:	059b      	lsls	r3, r3, #22
 8103d02:	d4dd      	bmi.n	8103cc0 <_fflush_r+0xc>
 8103d04:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8103d06:	f000 f908 	bl	8103f1a <__retarget_lock_release_recursive>
 8103d0a:	e7d9      	b.n	8103cc0 <_fflush_r+0xc>
 8103d0c:	4b05      	ldr	r3, [pc, #20]	; (8103d24 <_fflush_r+0x70>)
 8103d0e:	429c      	cmp	r4, r3
 8103d10:	d101      	bne.n	8103d16 <_fflush_r+0x62>
 8103d12:	68ac      	ldr	r4, [r5, #8]
 8103d14:	e7df      	b.n	8103cd6 <_fflush_r+0x22>
 8103d16:	4b04      	ldr	r3, [pc, #16]	; (8103d28 <_fflush_r+0x74>)
 8103d18:	429c      	cmp	r4, r3
 8103d1a:	bf08      	it	eq
 8103d1c:	68ec      	ldreq	r4, [r5, #12]
 8103d1e:	e7da      	b.n	8103cd6 <_fflush_r+0x22>
 8103d20:	0810458c 	.word	0x0810458c
 8103d24:	081045ac 	.word	0x081045ac
 8103d28:	0810456c 	.word	0x0810456c

08103d2c <std>:
 8103d2c:	2300      	movs	r3, #0
 8103d2e:	b510      	push	{r4, lr}
 8103d30:	4604      	mov	r4, r0
 8103d32:	e9c0 3300 	strd	r3, r3, [r0]
 8103d36:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8103d3a:	6083      	str	r3, [r0, #8]
 8103d3c:	8181      	strh	r1, [r0, #12]
 8103d3e:	6643      	str	r3, [r0, #100]	; 0x64
 8103d40:	81c2      	strh	r2, [r0, #14]
 8103d42:	6183      	str	r3, [r0, #24]
 8103d44:	4619      	mov	r1, r3
 8103d46:	2208      	movs	r2, #8
 8103d48:	305c      	adds	r0, #92	; 0x5c
 8103d4a:	f7fd fd1d 	bl	8101788 <memset>
 8103d4e:	4b05      	ldr	r3, [pc, #20]	; (8103d64 <std+0x38>)
 8103d50:	6263      	str	r3, [r4, #36]	; 0x24
 8103d52:	4b05      	ldr	r3, [pc, #20]	; (8103d68 <std+0x3c>)
 8103d54:	62a3      	str	r3, [r4, #40]	; 0x28
 8103d56:	4b05      	ldr	r3, [pc, #20]	; (8103d6c <std+0x40>)
 8103d58:	62e3      	str	r3, [r4, #44]	; 0x2c
 8103d5a:	4b05      	ldr	r3, [pc, #20]	; (8103d70 <std+0x44>)
 8103d5c:	6224      	str	r4, [r4, #32]
 8103d5e:	6323      	str	r3, [r4, #48]	; 0x30
 8103d60:	bd10      	pop	{r4, pc}
 8103d62:	bf00      	nop
 8103d64:	08104071 	.word	0x08104071
 8103d68:	08104093 	.word	0x08104093
 8103d6c:	081040cb 	.word	0x081040cb
 8103d70:	081040ef 	.word	0x081040ef

08103d74 <_cleanup_r>:
 8103d74:	4901      	ldr	r1, [pc, #4]	; (8103d7c <_cleanup_r+0x8>)
 8103d76:	f000 b8af 	b.w	8103ed8 <_fwalk_reent>
 8103d7a:	bf00      	nop
 8103d7c:	08103cb5 	.word	0x08103cb5

08103d80 <__sfmoreglue>:
 8103d80:	b570      	push	{r4, r5, r6, lr}
 8103d82:	2268      	movs	r2, #104	; 0x68
 8103d84:	1e4d      	subs	r5, r1, #1
 8103d86:	4355      	muls	r5, r2
 8103d88:	460e      	mov	r6, r1
 8103d8a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8103d8e:	f7ff fc09 	bl	81035a4 <_malloc_r>
 8103d92:	4604      	mov	r4, r0
 8103d94:	b140      	cbz	r0, 8103da8 <__sfmoreglue+0x28>
 8103d96:	2100      	movs	r1, #0
 8103d98:	e9c0 1600 	strd	r1, r6, [r0]
 8103d9c:	300c      	adds	r0, #12
 8103d9e:	60a0      	str	r0, [r4, #8]
 8103da0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8103da4:	f7fd fcf0 	bl	8101788 <memset>
 8103da8:	4620      	mov	r0, r4
 8103daa:	bd70      	pop	{r4, r5, r6, pc}

08103dac <__sfp_lock_acquire>:
 8103dac:	4801      	ldr	r0, [pc, #4]	; (8103db4 <__sfp_lock_acquire+0x8>)
 8103dae:	f000 b8b3 	b.w	8103f18 <__retarget_lock_acquire_recursive>
 8103db2:	bf00      	nop
 8103db4:	10000211 	.word	0x10000211

08103db8 <__sfp_lock_release>:
 8103db8:	4801      	ldr	r0, [pc, #4]	; (8103dc0 <__sfp_lock_release+0x8>)
 8103dba:	f000 b8ae 	b.w	8103f1a <__retarget_lock_release_recursive>
 8103dbe:	bf00      	nop
 8103dc0:	10000211 	.word	0x10000211

08103dc4 <__sinit_lock_acquire>:
 8103dc4:	4801      	ldr	r0, [pc, #4]	; (8103dcc <__sinit_lock_acquire+0x8>)
 8103dc6:	f000 b8a7 	b.w	8103f18 <__retarget_lock_acquire_recursive>
 8103dca:	bf00      	nop
 8103dcc:	10000212 	.word	0x10000212

08103dd0 <__sinit_lock_release>:
 8103dd0:	4801      	ldr	r0, [pc, #4]	; (8103dd8 <__sinit_lock_release+0x8>)
 8103dd2:	f000 b8a2 	b.w	8103f1a <__retarget_lock_release_recursive>
 8103dd6:	bf00      	nop
 8103dd8:	10000212 	.word	0x10000212

08103ddc <__sinit>:
 8103ddc:	b510      	push	{r4, lr}
 8103dde:	4604      	mov	r4, r0
 8103de0:	f7ff fff0 	bl	8103dc4 <__sinit_lock_acquire>
 8103de4:	69a3      	ldr	r3, [r4, #24]
 8103de6:	b11b      	cbz	r3, 8103df0 <__sinit+0x14>
 8103de8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8103dec:	f7ff bff0 	b.w	8103dd0 <__sinit_lock_release>
 8103df0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8103df4:	6523      	str	r3, [r4, #80]	; 0x50
 8103df6:	4b13      	ldr	r3, [pc, #76]	; (8103e44 <__sinit+0x68>)
 8103df8:	4a13      	ldr	r2, [pc, #76]	; (8103e48 <__sinit+0x6c>)
 8103dfa:	681b      	ldr	r3, [r3, #0]
 8103dfc:	62a2      	str	r2, [r4, #40]	; 0x28
 8103dfe:	42a3      	cmp	r3, r4
 8103e00:	bf04      	itt	eq
 8103e02:	2301      	moveq	r3, #1
 8103e04:	61a3      	streq	r3, [r4, #24]
 8103e06:	4620      	mov	r0, r4
 8103e08:	f000 f820 	bl	8103e4c <__sfp>
 8103e0c:	6060      	str	r0, [r4, #4]
 8103e0e:	4620      	mov	r0, r4
 8103e10:	f000 f81c 	bl	8103e4c <__sfp>
 8103e14:	60a0      	str	r0, [r4, #8]
 8103e16:	4620      	mov	r0, r4
 8103e18:	f000 f818 	bl	8103e4c <__sfp>
 8103e1c:	2200      	movs	r2, #0
 8103e1e:	60e0      	str	r0, [r4, #12]
 8103e20:	2104      	movs	r1, #4
 8103e22:	6860      	ldr	r0, [r4, #4]
 8103e24:	f7ff ff82 	bl	8103d2c <std>
 8103e28:	68a0      	ldr	r0, [r4, #8]
 8103e2a:	2201      	movs	r2, #1
 8103e2c:	2109      	movs	r1, #9
 8103e2e:	f7ff ff7d 	bl	8103d2c <std>
 8103e32:	68e0      	ldr	r0, [r4, #12]
 8103e34:	2202      	movs	r2, #2
 8103e36:	2112      	movs	r1, #18
 8103e38:	f7ff ff78 	bl	8103d2c <std>
 8103e3c:	2301      	movs	r3, #1
 8103e3e:	61a3      	str	r3, [r4, #24]
 8103e40:	e7d2      	b.n	8103de8 <__sinit+0xc>
 8103e42:	bf00      	nop
 8103e44:	081041f0 	.word	0x081041f0
 8103e48:	08103d75 	.word	0x08103d75

08103e4c <__sfp>:
 8103e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8103e4e:	4607      	mov	r7, r0
 8103e50:	f7ff ffac 	bl	8103dac <__sfp_lock_acquire>
 8103e54:	4b1e      	ldr	r3, [pc, #120]	; (8103ed0 <__sfp+0x84>)
 8103e56:	681e      	ldr	r6, [r3, #0]
 8103e58:	69b3      	ldr	r3, [r6, #24]
 8103e5a:	b913      	cbnz	r3, 8103e62 <__sfp+0x16>
 8103e5c:	4630      	mov	r0, r6
 8103e5e:	f7ff ffbd 	bl	8103ddc <__sinit>
 8103e62:	3648      	adds	r6, #72	; 0x48
 8103e64:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8103e68:	3b01      	subs	r3, #1
 8103e6a:	d503      	bpl.n	8103e74 <__sfp+0x28>
 8103e6c:	6833      	ldr	r3, [r6, #0]
 8103e6e:	b30b      	cbz	r3, 8103eb4 <__sfp+0x68>
 8103e70:	6836      	ldr	r6, [r6, #0]
 8103e72:	e7f7      	b.n	8103e64 <__sfp+0x18>
 8103e74:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8103e78:	b9d5      	cbnz	r5, 8103eb0 <__sfp+0x64>
 8103e7a:	4b16      	ldr	r3, [pc, #88]	; (8103ed4 <__sfp+0x88>)
 8103e7c:	60e3      	str	r3, [r4, #12]
 8103e7e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8103e82:	6665      	str	r5, [r4, #100]	; 0x64
 8103e84:	f000 f847 	bl	8103f16 <__retarget_lock_init_recursive>
 8103e88:	f7ff ff96 	bl	8103db8 <__sfp_lock_release>
 8103e8c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8103e90:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8103e94:	6025      	str	r5, [r4, #0]
 8103e96:	61a5      	str	r5, [r4, #24]
 8103e98:	2208      	movs	r2, #8
 8103e9a:	4629      	mov	r1, r5
 8103e9c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8103ea0:	f7fd fc72 	bl	8101788 <memset>
 8103ea4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8103ea8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8103eac:	4620      	mov	r0, r4
 8103eae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8103eb0:	3468      	adds	r4, #104	; 0x68
 8103eb2:	e7d9      	b.n	8103e68 <__sfp+0x1c>
 8103eb4:	2104      	movs	r1, #4
 8103eb6:	4638      	mov	r0, r7
 8103eb8:	f7ff ff62 	bl	8103d80 <__sfmoreglue>
 8103ebc:	4604      	mov	r4, r0
 8103ebe:	6030      	str	r0, [r6, #0]
 8103ec0:	2800      	cmp	r0, #0
 8103ec2:	d1d5      	bne.n	8103e70 <__sfp+0x24>
 8103ec4:	f7ff ff78 	bl	8103db8 <__sfp_lock_release>
 8103ec8:	230c      	movs	r3, #12
 8103eca:	603b      	str	r3, [r7, #0]
 8103ecc:	e7ee      	b.n	8103eac <__sfp+0x60>
 8103ece:	bf00      	nop
 8103ed0:	081041f0 	.word	0x081041f0
 8103ed4:	ffff0001 	.word	0xffff0001

08103ed8 <_fwalk_reent>:
 8103ed8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8103edc:	4606      	mov	r6, r0
 8103ede:	4688      	mov	r8, r1
 8103ee0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8103ee4:	2700      	movs	r7, #0
 8103ee6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8103eea:	f1b9 0901 	subs.w	r9, r9, #1
 8103eee:	d505      	bpl.n	8103efc <_fwalk_reent+0x24>
 8103ef0:	6824      	ldr	r4, [r4, #0]
 8103ef2:	2c00      	cmp	r4, #0
 8103ef4:	d1f7      	bne.n	8103ee6 <_fwalk_reent+0xe>
 8103ef6:	4638      	mov	r0, r7
 8103ef8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8103efc:	89ab      	ldrh	r3, [r5, #12]
 8103efe:	2b01      	cmp	r3, #1
 8103f00:	d907      	bls.n	8103f12 <_fwalk_reent+0x3a>
 8103f02:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8103f06:	3301      	adds	r3, #1
 8103f08:	d003      	beq.n	8103f12 <_fwalk_reent+0x3a>
 8103f0a:	4629      	mov	r1, r5
 8103f0c:	4630      	mov	r0, r6
 8103f0e:	47c0      	blx	r8
 8103f10:	4307      	orrs	r7, r0
 8103f12:	3568      	adds	r5, #104	; 0x68
 8103f14:	e7e9      	b.n	8103eea <_fwalk_reent+0x12>

08103f16 <__retarget_lock_init_recursive>:
 8103f16:	4770      	bx	lr

08103f18 <__retarget_lock_acquire_recursive>:
 8103f18:	4770      	bx	lr

08103f1a <__retarget_lock_release_recursive>:
 8103f1a:	4770      	bx	lr

08103f1c <__swhatbuf_r>:
 8103f1c:	b570      	push	{r4, r5, r6, lr}
 8103f1e:	460e      	mov	r6, r1
 8103f20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8103f24:	2900      	cmp	r1, #0
 8103f26:	b096      	sub	sp, #88	; 0x58
 8103f28:	4614      	mov	r4, r2
 8103f2a:	461d      	mov	r5, r3
 8103f2c:	da08      	bge.n	8103f40 <__swhatbuf_r+0x24>
 8103f2e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8103f32:	2200      	movs	r2, #0
 8103f34:	602a      	str	r2, [r5, #0]
 8103f36:	061a      	lsls	r2, r3, #24
 8103f38:	d410      	bmi.n	8103f5c <__swhatbuf_r+0x40>
 8103f3a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8103f3e:	e00e      	b.n	8103f5e <__swhatbuf_r+0x42>
 8103f40:	466a      	mov	r2, sp
 8103f42:	f000 f8fb 	bl	810413c <_fstat_r>
 8103f46:	2800      	cmp	r0, #0
 8103f48:	dbf1      	blt.n	8103f2e <__swhatbuf_r+0x12>
 8103f4a:	9a01      	ldr	r2, [sp, #4]
 8103f4c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8103f50:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8103f54:	425a      	negs	r2, r3
 8103f56:	415a      	adcs	r2, r3
 8103f58:	602a      	str	r2, [r5, #0]
 8103f5a:	e7ee      	b.n	8103f3a <__swhatbuf_r+0x1e>
 8103f5c:	2340      	movs	r3, #64	; 0x40
 8103f5e:	2000      	movs	r0, #0
 8103f60:	6023      	str	r3, [r4, #0]
 8103f62:	b016      	add	sp, #88	; 0x58
 8103f64:	bd70      	pop	{r4, r5, r6, pc}
	...

08103f68 <__smakebuf_r>:
 8103f68:	898b      	ldrh	r3, [r1, #12]
 8103f6a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8103f6c:	079d      	lsls	r5, r3, #30
 8103f6e:	4606      	mov	r6, r0
 8103f70:	460c      	mov	r4, r1
 8103f72:	d507      	bpl.n	8103f84 <__smakebuf_r+0x1c>
 8103f74:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8103f78:	6023      	str	r3, [r4, #0]
 8103f7a:	6123      	str	r3, [r4, #16]
 8103f7c:	2301      	movs	r3, #1
 8103f7e:	6163      	str	r3, [r4, #20]
 8103f80:	b002      	add	sp, #8
 8103f82:	bd70      	pop	{r4, r5, r6, pc}
 8103f84:	ab01      	add	r3, sp, #4
 8103f86:	466a      	mov	r2, sp
 8103f88:	f7ff ffc8 	bl	8103f1c <__swhatbuf_r>
 8103f8c:	9900      	ldr	r1, [sp, #0]
 8103f8e:	4605      	mov	r5, r0
 8103f90:	4630      	mov	r0, r6
 8103f92:	f7ff fb07 	bl	81035a4 <_malloc_r>
 8103f96:	b948      	cbnz	r0, 8103fac <__smakebuf_r+0x44>
 8103f98:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8103f9c:	059a      	lsls	r2, r3, #22
 8103f9e:	d4ef      	bmi.n	8103f80 <__smakebuf_r+0x18>
 8103fa0:	f023 0303 	bic.w	r3, r3, #3
 8103fa4:	f043 0302 	orr.w	r3, r3, #2
 8103fa8:	81a3      	strh	r3, [r4, #12]
 8103faa:	e7e3      	b.n	8103f74 <__smakebuf_r+0xc>
 8103fac:	4b0d      	ldr	r3, [pc, #52]	; (8103fe4 <__smakebuf_r+0x7c>)
 8103fae:	62b3      	str	r3, [r6, #40]	; 0x28
 8103fb0:	89a3      	ldrh	r3, [r4, #12]
 8103fb2:	6020      	str	r0, [r4, #0]
 8103fb4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8103fb8:	81a3      	strh	r3, [r4, #12]
 8103fba:	9b00      	ldr	r3, [sp, #0]
 8103fbc:	6163      	str	r3, [r4, #20]
 8103fbe:	9b01      	ldr	r3, [sp, #4]
 8103fc0:	6120      	str	r0, [r4, #16]
 8103fc2:	b15b      	cbz	r3, 8103fdc <__smakebuf_r+0x74>
 8103fc4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8103fc8:	4630      	mov	r0, r6
 8103fca:	f000 f8c9 	bl	8104160 <_isatty_r>
 8103fce:	b128      	cbz	r0, 8103fdc <__smakebuf_r+0x74>
 8103fd0:	89a3      	ldrh	r3, [r4, #12]
 8103fd2:	f023 0303 	bic.w	r3, r3, #3
 8103fd6:	f043 0301 	orr.w	r3, r3, #1
 8103fda:	81a3      	strh	r3, [r4, #12]
 8103fdc:	89a0      	ldrh	r0, [r4, #12]
 8103fde:	4305      	orrs	r5, r0
 8103fe0:	81a5      	strh	r5, [r4, #12]
 8103fe2:	e7cd      	b.n	8103f80 <__smakebuf_r+0x18>
 8103fe4:	08103d75 	.word	0x08103d75

08103fe8 <_raise_r>:
 8103fe8:	291f      	cmp	r1, #31
 8103fea:	b538      	push	{r3, r4, r5, lr}
 8103fec:	4604      	mov	r4, r0
 8103fee:	460d      	mov	r5, r1
 8103ff0:	d904      	bls.n	8103ffc <_raise_r+0x14>
 8103ff2:	2316      	movs	r3, #22
 8103ff4:	6003      	str	r3, [r0, #0]
 8103ff6:	f04f 30ff 	mov.w	r0, #4294967295
 8103ffa:	bd38      	pop	{r3, r4, r5, pc}
 8103ffc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8103ffe:	b112      	cbz	r2, 8104006 <_raise_r+0x1e>
 8104000:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8104004:	b94b      	cbnz	r3, 810401a <_raise_r+0x32>
 8104006:	4620      	mov	r0, r4
 8104008:	f000 f830 	bl	810406c <_getpid_r>
 810400c:	462a      	mov	r2, r5
 810400e:	4601      	mov	r1, r0
 8104010:	4620      	mov	r0, r4
 8104012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8104016:	f000 b817 	b.w	8104048 <_kill_r>
 810401a:	2b01      	cmp	r3, #1
 810401c:	d00a      	beq.n	8104034 <_raise_r+0x4c>
 810401e:	1c59      	adds	r1, r3, #1
 8104020:	d103      	bne.n	810402a <_raise_r+0x42>
 8104022:	2316      	movs	r3, #22
 8104024:	6003      	str	r3, [r0, #0]
 8104026:	2001      	movs	r0, #1
 8104028:	e7e7      	b.n	8103ffa <_raise_r+0x12>
 810402a:	2400      	movs	r4, #0
 810402c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8104030:	4628      	mov	r0, r5
 8104032:	4798      	blx	r3
 8104034:	2000      	movs	r0, #0
 8104036:	e7e0      	b.n	8103ffa <_raise_r+0x12>

08104038 <raise>:
 8104038:	4b02      	ldr	r3, [pc, #8]	; (8104044 <raise+0xc>)
 810403a:	4601      	mov	r1, r0
 810403c:	6818      	ldr	r0, [r3, #0]
 810403e:	f7ff bfd3 	b.w	8103fe8 <_raise_r>
 8104042:	bf00      	nop
 8104044:	10000010 	.word	0x10000010

08104048 <_kill_r>:
 8104048:	b538      	push	{r3, r4, r5, lr}
 810404a:	4d07      	ldr	r5, [pc, #28]	; (8104068 <_kill_r+0x20>)
 810404c:	2300      	movs	r3, #0
 810404e:	4604      	mov	r4, r0
 8104050:	4608      	mov	r0, r1
 8104052:	4611      	mov	r1, r2
 8104054:	602b      	str	r3, [r5, #0]
 8104056:	f7fc fed1 	bl	8100dfc <_kill>
 810405a:	1c43      	adds	r3, r0, #1
 810405c:	d102      	bne.n	8104064 <_kill_r+0x1c>
 810405e:	682b      	ldr	r3, [r5, #0]
 8104060:	b103      	cbz	r3, 8104064 <_kill_r+0x1c>
 8104062:	6023      	str	r3, [r4, #0]
 8104064:	bd38      	pop	{r3, r4, r5, pc}
 8104066:	bf00      	nop
 8104068:	1000020c 	.word	0x1000020c

0810406c <_getpid_r>:
 810406c:	f7fc bebe 	b.w	8100dec <_getpid>

08104070 <__sread>:
 8104070:	b510      	push	{r4, lr}
 8104072:	460c      	mov	r4, r1
 8104074:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8104078:	f000 f894 	bl	81041a4 <_read_r>
 810407c:	2800      	cmp	r0, #0
 810407e:	bfab      	itete	ge
 8104080:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8104082:	89a3      	ldrhlt	r3, [r4, #12]
 8104084:	181b      	addge	r3, r3, r0
 8104086:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 810408a:	bfac      	ite	ge
 810408c:	6563      	strge	r3, [r4, #84]	; 0x54
 810408e:	81a3      	strhlt	r3, [r4, #12]
 8104090:	bd10      	pop	{r4, pc}

08104092 <__swrite>:
 8104092:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8104096:	461f      	mov	r7, r3
 8104098:	898b      	ldrh	r3, [r1, #12]
 810409a:	05db      	lsls	r3, r3, #23
 810409c:	4605      	mov	r5, r0
 810409e:	460c      	mov	r4, r1
 81040a0:	4616      	mov	r6, r2
 81040a2:	d505      	bpl.n	81040b0 <__swrite+0x1e>
 81040a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 81040a8:	2302      	movs	r3, #2
 81040aa:	2200      	movs	r2, #0
 81040ac:	f000 f868 	bl	8104180 <_lseek_r>
 81040b0:	89a3      	ldrh	r3, [r4, #12]
 81040b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 81040b6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 81040ba:	81a3      	strh	r3, [r4, #12]
 81040bc:	4632      	mov	r2, r6
 81040be:	463b      	mov	r3, r7
 81040c0:	4628      	mov	r0, r5
 81040c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 81040c6:	f000 b817 	b.w	81040f8 <_write_r>

081040ca <__sseek>:
 81040ca:	b510      	push	{r4, lr}
 81040cc:	460c      	mov	r4, r1
 81040ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 81040d2:	f000 f855 	bl	8104180 <_lseek_r>
 81040d6:	1c43      	adds	r3, r0, #1
 81040d8:	89a3      	ldrh	r3, [r4, #12]
 81040da:	bf15      	itete	ne
 81040dc:	6560      	strne	r0, [r4, #84]	; 0x54
 81040de:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 81040e2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 81040e6:	81a3      	strheq	r3, [r4, #12]
 81040e8:	bf18      	it	ne
 81040ea:	81a3      	strhne	r3, [r4, #12]
 81040ec:	bd10      	pop	{r4, pc}

081040ee <__sclose>:
 81040ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 81040f2:	f000 b813 	b.w	810411c <_close_r>
	...

081040f8 <_write_r>:
 81040f8:	b538      	push	{r3, r4, r5, lr}
 81040fa:	4d07      	ldr	r5, [pc, #28]	; (8104118 <_write_r+0x20>)
 81040fc:	4604      	mov	r4, r0
 81040fe:	4608      	mov	r0, r1
 8104100:	4611      	mov	r1, r2
 8104102:	2200      	movs	r2, #0
 8104104:	602a      	str	r2, [r5, #0]
 8104106:	461a      	mov	r2, r3
 8104108:	f7fc feaf 	bl	8100e6a <_write>
 810410c:	1c43      	adds	r3, r0, #1
 810410e:	d102      	bne.n	8104116 <_write_r+0x1e>
 8104110:	682b      	ldr	r3, [r5, #0]
 8104112:	b103      	cbz	r3, 8104116 <_write_r+0x1e>
 8104114:	6023      	str	r3, [r4, #0]
 8104116:	bd38      	pop	{r3, r4, r5, pc}
 8104118:	1000020c 	.word	0x1000020c

0810411c <_close_r>:
 810411c:	b538      	push	{r3, r4, r5, lr}
 810411e:	4d06      	ldr	r5, [pc, #24]	; (8104138 <_close_r+0x1c>)
 8104120:	2300      	movs	r3, #0
 8104122:	4604      	mov	r4, r0
 8104124:	4608      	mov	r0, r1
 8104126:	602b      	str	r3, [r5, #0]
 8104128:	f7fc febb 	bl	8100ea2 <_close>
 810412c:	1c43      	adds	r3, r0, #1
 810412e:	d102      	bne.n	8104136 <_close_r+0x1a>
 8104130:	682b      	ldr	r3, [r5, #0]
 8104132:	b103      	cbz	r3, 8104136 <_close_r+0x1a>
 8104134:	6023      	str	r3, [r4, #0]
 8104136:	bd38      	pop	{r3, r4, r5, pc}
 8104138:	1000020c 	.word	0x1000020c

0810413c <_fstat_r>:
 810413c:	b538      	push	{r3, r4, r5, lr}
 810413e:	4d07      	ldr	r5, [pc, #28]	; (810415c <_fstat_r+0x20>)
 8104140:	2300      	movs	r3, #0
 8104142:	4604      	mov	r4, r0
 8104144:	4608      	mov	r0, r1
 8104146:	4611      	mov	r1, r2
 8104148:	602b      	str	r3, [r5, #0]
 810414a:	f7fc feb6 	bl	8100eba <_fstat>
 810414e:	1c43      	adds	r3, r0, #1
 8104150:	d102      	bne.n	8104158 <_fstat_r+0x1c>
 8104152:	682b      	ldr	r3, [r5, #0]
 8104154:	b103      	cbz	r3, 8104158 <_fstat_r+0x1c>
 8104156:	6023      	str	r3, [r4, #0]
 8104158:	bd38      	pop	{r3, r4, r5, pc}
 810415a:	bf00      	nop
 810415c:	1000020c 	.word	0x1000020c

08104160 <_isatty_r>:
 8104160:	b538      	push	{r3, r4, r5, lr}
 8104162:	4d06      	ldr	r5, [pc, #24]	; (810417c <_isatty_r+0x1c>)
 8104164:	2300      	movs	r3, #0
 8104166:	4604      	mov	r4, r0
 8104168:	4608      	mov	r0, r1
 810416a:	602b      	str	r3, [r5, #0]
 810416c:	f7fc feb5 	bl	8100eda <_isatty>
 8104170:	1c43      	adds	r3, r0, #1
 8104172:	d102      	bne.n	810417a <_isatty_r+0x1a>
 8104174:	682b      	ldr	r3, [r5, #0]
 8104176:	b103      	cbz	r3, 810417a <_isatty_r+0x1a>
 8104178:	6023      	str	r3, [r4, #0]
 810417a:	bd38      	pop	{r3, r4, r5, pc}
 810417c:	1000020c 	.word	0x1000020c

08104180 <_lseek_r>:
 8104180:	b538      	push	{r3, r4, r5, lr}
 8104182:	4d07      	ldr	r5, [pc, #28]	; (81041a0 <_lseek_r+0x20>)
 8104184:	4604      	mov	r4, r0
 8104186:	4608      	mov	r0, r1
 8104188:	4611      	mov	r1, r2
 810418a:	2200      	movs	r2, #0
 810418c:	602a      	str	r2, [r5, #0]
 810418e:	461a      	mov	r2, r3
 8104190:	f7fc feae 	bl	8100ef0 <_lseek>
 8104194:	1c43      	adds	r3, r0, #1
 8104196:	d102      	bne.n	810419e <_lseek_r+0x1e>
 8104198:	682b      	ldr	r3, [r5, #0]
 810419a:	b103      	cbz	r3, 810419e <_lseek_r+0x1e>
 810419c:	6023      	str	r3, [r4, #0]
 810419e:	bd38      	pop	{r3, r4, r5, pc}
 81041a0:	1000020c 	.word	0x1000020c

081041a4 <_read_r>:
 81041a4:	b538      	push	{r3, r4, r5, lr}
 81041a6:	4d07      	ldr	r5, [pc, #28]	; (81041c4 <_read_r+0x20>)
 81041a8:	4604      	mov	r4, r0
 81041aa:	4608      	mov	r0, r1
 81041ac:	4611      	mov	r1, r2
 81041ae:	2200      	movs	r2, #0
 81041b0:	602a      	str	r2, [r5, #0]
 81041b2:	461a      	mov	r2, r3
 81041b4:	f7fc fe3c 	bl	8100e30 <_read>
 81041b8:	1c43      	adds	r3, r0, #1
 81041ba:	d102      	bne.n	81041c2 <_read_r+0x1e>
 81041bc:	682b      	ldr	r3, [r5, #0]
 81041be:	b103      	cbz	r3, 81041c2 <_read_r+0x1e>
 81041c0:	6023      	str	r3, [r4, #0]
 81041c2:	bd38      	pop	{r3, r4, r5, pc}
 81041c4:	1000020c 	.word	0x1000020c

081041c8 <_init>:
 81041c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 81041ca:	bf00      	nop
 81041cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 81041ce:	bc08      	pop	{r3}
 81041d0:	469e      	mov	lr, r3
 81041d2:	4770      	bx	lr

081041d4 <_fini>:
 81041d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 81041d6:	bf00      	nop
 81041d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 81041da:	bc08      	pop	{r3}
 81041dc:	469e      	mov	lr, r3
 81041de:	4770      	bx	lr
